{"version":3,"file":"drawer-close-button.es.js","sources":["../../../src/components/drawer/drawer-close-button.tsx"],"sourcesContent":["import {\n\tcloneElement,\n\ttype ElementType,\n\tFragment,\n\tisValidElement,\n\ttype ReactNode,\n} from 'react';\nimport { useDrawerState } from './drawer';\nimport { cn } from '@/utilities/functions';\nimport { X } from 'lucide-react';\n\ninterface CommonProps {\n\t/** Additional class names. */\n\tclassName?: string;\n\t/** Additional props. */\n\t[key: string]: unknown;\n}\n\nexport interface DrawerDefaultCloseButtonProps extends CommonProps {\n\t/** Click handler. */\n\tonClick: () => void;\n}\n\nexport interface DrawerCloseButtonProps extends CommonProps {\n\t/** Button content. */\n\tchildren?: ReactNode | ( ( { close }: { close: () => void } ) => ReactNode );\n\t/** Button tag. */\n\tas?: ElementType;\n}\n\n// Default close button for the drawer.\nconst DefaultCloseButton = ( {\n\tclassName,\n\t...props\n}: DrawerDefaultCloseButtonProps ) => {\n\treturn (\n\t\t<button\n\t\t\tclassName={ cn(\n\t\t\t\t'bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label=\"Close drawer\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<X className=\"size-4 text-text-primary shrink-0\" />\n\t\t</button>\n\t);\n};\n\n// Close button for the drawer.\nconst DrawerCloseButton = ( {\n\tchildren,\n\tas: Tag = Fragment,\n\t...props\n}: DrawerCloseButtonProps ) => {\n\tconst { handleClose } = useDrawerState();\n\n\tif ( ! children ) {\n\t\treturn <DefaultCloseButton onClick={ handleClose! } { ...props } />;\n\t}\n\n\tif ( Tag === Fragment ) {\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn children( { close: handleClose! } );\n\t\t}\n\n\t\tif ( ! isValidElement( children ) ) {\n\t\t\treturn <DefaultCloseButton onClick={ handleClose! } { ...props } />;\n\t\t}\n\t\treturn cloneElement( children as React.ReactElement, {\n\t\t\tonClick: handleClose,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Tag { ...props } onClick={ handleClose }>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\n\nDrawerCloseButton.displayName = 'Drawer.CloseButton';\n\nexport default DrawerCloseButton;\n"],"names":["DefaultCloseButton","className","props","jsx","cn","X","DrawerCloseButton","children","Tag","Fragment","handleClose","useDrawerState","isValidElement","cloneElement"],"mappings":";;;;;AA+BA,MAAMA,IAAqB,CAAE;AAAA,EAC5B,WAAAC;AAAA,EACA,GAAGC;AACJ,MAEE,gBAAAC;AAAA,EAAC;AAAA,EAAA;AAAA,IACA,WAAYC;AAAA,MACX;AAAA,MACAH;AAAA,IACD;AAAA,IACA,cAAW;AAAA,IACT,GAAGC;AAAA,IAEL,UAAA,gBAAAC,EAACE,GAAE,EAAA,WAAU,oCAAoC,CAAA;AAAA,EAAA;AAClD,GAKIC,IAAoB,CAAE;AAAA,EAC3B,UAAAC;AAAA,EACA,IAAIC,IAAMC;AAAA,EACV,GAAGP;AACJ,MAA+B;AACxB,QAAA,EAAE,aAAAQ,EAAY,IAAIC,EAAe;AAEvC,SAAOJ,IAIFC,MAAQC,IACP,OAAOF,KAAa,aACjBA,EAAU,EAAE,OAAOG,GAAe,IAGnCE,EAAgBL,CAAS,IAGzBM,EAAcN,GAAgC;AAAA,IACpD,SAASG;AAAA,EAAA,CACR,IAJO,gBAAAP,EAAAH,GAAA,EAAmB,SAAUU,GAAiB,GAAGR,GAAQ,sBAQjEM,GAAM,EAAA,GAAGN,GAAQ,SAAUQ,GACzB,UAAAH,GACH,IAnBQ,gBAAAJ,EAAAH,GAAA,EAAmB,SAAUU,GAAiB,GAAGR,GAAQ;AAqBnE;AAEAI,EAAkB,cAAc;"}