{"version":3,"file":"drawer.es.js","sources":["../../../src/components/drawer/drawer.tsx"],"sourcesContent":["import React, {\n\tcloneElement,\n\tcreateContext,\n\tisValidElement,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n\ttype ReactNode,\n} from 'react';\nimport { callAll, cn } from '@/utilities/functions';\nimport DrawerPanel from './drawer-panel';\nimport DrawerHeader from './drawer-header';\nimport DrawerTitle from './drawer-title';\nimport DrawerDescription from './drawer-description';\nimport DrawerBody from './drawer-body';\nimport DrawerFooter from './drawer-footer';\nimport DrawerCloseButton from './drawer-close-button';\nimport DrawerBackdrop from './drawer-backdrop';\n\nconst TRANSITION_DURATION = 0.2;\n\nexport interface DrawerProps {\n\t/** Open state of the drawer. Optional for uncontrolled component. */\n\topen?: boolean;\n\t/** Set open state of the drawer. Optional for uncontrolled component. */\n\tsetOpen?: ( open: boolean ) => void;\n\t/** Drawer content. */\n\tchildren: ReactNode;\n\t/** Trigger element to open the drawer. Required for uncontrolled component. */\n\ttrigger?: ReactNode | ( ( props: { onClick: () => void } ) => ReactNode );\n\t/** Additional class names. */\n\tclassName?: string;\n\t/** Close drawer when clicking outside of the drawer. */\n\texitOnClickOutside?: boolean;\n\t/** Close drawer when pressing the escape key. */\n\texitOnEsc?: boolean;\n\t/** Design of the drawer. */\n\tdesign?: 'simple' | 'footer-divided' | 'footer-bordered';\n\t/** Position of the drawer. */\n\tposition?: 'left' | 'right';\n\t/** Duration of the drawer transition. */\n\ttransitionDuration?: number;\n\t/** Lock the scroll when the drawer is open. */\n\tscrollLock?: boolean;\n}\n\nexport interface DrawerContextDefault {\n\topen: DrawerProps['open'];\n\tsetOpen: ( open: boolean ) => void;\n\thandleClose: () => void;\n\tdesign: DrawerProps['design'];\n\tposition: DrawerProps['position'];\n\tdrawerContainerRef: React.RefObject<HTMLDivElement>;\n\tdrawerRef: React.RefObject<HTMLDivElement>;\n\ttransitionDuration: { duration: number };\n}\n\nconst DrawerContext = createContext<Partial<DrawerContextDefault>>( {} );\nexport const useDrawerState = () => useContext( DrawerContext );\n\n// Drawer component.\nconst Drawer = ( {\n\topen,\n\tsetOpen,\n\tchildren,\n\ttrigger,\n\tclassName,\n\texitOnClickOutside = false,\n\texitOnEsc = true,\n\tdesign = 'simple',\n\tposition = 'right',\n\ttransitionDuration = TRANSITION_DURATION,\n\tscrollLock = true,\n}: DrawerProps ) => {\n\tconst isControlled = open !== undefined && setOpen !== undefined;\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst drawerRef = useRef<HTMLDivElement>( null );\n\tconst drawerContainerRef = useRef<HTMLDivElement>( null );\n\n\tconst openState = useMemo(\n\t\t() => ( isControlled ? open : isOpen ),\n\t\t[ open, isOpen ]\n\t);\n\tconst setOpenState = useMemo(\n\t\t() => ( isControlled ? setOpen : setIsOpen ),\n\t\t[ setIsOpen, setIsOpen ]\n\t);\n\n\tconst handleOpen = () => {\n\t\tif ( openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( true );\n\t};\n\n\tconst handleClose = () => {\n\t\tif ( ! openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( false );\n\t};\n\n\tconst renderTrigger = useCallback( () => {\n\t\tif ( isValidElement( trigger ) ) {\n\t\t\treturn cloneElement( trigger as React.ReactElement, {\n\t\t\t\tonClick: callAll( handleOpen, trigger.props.onClick ),\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof trigger === 'function' ) {\n\t\t\treturn trigger( { onClick: handleOpen } );\n\t\t}\n\n\t\treturn null;\n\t}, [ trigger, handleOpen, handleClose ] );\n\n\tconst handleKeyDown = ( event: KeyboardEvent ) => {\n\t\tswitch ( event.key ) {\n\t\t\tcase 'Escape':\n\t\t\t\tif ( exitOnEsc ) {\n\t\t\t\t\thandleClose();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleClickOutside = ( event: MouseEvent ) => {\n\t\tif (\n\t\t\texitOnClickOutside &&\n\t\t\tdrawerRef.current &&\n\t\t\t! drawerRef.current.contains( event.target as Node )\n\t\t) {\n\t\t\thandleClose();\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\twindow.addEventListener( 'keydown', handleKeyDown );\n\t\tdocument.addEventListener( 'mousedown', handleClickOutside );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'keydown', handleKeyDown );\n\t\t\tdocument.removeEventListener( 'mousedown', handleClickOutside );\n\t\t};\n\t}, [ openState ] );\n\n\t// Prevent scrolling when drawer is open.\n\tuseEffect( () => {\n\t\tif ( ! scrollLock ) {\n\t\t\treturn;\n\t\t}\n\t\tconst htmlElement = document.querySelector( 'html' );\n\t\tif ( openState && htmlElement ) {\n\t\t\thtmlElement.style.overflow = 'hidden';\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( ! htmlElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thtmlElement.style.overflow = '';\n\t\t};\n\t}, [ openState ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ renderTrigger() }\n\t\t\t<DrawerContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\topen: openState,\n\t\t\t\t\tsetOpen: setOpenState,\n\t\t\t\t\thandleClose,\n\t\t\t\t\tdesign,\n\t\t\t\t\tposition,\n\t\t\t\t\tdrawerContainerRef,\n\t\t\t\t\tdrawerRef,\n\t\t\t\t\ttransitionDuration: { duration: transitionDuration },\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'fixed z-auto w-0 h-0 overflow-visible',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tref={ drawerContainerRef }\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\taria-modal=\"true\"\n\t\t\t\t\taria-label=\"drawer\"\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t</DrawerContext.Provider>\n\t\t</>\n\t);\n};\n\nDrawer.displayName = 'Drawer';\n\nDrawer.Panel = DrawerPanel;\nDrawer.Header = DrawerHeader;\nDrawer.Title = DrawerTitle;\nDrawer.Description = DrawerDescription;\nDrawer.Body = DrawerBody;\nDrawer.CloseButton = DrawerCloseButton;\nDrawer.Footer = DrawerFooter;\nDrawer.Backdrop = DrawerBackdrop;\n\nexport default Drawer;\n"],"names":["TRANSITION_DURATION","DrawerContext","createContext","useDrawerState","useContext","Drawer","open","setOpen","children","trigger","className","exitOnClickOutside","exitOnEsc","design","position","transitionDuration","scrollLock","isControlled","isOpen","setIsOpen","useState","drawerRef","useRef","drawerContainerRef","openState","useMemo","setOpenState","handleOpen","handleClose","renderTrigger","useCallback","isValidElement","cloneElement","callAll","handleKeyDown","event","handleClickOutside","useEffect","htmlElement","jsxs","Fragment","jsx","cn","DrawerPanel","DrawerHeader","DrawerTitle","DrawerDescription","DrawerBody","DrawerCloseButton","DrawerFooter","DrawerBackdrop"],"mappings":"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"}