{"version":3,"file":"tooltip.cjs.js","sources":["../../../src/components/tooltip/tooltip.tsx"],"sourcesContent":["import {\n\tuseRef,\n\ttype ReactNode,\n\tuseState,\n\tisValidElement,\n\tcloneElement,\n\tuseMemo,\n\tFragment,\n} from 'react';\nimport {\n\tuseFloating,\n\tautoUpdate,\n\toffset,\n\tflip,\n\tshift,\n\tuseHover,\n\tuseFocus,\n\tuseDismiss,\n\tuseClick,\n\tsafePolygon,\n\tuseRole,\n\tarrow as floatingArrow,\n\tFloatingPortal,\n\tFloatingArrow,\n\tuseInteractions,\n\tuseTransitionStyles,\n} from '@floating-ui/react';\nimport { cn } from '@/utilities/functions';\nimport { mergeRefs } from '../toaster/utils';\n\nexport declare interface TooltipProps {\n\t/** Defines the visual variant of the tooltip. */\n\tvariant?: 'light' | 'dark';\n\n\t/** Specifies the position of the tooltip relative to its target. */\n\tplacement?:\n\t\t| 'top'\n\t\t| 'bottom'\n\t\t| 'left'\n\t\t| 'right'\n\t\t| 'top-start'\n\t\t| 'top-end'\n\t\t| 'bottom-start'\n\t\t| 'bottom-end'\n\t\t| 'left-start'\n\t\t| 'left-end'\n\t\t| 'right-start'\n\t\t| 'right-end';\n\n\t/** The title displayed at the top of the tooltip. */\n\ttitle?: string;\n\n\t/** The main content to be displayed within the tooltip. */\n\tcontent?: ReactNode;\n\n\t/** Indicates whether to show an arrow pointing to the target element. */\n\tarrow?: boolean;\n\n\t/** Controls the visibility of the tooltip in a controlled manner. */\n\topen?: boolean;\n\n\t/** Function to set the visibility state of the tooltip. */\n\tsetOpen?: ( isOpen: boolean ) => void;\n\n\t/** The child element to which the tooltip is attached. */\n\tchildren: ReactNode;\n\n\t/** Additional CSS classes to apply to the tooltip for custom styling. */\n\tclassName?: string;\n\n\t/** The root element where the tooltip will be rendered. */\n\ttooltipPortalRoot?: HTMLElement | null;\n\n\t/** The ID of the tooltip portal. */\n\ttooltipPortalId?: string;\n\n\t/** Specifies the positioning strategy for the tooltip. */\n\tstrategy?: 'fixed' | 'absolute';\n\n\t/** Offset distance (in pixels) from the target element to the tooltip. */\n\toffset?: number;\n\n\t/** Events that trigger the tooltip. */\n\ttriggers?: ( 'click' | 'hover' | 'focus' )[];\n\n\t/** Indicates whether the tooltip content is interactive. Keeps the tooltip open while the user interacts with its content. */\n\tinteractive?: boolean;\n\t/** Defines the boundary for positioning the tooltip, accepting 'viewport', 'clippingAncestors', or an HTML element reference. */\n\tboundary?: 'viewport' | 'clippingAncestors' | HTMLElement | null;\n}\n\nexport const Tooltip = ( {\n\tvariant = 'dark', // 'light' | 'dark';\n\tplacement = 'bottom', //  | 'top' | 'top-start' | 'top-end' | 'right' | 'right-start' | 'right-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end';\n\ttitle = '',\n\tcontent,\n\tarrow = false,\n\topen,\n\tsetOpen,\n\tchildren,\n\tclassName,\n\ttooltipPortalRoot, // Root element where the dropdown will be rendered.\n\ttooltipPortalId, // Id of the dropdown portal where the dropdown will be rendered.\n\tboundary = 'clippingAncestors',\n\tstrategy = 'fixed', // 'fixed' | 'absolute';\n\toffset: offsetValue = 8, // Offset option or number value. Default is 8.\n\ttriggers = [ 'hover', 'focus' ], // 'click' | 'hover' | 'focus';\n\tinteractive = false,\n}: TooltipProps ) => {\n\tconst isControlled = useMemo(\n\t\t() => typeof open === 'boolean' && typeof setOpen === 'function',\n\t\t[ open, setOpen ]\n\t);\n\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst arrowRef = useRef( null );\n\n\tconst { refs, floatingStyles, context } = useFloating( {\n\t\topen: isControlled ? open : isOpen,\n\t\tonOpenChange: isControlled ? setOpen : setIsOpen,\n\t\tplacement,\n\t\tstrategy,\n\t\tmiddleware: [\n\t\t\toffset( offsetValue ),\n\t\t\tflip( { boundary: boundary as Element } ), // Ensure this is correctly cast\n\t\t\tshift( { boundary: boundary as Element } ), // Ensure this is correctly cast\n\t\t\tfloatingArrow( { element: arrowRef } ),\n\t\t],\n\t\twhileElementsMounted: autoUpdate,\n\t} );\n\n\tconst click = useClick( context, {\n\t\tenabled: ! isControlled && triggers.includes( 'click' ),\n\t} );\n\tconst hover = useHover( context, {\n\t\tmove: false,\n\t\tenabled: ! isControlled && triggers.includes( 'hover' ),\n\t\t...( interactive && { handleClose: safePolygon() } ),\n\t} );\n\tconst focus = useFocus( context, {\n\t\tenabled: ! isControlled && triggers.includes( 'focus' ),\n\t} );\n\tconst dismiss = useDismiss( context );\n\tconst role = useRole( context, { role: 'tooltip' } );\n\n\tconst { getReferenceProps, getFloatingProps } = useInteractions( [\n\t\tclick,\n\t\thover,\n\t\tfocus,\n\t\tdismiss,\n\t\trole,\n\t] );\n\n\t// Fade-in and fade-out transition.\n\tconst { isMounted, styles } = useTransitionStyles( context, {\n\t\tduration: 150,\n\t\tinitial: { opacity: 0 },\n\t\topen: { opacity: 1 },\n\t\tclose: { opacity: 0 },\n\t} );\n\n\tconst tooltipClasses =\n\t\t'absolute z-20 py-2 px-3 rounded-md text-xs leading-4 shadow-soft-shadow-lg';\n\n\tconst variantClasses = {\n\t\tlight: 'bg-tooltip-background-light text-text-primary',\n\t\tdark: 'bg-tooltip-background-dark text-text-on-color',\n\t}?.[ variant ];\n\n\tconst arrowClasses =\n\t\tvariant === 'dark'\n\t\t\t? 'text-tooltip-background-dark'\n\t\t\t: 'text-tooltip-background-light';\n\n\tconst widthClasses = 'max-w-80 w-fit';\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{ isValidElement( children ) && (\n\t\t\t\t<Fragment key=\"tooltip-reference\">\n\t\t\t\t\t{ cloneElement( children as React.ReactElement, {\n\t\t\t\t\t\tref: mergeRefs(\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tchildren as React.ReactElement & {\n\t\t\t\t\t\t\t\t\tref?: React.Ref<HTMLElement>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t).ref,\n\t\t\t\t\t\t\trefs.setReference\n\t\t\t\t\t\t),\n\t\t\t\t\t\tclassName: cn( children.props.className ),\n\t\t\t\t\t\t...getReferenceProps(),\n\t\t\t\t\t} ) }\n\t\t\t\t</Fragment>\n\t\t\t) }\n\t\t\t<FloatingPortal id={ tooltipPortalId } root={ tooltipPortalRoot }>\n\t\t\t\t{ isMounted && (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\ttooltipClasses,\n\t\t\t\t\t\t\tvariantClasses,\n\t\t\t\t\t\t\twidthClasses,\n\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tref={ refs.setFloating }\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t...floatingStyles,\n\t\t\t\t\t\t\t...styles,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\t{ ...getFloatingProps() }\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{ !! title && (\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tkey=\"tooltip-title\"\n\t\t\t\t\t\t\t\t\tclassName=\"font-semibold\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ title }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ !! content && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey=\"tooltip-content\"\n\t\t\t\t\t\t\t\t\tclassName=\"font-normal\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ content }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{ arrow && (\n\t\t\t\t\t\t\t<FloatingArrow\n\t\t\t\t\t\t\t\tref={ arrowRef }\n\t\t\t\t\t\t\t\tcontext={ context }\n\t\t\t\t\t\t\t\tclassName={ cn( 'fill-current', arrowClasses ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</FloatingPortal>\n\t\t</Fragment>\n\t);\n};\n\nTooltip.displayName = 'Tooltip';\n\nexport default Tooltip;\n"],"names":["Tooltip","variant","placement","title","content","arrow","open","setOpen","children","className","tooltipPortalRoot","tooltipPortalId","boundary","strategy","offsetValue","triggers","interactive","isControlled","useMemo","isOpen","setIsOpen","useState","arrowRef","useRef","refs","floatingStyles","context","useFloating","offset","flip","shift","floatingArrow","autoUpdate","click","useClick","hover","useHover","safePolygon","focus","useFocus","dismiss","useDismiss","role","useRole","getReferenceProps","getFloatingProps","useInteractions","isMounted","styles","useTransitionStyles","tooltipClasses","variantClasses","arrowClasses","Fragment","isValidElement","jsx","mergeRefs","cn","FloatingPortal","jsxs","FloatingArrow"],"mappings":"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"}