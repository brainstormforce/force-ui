{"version":3,"file":"hamburger-menu.es.js","sources":["../../../src/components/hamburger-menu/hamburger-menu.tsx"],"sourcesContent":["import { Button } from '@/components';\nimport { cn } from '@/utilities/functions';\nimport { motion, useCycle } from 'framer-motion';\nimport React, {\n\tuseEffect,\n\tuseRef,\n\tcreateContext,\n\tuseContext,\n\ttype ReactNode,\n\tuseState,\n\tstartTransition,\n\ttype ElementType,\n\tcloneElement,\n\tisValidElement,\n\ttype FC,\n} from 'react';\nimport { getElementPositionRelativeToScreen } from '../topbar/utils';\n\ntype MenuToggleFn = () => void;\n\nexport interface HamburgerMenuProps {\n\t/**\n\t * The class name to apply to the hamburger menu root container.\n\t */\n\tclassName?: string;\n\t/**\n\t * The children to render in the menu options.\n\t */\n\tchildren: React.ReactNode;\n}\n\nexport interface MenuToggleProps {\n\t/**\n\t * The class name to apply to the hamburger menu toggle button.\n\t */\n\tclassName?: string;\n}\n\nexport interface MenuOptionProps<T extends ElementType = 'a'> {\n\t/**\n\t * The tag or component to render the option as.\n\t */\n\ttag?: T;\n\t/**\n\t * Whether the option is active.\n\t */\n\tactive?: boolean;\n\t/**\n\t * Icon component to display.\n\t */\n\ticon?: React.ReactElement;\n\t/**\n\t * Position of the icon.\n\t */\n\ticonPosition?: 'left' | 'right';\n\t/**\n\t * Additional class name for styling.\n\t */\n\tclassName?: string;\n\t/**\n\t * Children elements.\n\t */\n\tchildren?: ReactNode;\n}\n\nexport interface MenuItemProps {\n\tchildren: React.ReactNode;\n}\n\nexport interface MenuOptionsProps {\n\t/**\n\t * The children to render in the menu options.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * The class name to apply to the menu options container.\n\t */\n\tclassName?: string;\n}\n\nexport interface PathProps extends React.SVGProps<SVGPathElement> {\n\tvariants: {\n\t\tclosed: Record<string, string | number>;\n\t\topen: Record<string, string | number>;\n\t};\n\ttransition?: Record<string, string | number>;\n}\n\nexport interface HamBurgerContextType {\n\tisOpen?: boolean;\n\ttoggleOpen?: MenuToggleFn;\n\tsetTriggerRef?: ( ref: HTMLButtonElement ) => void;\n\ttriggerRef?: HTMLButtonElement | null;\n\ttriggerOnRight?: boolean;\n\ttriggerOnLeft?: boolean;\n}\n\n// Hamburger context\nconst HamBurgerContext = createContext<HamBurgerContextType>( {} );\nconst HamBurgerProvider = HamBurgerContext.Provider;\nconst useHamBurgerState = () => useContext( HamBurgerContext );\n\nexport const useDimensions = ( ref: React.RefObject<HTMLElement> ) => {\n\tconst dimensions = useRef( { width: 0, height: 0 } );\n\n\tuseEffect( () => {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdimensions.current.width = ref.current.offsetWidth;\n\t\tdimensions.current.height = ref.current.offsetHeight;\n\t}, [] );\n\n\treturn dimensions.current;\n};\n\nconst sidebar = (\n\ttriggerButton: HTMLButtonElement,\n\tmenuContainer: HTMLElement,\n\tisLeft: boolean\n) => {\n\tif ( ! triggerButton || ! menuContainer ) {\n\t\treturn {\n\t\t\topen: () => ( {} ),\n\t\t\tclosed: () => ( {} ),\n\t\t};\n\t}\n\n\tconst buttonData = triggerButton?.getBoundingClientRect();\n\tconst containerData = menuContainer?.getBoundingClientRect();\n\n\t// Calculate position relative to the menu container\n\tconst buttonX = isLeft\n\t\t? buttonData?.x - containerData?.x + buttonData?.width / 2\n\t\t: containerData?.width -\n\t\t\t( containerData?.right - buttonData?.x ) +\n\t\t\tbuttonData?.width / 2;\n\n\tconst buttonY = buttonData?.y - containerData?.y + buttonData?.height / 2;\n\tconst buttonArea = buttonData?.width / 2;\n\n\treturn {\n\t\topen: ( height: number = 1000 ) => ( {\n\t\t\tclipPath: `circle(${ height * 2 + 200 }px at ${ buttonX }px ${ buttonY }px)`,\n\t\t\tbackground: 'rgb(255, 255, 255, 1)',\n\t\t\ttransition: {\n\t\t\t\ttype: 'spring',\n\t\t\t\tstiffness: 20,\n\t\t\t\trestDelta: 2,\n\t\t\t\tbackground: {\n\t\t\t\t\tduration: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t} ),\n\t\tclosed: {\n\t\t\tclipPath: `circle(${ buttonArea }px at ${ buttonX }px ${ buttonY }px)`,\n\t\t\tbackground: 'rgb(255, 255, 255, 0)',\n\t\t\ttransition: {\n\t\t\t\tdelay: 0.5,\n\t\t\t\ttype: 'spring',\n\t\t\t\tstiffness: 400,\n\t\t\t\tdamping: 40,\n\t\t\t\tbackground: {\n\t\t\t\t\tduration: 0,\n\t\t\t\t\tdelay: 1000,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n};\n\nconst Path = ( props: PathProps ): React.ReactNode => (\n\t// @ts-expect-error Framer Motion types are not compatible with SVGPathElement\n\t<motion.path\n\t\tclassName=\"stroke-icon-primary\"\n\t\tfill=\"transparent\"\n\t\tstrokeWidth=\"3\"\n\t\tstrokeLinecap=\"round\"\n\t\t{ ...props }\n\t/>\n);\n\nexport const MenuToggle = ( { className }: MenuToggleProps ) => {\n\tconst { toggleOpen, setTriggerRef } = useHamBurgerState();\n\n\treturn (\n\t\t<Button\n\t\t\t// @ts-expect-error Ref is not present in Button component type, but we need it for the hamburger menu\n\t\t\tref={ setTriggerRef }\n\t\t\tclassName={ cn(\n\t\t\t\t'relative z-[1] rounded-full hover:shadow-sm focus:[box-shadow:none] pointer-events-auto bg-background-primary',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\tvariant=\"ghost\"\n\t\t\tsize=\"xs\"\n\t\t\tonClick={ toggleOpen }\n\t\t\taria-label=\"Toggle menu\"\n\t\t\ticon={\n\t\t\t\t<motion.svg\n\t\t\t\t\tclassName=\"shrink-0 stroke-icon-primary\"\n\t\t\t\t\twidth=\"23\"\n\t\t\t\t\theight=\"23\"\n\t\t\t\t\tvariants={ {\n\t\t\t\t\t\topen: {\n\t\t\t\t\t\t\tviewBox: '0 0 20 20',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclosed: {\n\t\t\t\t\t\t\tviewBox: '0 0 23 18',\n\t\t\t\t\t\t},\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<Path\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { d: 'M 2 2.5 L 20 2.5' },\n\t\t\t\t\t\t\topen: { d: 'M 3 16.5 L 17 2.5' },\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<Path\n\t\t\t\t\t\td=\"M 2 9.423 L 20 9.423\"\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { opacity: 1 },\n\t\t\t\t\t\t\topen: { opacity: 0 },\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttransition={ { duration: 0.1 } }\n\t\t\t\t\t/>\n\t\t\t\t\t<Path\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { d: 'M 2 16.346 L 20 16.346' },\n\t\t\t\t\t\t\topen: { d: 'M 3 2.5 L 17 16.346' },\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst navVariants = {\n\topen: {\n\t\ttransition: { staggerChildren: 0.07, delayChildren: 0.2 },\n\t},\n\tclosed: {\n\t\ttransition: { staggerChildren: 0.05, staggerDirection: -1 },\n\t},\n};\n\ntype MenuOptionComponent = <T extends ElementType = 'a'>(\n\tprops: MenuOptionProps<T> &\n\t\tOmit<React.ComponentPropsWithoutRef<T>, keyof MenuOptionProps<T>>\n) => React.ReactElement | null;\n\nexport const MenuOption: MenuOptionComponent = ( {\n\ttag: Tag = 'a',\n\tactive,\n\ticon,\n\ticonPosition = 'left',\n\tclassName,\n\tchildren,\n\t...props\n} ) => {\n\tlet leftIcon = null;\n\tlet rightIcon = null;\n\tconst renderIcon =\n\t\ticon && isValidElement( icon )\n\t\t\t? cloneElement( icon, {\n\t\t\t\tkey: 'left-icon',\n\t\t\t\tclassName: cn(\n\t\t\t\t\t'size-5',\n\t\t\t\t\tactive ? 'text-brand-800' : 'text-icon-secondary',\n\t\t\t\t\t( icon.props as { className?: string } )?.className ?? ''\n\t\t\t\t),\n\t\t\t} as React.SVGProps<SVGSVGElement> )\n\t\t\t: null;\n\n\tswitch ( iconPosition ) {\n\t\tcase 'left':\n\t\t\tleftIcon = renderIcon;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\trightIcon = renderIcon;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tleftIcon = null;\n\t\t\trightIcon = null;\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<MenuItem>\n\t\t\t<Tag\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full no-underline hover:no-underline text-text-primary text-lg font-medium flex items-center gap-2 px-2.5 py-1.5 rounded-md hover:bg-background-secondary hover:text-text-primary focus:outline-none focus:shadow-none transition ease-in-out duration-150',\n\t\t\t\t\tactive\n\t\t\t\t\t\t? 'text-text-primary bg-background-secondary'\n\t\t\t\t\t\t: 'text-text-secondary',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ !! leftIcon && leftIcon }\n\t\t\t\t<span className=\"contents\">{ children }</span>\n\t\t\t\t{ !! rightIcon && rightIcon }\n\t\t\t</Tag>\n\t\t</MenuItem>\n\t);\n};\n\nconst menuItemVariants = {\n\topen: {\n\t\ty: 0,\n\t\topacity: 1,\n\t\ttransition: {\n\t\t\ty: { stiffness: 1000, velocity: -100 },\n\t\t},\n\t},\n\tclosed: {\n\t\ty: 50,\n\t\topacity: 0,\n\t\ttransition: {\n\t\t\ty: { stiffness: 1000 },\n\t\t},\n\t},\n};\n\nexport const MenuItem = ( { children }: MenuItemProps ) => {\n\treturn (\n\t\t<motion.li\n\t\t\tclassName=\"m-0 p-0 flex items-center justify-start w-full\"\n\t\t\tvariants={ menuItemVariants }\n\t\t\twhileHover={ { scale: 1.05 } }\n\t\t\twhileTap={ { scale: 0.95 } }\n\t\t>\n\t\t\t{ children }\n\t\t</motion.li>\n\t);\n};\n\nexport const MenuOptions: FC<MenuOptionsProps> = ( { children, className } ) => {\n\tconst { triggerRef, triggerOnRight, triggerOnLeft } = useHamBurgerState();\n\tconst [ container, setContainer ] = useState<HTMLDivElement | null>( null );\n\n\tif ( ! triggerRef ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tref={ setContainer }\n\t\t\tclassName={ cn(\n\t\t\t\t'absolute top-0 bottom-0 w-80 h-screen',\n\t\t\t\ttriggerOnRight ? 'right-0' : 'left-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ container && (\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'bg-background-primary shadow-lg absolute top-0 bottom-0 w-80 border-y-0 border-l-0 border-r border-solid border-border-subtle',\n\t\t\t\t\t\ttriggerOnRight ? 'right-0' : 'left-0'\n\t\t\t\t\t) }\n\t\t\t\t\tvariants={ sidebar(\n\t\t\t\t\t\ttriggerRef,\n\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\ttriggerOnLeft ?? false\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<motion.ul\n\t\t\t\tvariants={ navVariants }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'relative mt-14 mb-0 w-full px-5 pb-5 pt-2 flex flex-col items-start justify-start gap-0.5',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</motion.ul>\n\t\t</motion.div>\n\t);\n};\n\nexport const HamburgerMenu = ( { className, children }: HamburgerMenuProps ) => {\n\tconst [ isOpen, toggleOpen ] = useCycle( false, true );\n\tconst [ trigger, setTrigger ] = useState<HTMLButtonElement | null>( null );\n\tconst containerRef = useRef( null );\n\tconst { height } = useDimensions( containerRef );\n\n\tconst { isRight = false, isLeft = true } =\n\t\tgetElementPositionRelativeToScreen( trigger );\n\n\tconst setTriggerRef = ( ref: HTMLButtonElement ) => {\n\t\tstartTransition( () => {\n\t\t\tsetTrigger( ref );\n\t\t} );\n\t};\n\n\tconst providerValue = {\n\t\tisOpen,\n\t\ttoggleOpen,\n\t\tsetTriggerRef,\n\t\ttriggerRef: trigger,\n\t\ttriggerOnRight: isRight,\n\t\ttriggerOnLeft: isLeft,\n\t};\n\n\treturn (\n\t\t<HamBurgerProvider value={ providerValue }>\n\t\t\t<div className={ cn( 'size-6 z-[1]', className ) }>\n\t\t\t\t<motion.nav\n\t\t\t\t\tclassName=\"h-full\"\n\t\t\t\t\tinitial={ false }\n\t\t\t\t\tanimate={ isOpen ? 'open' : 'closed' }\n\t\t\t\t\tcustom={ height }\n\t\t\t\t\tvariants={ {\n\t\t\t\t\t\topen: {\n\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclosed: {\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t},\n\t\t\t\t\t} }\n\t\t\t\t\tref={ containerRef }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</motion.nav>\n\t\t\t</div>\n\t\t</HamBurgerProvider>\n\t);\n};\n\n// Update display name\nHamburgerMenu.displayName = 'HamburgerMenu';\nMenuToggle.displayName = 'HamburgerMenu.Toggle';\nMenuOptions.displayName = 'HamburgerMenu.Options';\n( MenuOption as React.ComponentType ).displayName = 'HamburgerMenu.Option';\n\n// Assign Components\nHamburgerMenu.Options = MenuOptions;\nHamburgerMenu.Option = MenuOption;\nHamburgerMenu.Toggle = MenuToggle;\n\nexport default HamburgerMenu;\n"],"names":["HamBurgerContext","createContext","HamBurgerProvider","useHamBurgerState","useContext","useDimensions","ref","dimensions","useRef","useEffect","sidebar","triggerButton","menuContainer","isLeft","buttonData","containerData","buttonX","buttonY","buttonArea","height","Path","props","jsx","motion","MenuToggle","className","toggleOpen","setTriggerRef","Button","cn","jsxs","navVariants","MenuOption","Tag","active","icon","iconPosition","children","leftIcon","rightIcon","renderIcon","isValidElement","cloneElement","MenuItem","menuItemVariants","MenuOptions","triggerRef","triggerOnRight","triggerOnLeft","container","setContainer","useState","HamburgerMenu","isOpen","useCycle","trigger","setTrigger","containerRef","isRight","getElementPositionRelativeToScreen","startTransition"],"mappings":"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"}