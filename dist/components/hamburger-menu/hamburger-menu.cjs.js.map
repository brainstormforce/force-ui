{"version":3,"file":"hamburger-menu.cjs.js","sources":["../../../src/components/hamburger-menu/hamburger-menu.tsx"],"sourcesContent":["import { Button } from '@/components';\nimport { cn } from '@/utilities/functions';\nimport { motion, useCycle } from 'framer-motion';\nimport React, {\n\tuseEffect,\n\tuseRef,\n\tcreateContext,\n\tuseContext,\n\ttype ReactNode,\n\tuseState,\n\tstartTransition,\n\ttype ElementType,\n\tcloneElement,\n\tisValidElement,\n\ttype FC,\n} from 'react';\nimport { getElementPositionRelativeToScreen } from '../topbar/utils';\n\ntype MenuToggleFn = () => void;\n\nexport interface HamburgerMenuProps {\n\t/**\n\t * The class name to apply to the hamburger menu root container.\n\t */\n\tclassName?: string;\n\t/**\n\t * The children to render in the menu options.\n\t */\n\tchildren: React.ReactNode;\n}\n\nexport interface MenuToggleProps {\n\t/**\n\t * The class name to apply to the hamburger menu toggle button.\n\t */\n\tclassName?: string;\n}\n\nexport interface MenuOptionProps<T extends ElementType = 'a'> {\n\t/**\n\t * The tag or component to render the option as.\n\t */\n\ttag?: T;\n\t/**\n\t * Whether the option is active.\n\t */\n\tactive?: boolean;\n\t/**\n\t * Icon component to display.\n\t */\n\ticon?: React.ReactElement;\n\t/**\n\t * Position of the icon.\n\t */\n\ticonPosition?: 'left' | 'right';\n\t/**\n\t * Additional class name for styling.\n\t */\n\tclassName?: string;\n\t/**\n\t * Children elements.\n\t */\n\tchildren?: ReactNode;\n}\n\nexport interface MenuItemProps {\n\tchildren: React.ReactNode;\n}\n\nexport interface MenuOptionsProps {\n\t/**\n\t * The children to render in the menu options.\n\t */\n\tchildren: React.ReactNode;\n\t/**\n\t * The class name to apply to the menu options container.\n\t */\n\tclassName?: string;\n}\n\nexport interface PathProps extends React.SVGProps<SVGPathElement> {\n\tvariants: {\n\t\tclosed: Record<string, string | number>;\n\t\topen: Record<string, string | number>;\n\t};\n\ttransition?: Record<string, string | number>;\n}\n\nexport interface HamBurgerContextType {\n\tisOpen?: boolean;\n\ttoggleOpen?: MenuToggleFn;\n\tsetTriggerRef?: ( ref: HTMLButtonElement ) => void;\n\ttriggerRef?: HTMLButtonElement | null;\n\ttriggerOnRight?: boolean;\n\ttriggerOnLeft?: boolean;\n}\n\n// Hamburger context\nconst HamBurgerContext = createContext<HamBurgerContextType>( {} );\nconst HamBurgerProvider = HamBurgerContext.Provider;\nconst useHamBurgerState = () => useContext( HamBurgerContext );\n\nexport const useDimensions = ( ref: React.RefObject<HTMLElement> ) => {\n\tconst dimensions = useRef( { width: 0, height: 0 } );\n\n\tuseEffect( () => {\n\t\tif ( ! ref.current ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdimensions.current.width = ref.current.offsetWidth;\n\t\tdimensions.current.height = ref.current.offsetHeight;\n\t}, [] );\n\n\treturn dimensions.current;\n};\n\nconst sidebar = (\n\ttriggerButton: HTMLButtonElement,\n\tmenuContainer: HTMLElement,\n\tisLeft: boolean\n) => {\n\tif ( ! triggerButton || ! menuContainer ) {\n\t\treturn {\n\t\t\topen: () => ( {} ),\n\t\t\tclosed: () => ( {} ),\n\t\t};\n\t}\n\n\tconst buttonData = triggerButton?.getBoundingClientRect();\n\tconst containerData = menuContainer?.getBoundingClientRect();\n\n\t// Calculate position relative to the menu container\n\tconst buttonX = isLeft\n\t\t? buttonData?.x - containerData?.x + buttonData?.width / 2\n\t\t: containerData?.width -\n\t\t\t( containerData?.right - buttonData?.x ) +\n\t\t\tbuttonData?.width / 2;\n\n\tconst buttonY = buttonData?.y - containerData?.y + buttonData?.height / 2;\n\tconst buttonArea = buttonData?.width / 2;\n\n\treturn {\n\t\topen: ( height: number = 1000 ) => ( {\n\t\t\tclipPath: `circle(${ height * 2 + 200 }px at ${ buttonX }px ${ buttonY }px)`,\n\t\t\tbackground: 'rgb(255, 255, 255, 1)',\n\t\t\ttransition: {\n\t\t\t\ttype: 'spring',\n\t\t\t\tstiffness: 20,\n\t\t\t\trestDelta: 2,\n\t\t\t\tbackground: {\n\t\t\t\t\tduration: 0,\n\t\t\t\t},\n\t\t\t},\n\t\t} ),\n\t\tclosed: {\n\t\t\tclipPath: `circle(${ buttonArea }px at ${ buttonX }px ${ buttonY }px)`,\n\t\t\tbackground: 'rgb(255, 255, 255, 0)',\n\t\t\ttransition: {\n\t\t\t\tdelay: 0.5,\n\t\t\t\ttype: 'spring',\n\t\t\t\tstiffness: 400,\n\t\t\t\tdamping: 40,\n\t\t\t\tbackground: {\n\t\t\t\t\tduration: 0,\n\t\t\t\t\tdelay: 1000,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t};\n};\n\nconst Path = ( props: PathProps ): React.ReactNode => (\n\t// @ts-expect-error Framer Motion types are not compatible with SVGPathElement\n\t<motion.path\n\t\tclassName=\"stroke-icon-primary\"\n\t\tfill=\"transparent\"\n\t\tstrokeWidth=\"3\"\n\t\tstrokeLinecap=\"round\"\n\t\t{ ...props }\n\t/>\n);\n\nexport const MenuToggle = ( { className }: MenuToggleProps ) => {\n\tconst { toggleOpen, setTriggerRef } = useHamBurgerState();\n\n\treturn (\n\t\t<Button\n\t\t\t// @ts-expect-error Ref is not present in Button component type, but we need it for the hamburger menu\n\t\t\tref={ setTriggerRef }\n\t\t\tclassName={ cn(\n\t\t\t\t'relative z-[1] rounded-full hover:shadow-sm focus:[box-shadow:none] pointer-events-auto bg-background-primary',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\tvariant=\"ghost\"\n\t\t\tsize=\"xs\"\n\t\t\tonClick={ toggleOpen }\n\t\t\taria-label=\"Toggle menu\"\n\t\t\ticon={\n\t\t\t\t<motion.svg\n\t\t\t\t\tclassName=\"shrink-0 stroke-icon-primary\"\n\t\t\t\t\twidth=\"23\"\n\t\t\t\t\theight=\"23\"\n\t\t\t\t\tvariants={ {\n\t\t\t\t\t\topen: {\n\t\t\t\t\t\t\tviewBox: '0 0 20 20',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclosed: {\n\t\t\t\t\t\t\tviewBox: '0 0 23 18',\n\t\t\t\t\t\t},\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t<Path\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { d: 'M 2 2.5 L 20 2.5' },\n\t\t\t\t\t\t\topen: { d: 'M 3 16.5 L 17 2.5' },\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t\t<Path\n\t\t\t\t\t\td=\"M 2 9.423 L 20 9.423\"\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { opacity: 1 },\n\t\t\t\t\t\t\topen: { opacity: 0 },\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttransition={ { duration: 0.1 } }\n\t\t\t\t\t/>\n\t\t\t\t\t<Path\n\t\t\t\t\t\tvariants={ {\n\t\t\t\t\t\t\tclosed: { d: 'M 2 16.346 L 20 16.346' },\n\t\t\t\t\t\t\topen: { d: 'M 3 2.5 L 17 16.346' },\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</motion.svg>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nconst navVariants = {\n\topen: {\n\t\ttransition: { staggerChildren: 0.07, delayChildren: 0.2 },\n\t},\n\tclosed: {\n\t\ttransition: { staggerChildren: 0.05, staggerDirection: -1 },\n\t},\n};\n\ntype MenuOptionComponent = <T extends ElementType = 'a'>(\n\tprops: MenuOptionProps<T> &\n\t\tOmit<React.ComponentPropsWithoutRef<T>, keyof MenuOptionProps<T>>\n) => React.ReactElement | null;\n\nexport const MenuOption: MenuOptionComponent = ( {\n\ttag: Tag = 'a',\n\tactive,\n\ticon,\n\ticonPosition = 'left',\n\tclassName,\n\tchildren,\n\t...props\n} ) => {\n\tlet leftIcon = null;\n\tlet rightIcon = null;\n\tconst renderIcon =\n\t\ticon && isValidElement( icon )\n\t\t\t? cloneElement( icon, {\n\t\t\t\tkey: 'left-icon',\n\t\t\t\tclassName: cn(\n\t\t\t\t\t'size-5',\n\t\t\t\t\tactive ? 'text-brand-800' : 'text-icon-secondary',\n\t\t\t\t\t( icon.props as { className?: string } )?.className ?? ''\n\t\t\t\t),\n\t\t\t} as React.SVGProps<SVGSVGElement> )\n\t\t\t: null;\n\n\tswitch ( iconPosition ) {\n\t\tcase 'left':\n\t\t\tleftIcon = renderIcon;\n\t\t\tbreak;\n\t\tcase 'right':\n\t\t\trightIcon = renderIcon;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tleftIcon = null;\n\t\t\trightIcon = null;\n\t\t\tbreak;\n\t}\n\n\treturn (\n\t\t<MenuItem>\n\t\t\t<Tag\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full no-underline hover:no-underline text-text-primary text-lg font-medium flex items-center gap-2 px-2.5 py-1.5 rounded-md hover:bg-background-secondary hover:text-text-primary focus:outline-none focus:shadow-none transition ease-in-out duration-150',\n\t\t\t\t\tactive\n\t\t\t\t\t\t? 'text-text-primary bg-background-secondary'\n\t\t\t\t\t\t: 'text-text-secondary',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ !! leftIcon && leftIcon }\n\t\t\t\t<span className=\"contents\">{ children }</span>\n\t\t\t\t{ !! rightIcon && rightIcon }\n\t\t\t</Tag>\n\t\t</MenuItem>\n\t);\n};\n\nconst menuItemVariants = {\n\topen: {\n\t\ty: 0,\n\t\topacity: 1,\n\t\ttransition: {\n\t\t\ty: { stiffness: 1000, velocity: -100 },\n\t\t},\n\t},\n\tclosed: {\n\t\ty: 50,\n\t\topacity: 0,\n\t\ttransition: {\n\t\t\ty: { stiffness: 1000 },\n\t\t},\n\t},\n};\n\nexport const MenuItem = ( { children }: MenuItemProps ) => {\n\treturn (\n\t\t<motion.li\n\t\t\tclassName=\"m-0 p-0 flex items-center justify-start w-full\"\n\t\t\tvariants={ menuItemVariants }\n\t\t\twhileHover={ { scale: 1.05 } }\n\t\t\twhileTap={ { scale: 0.95 } }\n\t\t>\n\t\t\t{ children }\n\t\t</motion.li>\n\t);\n};\n\nexport const MenuOptions: FC<MenuOptionsProps> = ( { children, className } ) => {\n\tconst { triggerRef, triggerOnRight, triggerOnLeft } = useHamBurgerState();\n\tconst [ container, setContainer ] = useState<HTMLDivElement | null>( null );\n\n\tif ( ! triggerRef ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tref={ setContainer }\n\t\t\tclassName={ cn(\n\t\t\t\t'absolute top-0 bottom-0 w-80 h-screen',\n\t\t\t\ttriggerOnRight ? 'right-0' : 'left-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ container && (\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'bg-background-primary shadow-lg absolute top-0 bottom-0 w-80 border-y-0 border-l-0 border-r border-solid border-border-subtle',\n\t\t\t\t\t\ttriggerOnRight ? 'right-0' : 'left-0'\n\t\t\t\t\t) }\n\t\t\t\t\tvariants={ sidebar(\n\t\t\t\t\t\ttriggerRef,\n\t\t\t\t\t\tcontainer,\n\t\t\t\t\t\ttriggerOnLeft ?? false\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<motion.ul\n\t\t\t\tvariants={ navVariants }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'relative mt-14 mb-0 w-full px-5 pb-5 pt-2 flex flex-col items-start justify-start gap-0.5',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</motion.ul>\n\t\t</motion.div>\n\t);\n};\n\nexport const HamburgerMenu = ( { className, children }: HamburgerMenuProps ) => {\n\tconst [ isOpen, toggleOpen ] = useCycle( false, true );\n\tconst [ trigger, setTrigger ] = useState<HTMLButtonElement | null>( null );\n\tconst containerRef = useRef( null );\n\tconst { height } = useDimensions( containerRef );\n\n\tconst { isRight = false, isLeft = true } =\n\t\tgetElementPositionRelativeToScreen( trigger );\n\n\tconst setTriggerRef = ( ref: HTMLButtonElement ) => {\n\t\tstartTransition( () => {\n\t\t\tsetTrigger( ref );\n\t\t} );\n\t};\n\n\tconst providerValue = {\n\t\tisOpen,\n\t\ttoggleOpen,\n\t\tsetTriggerRef,\n\t\ttriggerRef: trigger,\n\t\ttriggerOnRight: isRight,\n\t\ttriggerOnLeft: isLeft,\n\t};\n\n\treturn (\n\t\t<HamBurgerProvider value={ providerValue }>\n\t\t\t<div className={ cn( 'size-6 z-[1]', className ) }>\n\t\t\t\t<motion.nav\n\t\t\t\t\tclassName=\"h-full\"\n\t\t\t\t\tinitial={ false }\n\t\t\t\t\tanimate={ isOpen ? 'open' : 'closed' }\n\t\t\t\t\tcustom={ height }\n\t\t\t\t\tvariants={ {\n\t\t\t\t\t\topen: {\n\t\t\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclosed: {\n\t\t\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t\t\t},\n\t\t\t\t\t} }\n\t\t\t\t\tref={ containerRef }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</motion.nav>\n\t\t\t</div>\n\t\t</HamBurgerProvider>\n\t);\n};\n\n// Update display name\nHamburgerMenu.displayName = 'HamburgerMenu';\nMenuToggle.displayName = 'HamburgerMenu.Toggle';\nMenuOptions.displayName = 'HamburgerMenu.Options';\n( MenuOption as React.ComponentType ).displayName = 'HamburgerMenu.Option';\n\n// Assign Components\nHamburgerMenu.Options = MenuOptions;\nHamburgerMenu.Option = MenuOption;\nHamburgerMenu.Toggle = MenuToggle;\n\nexport default HamburgerMenu;\n"],"names":["HamBurgerContext","createContext","HamBurgerProvider","useHamBurgerState","useContext","useDimensions","ref","dimensions","useRef","useEffect","sidebar","triggerButton","menuContainer","isLeft","buttonData","containerData","buttonX","buttonY","buttonArea","height","Path","props","jsx","motion","MenuToggle","className","toggleOpen","setTriggerRef","Button","cn","jsxs","navVariants","MenuOption","Tag","active","icon","iconPosition","children","leftIcon","rightIcon","renderIcon","isValidElement","cloneElement","MenuItem","menuItemVariants","MenuOptions","triggerRef","triggerOnRight","triggerOnLeft","container","setContainer","useState","HamburgerMenu","isOpen","useCycle","trigger","setTrigger","containerRef","isRight","getElementPositionRelativeToScreen","providerValue","startTransition"],"mappings":"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"}