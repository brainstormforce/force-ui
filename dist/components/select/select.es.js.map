{"version":3,"file":"select.es.js","sources":["../../../src/components/select/select.tsx"],"sourcesContent":["import {\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tuseRef,\n\tcreateContext,\n\tuseContext,\n\tChildren,\n\tcloneElement,\n\tisValidElement,\n\tuseEffect,\n\tuseLayoutEffect,\n\tFragment,\n\ttype ReactNode,\n} from 'react';\nimport { cn } from '@/utilities/functions';\nimport { CheckIcon, ChevronDown, ChevronsUpDown, Search } from 'lucide-react';\nimport {\n\tuseFloating,\n\tuseClick,\n\tuseDismiss,\n\tuseRole,\n\tuseListNavigation,\n\tuseInteractions,\n\tFloatingFocusManager,\n\tuseTypeahead,\n\toffset,\n\tflip,\n\tsize,\n\tautoUpdate,\n\tFloatingPortal,\n} from '@floating-ui/react';\nimport { Badge, Loader } from '@/components';\nimport { nanoid } from 'nanoid';\nimport {\n\tdisabledClassNames,\n\toptionGroupDividerClassNames,\n\toptionGroupDividerSizeClassNames,\n\tsizeClassNames,\n} from './component-style';\nimport type {\n\tOnClick,\n\tOnKeyDown,\n\tSelectButtonProps,\n\tSelectContextValue,\n\tSelectGetValues,\n\tSelectOptionProps,\n\tSelectOptionsProps,\n\tSelectOptionValue,\n\tSelectPortalProps,\n\tSelectProps,\n\tSelectSizes,\n\tSelectOptionGroupProps,\n} from './select-types';\nimport { getTextContent } from './utils';\nimport { useDebouncedCallback } from '@/utilities/hooks';\n\n// Context to manage the state of the select component.\nconst SelectContext = createContext<SelectContextValue>(\n\t{} as SelectContextValue\n);\nconst useSelectContext = () => useContext( SelectContext );\n\nexport function SelectButton( {\n\tchildren,\n\ticon = null, // Icon to show in the select button.\n\tplaceholder = 'Select an option', // Placeholder text.\n\toptionIcon = null, // Icon to show in the selected option.\n\trender,\n\tlabel, // Label for the select component.\n\tclassName,\n\t...props\n}: SelectButtonProps ) {\n\tconst {\n\t\tsizeValue,\n\t\tgetReferenceProps,\n\t\tgetValues,\n\t\tselectId,\n\t\trefs,\n\t\tisOpen,\n\t\tmultiple,\n\t\tcombobox,\n\t\tsetSelected,\n\t\tonChange,\n\t\tisControlled,\n\t\tdisabled,\n\t\tby,\n\t} = useSelectContext();\n\n\tconst badgeSize = {\n\t\tsm: 'xs',\n\t\tmd: 'sm',\n\t\tlg: 'md',\n\t}?.[ sizeValue as SelectSizes ];\n\n\t// Get icon based on the Select component type and user provided icon.\n\tconst getIcon = useCallback( () => {\n\t\tif ( icon ) {\n\t\t\treturn icon;\n\t\t}\n\n\t\tconst iconClassNames =\n\t\t\t'text-field-placeholder ' + disabledClassNames.icon;\n\n\t\treturn combobox ? (\n\t\t\t<ChevronsUpDown className={ iconClassNames } />\n\t\t) : (\n\t\t\t<ChevronDown className={ iconClassNames } />\n\t\t);\n\t}, [ icon ] );\n\n\tconst renderSelected = useCallback( () => {\n\t\tconst selectedValue = getValues();\n\n\t\tif ( ! selectedValue ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\treturn ( selectedValue as SelectOptionValue[] ).map(\n\t\t\t\t( valueItem: SelectOptionValue, index: number ) => (\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tclassName=\"cursor-default\"\n\t\t\t\t\t\ticon={ optionIcon }\n\t\t\t\t\t\ttype=\"rounded\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tsize={ badgeSize as SelectSizes }\n\t\t\t\t\t\tonMouseDown={ handleOnCloseItem( valueItem ) }\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\ttypeof render === 'function'\n\t\t\t\t\t\t\t\t? render( valueItem as SelectOptionValue )\n\t\t\t\t\t\t\t\t: valueItem.toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclosable={ true }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tlet renderValue: ReactNode =\n\t\t\ttypeof selectedValue === 'string' ? selectedValue : '';\n\n\t\tif ( typeof render === 'function' ) {\n\t\t\trenderValue = render( selectedValue as SelectOptionValue );\n\t\t}\n\n\t\tif ( typeof children === 'function' && typeof render !== 'function' ) {\n\t\t\tconst childProps = {\n\t\t\t\tvalue: selectedValue as SelectOptionValue,\n\t\t\t\t...( multiple\n\t\t\t\t\t? {\n\t\t\t\t\t\tonClose: handleOnCloseItem(\n\t\t\t\t\t\t\t\tselectedValue as SelectOptionValue\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t\t: {} ),\n\t\t\t};\n\t\t\trenderValue = children( childProps );\n\t\t}\n\n\t\tif (\n\t\t\t( isValidElement( children ) || typeof children === 'string' ) &&\n\t\t\ttypeof render !== 'function'\n\t\t) {\n\t\t\trenderValue = children;\n\t\t}\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'truncate',\n\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].displaySelected,\n\t\t\t\t\tdisabledClassNames.text\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ renderValue as React.ReactNode }\n\t\t\t</span>\n\t\t);\n\t}, [ getValues, disabled ] );\n\n\tconst handleOnCloseItem =\n\t\t( value: SelectOptionValue ) =>\n\t\t\t( event?: React.MouseEvent<HTMLElement> ) => {\n\t\t\t\tevent?.preventDefault();\n\t\t\t\tevent?.stopPropagation();\n\n\t\t\t\tconst selectedValues = [\n\t\t\t\t\t...( ( getValues() as SelectOptionValue[] ) ?? [] ),\n\t\t\t\t];\n\t\t\t\tconst selectedIndex = selectedValues.findIndex( ( val ) => {\n\t\t\t\t\tif ( val !== null && value !== null && typeof val === 'object' ) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t( val as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t\t( value as Record<string, unknown> )[ by ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn val === value;\n\t\t\t\t} );\n\n\t\t\t\tif ( selectedIndex === -1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselectedValues.splice( selectedIndex, 1 );\n\n\t\t\t\tif ( ! isControlled ) {\n\t\t\t\t\tsetSelected( selectedValues );\n\t\t\t\t}\n\t\t\t\tif ( typeof onChange === 'function' ) {\n\t\t\t\t\tonChange( selectedValues );\n\t\t\t\t}\n\t\t\t};\n\n\treturn (\n\t\t<div className=\"w-full flex flex-col items-start gap-1.5 [&_*]:box-border box-border\">\n\t\t\t{ !! label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]?.label,\n\t\t\t\t\t\t'text-field-label'\n\t\t\t\t\t) }\n\t\t\t\t\thtmlFor={ selectId }\n\t\t\t\t>\n\t\t\t\t\t{ label }\n\t\t\t\t</label>\n\t\t\t) }\n\t\t\t<button\n\t\t\t\tid={ selectId }\n\t\t\t\tref={ refs.setReference }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'flex items-center justify-between w-full box-border transition-[outline,background-color,color,box-shadow] duration-200 bg-white',\n\t\t\t\t\t'outline outline-1 outline-field-border border-none cursor-pointer',\n\t\t\t\t\t! isOpen &&\n\t\t\t\t\t\t'focus:ring-2 focus:ring-offset-2 focus:outline-focus-border focus:ring-focus [&:hover:not(:focus):not(:disabled)]:outline-border-strong',\n\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].selectButton,\n\t\t\t\t\tmultiple &&\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].multiSelect,\n\t\t\t\t\tdisabledClassNames.selectButton,\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ 0 }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...getReferenceProps() }\n\t\t\t>\n\t\t\t\t{ /* Input and selected item container */ }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex-1 grid items-center justify-start gap-1.5 overflow-hidden',\n\t\t\t\t\t\tgetValues() && 'flex flex-wrap'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ /* Show Selected item/items (Multi-selector) */ }\n\t\t\t\t\t{ renderSelected() }\n\n\t\t\t\t\t{ /* Placeholder */ }\n\t\t\t\t\t{ ( multiple\n\t\t\t\t\t\t? ! ( getValues() as SelectOptionValue[] )?.length\n\t\t\t\t\t\t: ! getValues() ) && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'[grid-area:1/1/2/3] text-field-input px-1',\n\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t.displaySelected,\n\t\t\t\t\t\t\t\tdisabledClassNames.text\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ placeholder }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t{ /* Suffix Icon */ }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex items-center [&>svg]:shrink-0',\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].icon\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ getIcon() }\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport function SelectOptionGroup( {\n\tlabel,\n\tchildren,\n\tclassName,\n\t...props\n}: SelectOptionGroupProps ) {\n\tconst { index, totalGroups } = props as {\n\t\tindex: number;\n\t\ttotalGroups: number;\n\t};\n\tconst { sizeValue } = useSelectContext();\n\n\tconst groupClassNames = {\n\t\tsm: 'text-xs',\n\t\tmd: 'text-xs',\n\t\tlg: 'text-sm',\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"flex flex-col\" role=\"group\" aria-label={ label }>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'p-2 font-normal text-text-tertiary',\n\t\t\t\t\t\tgroupClassNames[ sizeValue as SelectSizes ],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tid={ `group-${ label?.toLowerCase().replace( /\\s+/g, '-' ) }` }\n\t\t\t\t>\n\t\t\t\t\t{ label }\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"flex flex-col\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\taria-labelledby={ `group-${ label?.toLowerCase().replace( /\\s+/g, '-' ) }` }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ index < totalGroups &&\n\t\t\t\t!! ( children && Children.count( children ) > 0 ) && (\n\t\t\t\t<hr\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\toptionGroupDividerClassNames,\n\t\t\t\t\t\toptionGroupDividerSizeClassNames[\n\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t]\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n}\n\nexport function SelectOptions( {\n\tchildren,\n\tclassName, // Additional class name for the dropdown.\n}: SelectOptionsProps ) {\n\tconst {\n\t\tisOpen,\n\t\tcontext,\n\t\trefs,\n\t\tcombobox,\n\t\tfloatingStyles,\n\t\tgetFloatingProps,\n\t\tsizeValue,\n\t\tsetSearchKeyword,\n\t\tsetActiveIndex,\n\t\tsetSelectedIndex,\n\t\tvalue,\n\t\tselected,\n\t\tgetValues,\n\t\tsearchKeyword,\n\t\tlistContentRef,\n\t\tby,\n\t\tsearchPlaceholder,\n\t\tactiveIndex,\n\t\tsearchFn,\n\t\tdebounceDelay,\n\t} = useSelectContext();\n\n\tconst initialSelectedValueIndex = useMemo( () => {\n\t\tconst currentValue = getValues();\n\t\tlet indexValue = -1;\n\n\t\tif ( currentValue ) {\n\t\t\t// Get all children as an array\n\t\t\tlet allChildren = Children.toArray( children );\n\n\t\t\t// If it's an option group, flatten the children\n\t\t\tif (\n\t\t\t\tallChildren.length > 0 &&\n\t\t\t\tisValidElement( allChildren[ 0 ] ) &&\n\t\t\t\tallChildren[ 0 ].type === SelectOptionGroup\n\t\t\t) {\n\t\t\t\tallChildren = Children.toArray( children )\n\t\t\t\t\t.map( ( group ) =>\n\t\t\t\t\t\tisValidElement( group )\n\t\t\t\t\t\t\t? Children.toArray( group.props.children )\n\t\t\t\t\t\t\t: []\n\t\t\t\t\t)\n\t\t\t\t\t.flat();\n\t\t\t}\n\n\t\t\tindexValue = allChildren.findIndex( ( child: React.ReactNode ) => {\n\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst childValue = child.props.value;\n\n\t\t\t\tif (\n\t\t\t\t\ttypeof childValue === 'object' &&\n\t\t\t\t\ttypeof currentValue === 'object'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tchildValue[ by ] ===\n\t\t\t\t\t\t( currentValue as Record<string, unknown> )[ by ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// For non-object values, do a direct comparison\n\t\t\t\treturn childValue === currentValue;\n\t\t\t} );\n\t\t}\n\n\t\treturn indexValue;\n\t}, [ value, selected, children, by ] );\n\n\t// Initialize active and selected index.\n\tuseLayoutEffect( () => {\n\t\tif ( isOpen ) {\n\t\t\treturn;\n\t\t}\n\t\tsetActiveIndex( initialSelectedValueIndex );\n\t\tsetSelectedIndex( initialSelectedValueIndex );\n\t}, [ initialSelectedValueIndex, isOpen ] );\n\n\t// Reset active index when search keyword changes.\n\tuseLayoutEffect( () => {\n\t\tif ( ! isOpen ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( combobox && [ -1, null ].includes( activeIndex ) ) {\n\t\t\treturn;\n\t\t}\n\t\tsetActiveIndex( -1 );\n\t}, [ searchKeyword, isOpen ] );\n\n\t// Render children based on the search keyword.\n\tconst renderChildren = useMemo( () => {\n\t\t// Track actual visible groups after filtering\n\t\tlet visibleGroups = 0;\n\t\tlet totalGroups = 0;\n\n\t\t// First pass - count total visible groups\n\t\tChildren.forEach( children, ( child ) => {\n\t\t\tif ( isValidElement( child ) && child.type === SelectOptionGroup ) {\n\t\t\t\tconst hasVisibleChildren = Children.toArray(\n\t\t\t\t\tchild.props.children\n\t\t\t\t).some( ( groupChild ) => {\n\t\t\t\t\tif ( ! isValidElement( groupChild ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Handle option groups when searchFn is not provided\n\t\t\t\t\t// Search functionality will be handled outside of the select component\n\t\t\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\t\t\tconst textContent = getTextContent(\n\t\t\t\t\t\t\tgroupChild.props.children\n\t\t\t\t\t\t)?.toLowerCase();\n\t\t\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\n\t\t\t\t\t\treturn textContent.includes( searchTerm );\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} );\n\n\t\t\t\tif ( hasVisibleChildren ) {\n\t\t\t\t\tvisibleGroups++;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\ttotalGroups = Math.max( 0, visibleGroups - 1 ); // Subtract 1 since we don't need divider after last group\n\t\tlet childIndex = 0;\n\t\tlet groupIndex = 0;\n\n\t\t// Process child to render\n\t\tconst processChild = ( child: React.ReactNode ): React.ReactNode => {\n\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Handle option groups\n\t\t\tif ( child.type === SelectOptionGroup ) {\n\t\t\t\t// Recursively process children of the option group\n\t\t\t\tconst groupChildren = Children.map(\n\t\t\t\t\tchild.props.children,\n\t\t\t\t\tprocessChild\n\t\t\t\t);\n\t\t\t\t// Only render group if it has visible children\n\t\t\t\tconst hasChildren = groupChildren?.some( ( c ) => c !== null );\n\n\t\t\t\tif ( ! hasChildren ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst groupProps = {\n\t\t\t\t\t...child.props,\n\t\t\t\t\tchildren: groupChildren,\n\t\t\t\t\tindex: groupIndex,\n\t\t\t\t\ttotalGroups,\n\t\t\t\t};\n\n\t\t\t\tgroupIndex++;\n\t\t\t\treturn cloneElement( child, groupProps );\n\t\t\t}\n\n\t\t\t// Handle regular options when searchFn is not provided\n\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\tconst textContent = getTextContent(\n\t\t\t\t\tchild.props?.children\n\t\t\t\t)?.toLowerCase();\n\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\n\t\t\t\tconst textMatch = textContent?.includes( searchTerm );\n\n\t\t\t\tif ( ! textMatch ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn cloneElement( child, {\n\t\t\t\t...child.props,\n\t\t\t\tindex: childIndex++,\n\t\t\t} );\n\t\t};\n\n\t\treturn Children.map( children, processChild );\n\t}, [ searchKeyword, value, selected, children, searchFn ] );\n\tconst childrenCount = Children.count( renderChildren );\n\n\t// Update the content list reference.\n\tuseEffect( () => {\n\t\tlistContentRef.current = [];\n\t\t// Get all children as an array.\n\t\tlet allChildren = Children.toArray( children );\n\t\t// If it's an option group and has children.\n\t\tif (\n\t\t\tallChildren &&\n\t\t\tisValidElement( allChildren[ 0 ] ) &&\n\t\t\tallChildren[ 0 ].type === SelectOptionGroup\n\t\t) {\n\t\t\tallChildren = Children.toArray( allChildren )\n\t\t\t\t.map( ( child ) =>\n\t\t\t\t\tisValidElement( child ) ? child.props.children : null\n\t\t\t\t)\n\t\t\t\t.filter( Boolean );\n\t\t}\n\t\t// Update the list content reference.\n\t\tChildren.forEach( allChildren, ( child ) => {\n\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textContent = getTextContent(\n\t\t\t\tchild.props?.children\n\t\t\t)?.toLowerCase();\n\t\t\t// Handle regular options when searchFn is not provided\n\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\t\t\t\tconst textMatch = textContent?.includes( searchTerm );\n\n\t\t\t\tif ( ! textMatch ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlistContentRef.current.push( textContent );\n\t\t} );\n\t}, [ searchKeyword, searchFn ] );\n\n\tconst [ searching, setSearching ] = useState( false );\n\n\t// Create a function to handle the search function.\n\tconst handleSearchFn = useCallback( async () => {\n\t\tif ( ! searchFn || typeof searchFn !== 'function' || searching ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSearching( true );\n\t\ttry {\n\t\t\tawait searchFn( searchKeyword );\n\t\t} catch ( error ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( error );\n\t\t} finally {\n\t\t\tsetSearching( false );\n\t\t}\n\t}, [ searchKeyword ] );\n\n\t// Debounce the search function.\n\tconst initiateSearch = useDebouncedCallback( handleSearchFn, debounceDelay! );\n\n\t// Initiate search when searchFn is a function.\n\tuseEffect( () => {\n\t\tif ( typeof searchFn !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tinitiateSearch();\n\t}, [ initiateSearch ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ /* Dropdown */ }\n\t\t\t{ isOpen && (\n\t\t\t\t<>\n\t\t\t\t\t<FloatingFocusManager context={ context } modal={ false }>\n\t\t\t\t\t\t{ /* Dropdown Wrapper */ }\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={ refs.setFloating }\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'box-border [&_*]:box-border w-full bg-white outline-none shadow-lg outline outline-1 outline-border-subtle',\n\t\t\t\t\t\t\t\tcombobox &&\n\t\t\t\t\t\t\t\t\t'grid grid-cols-1 grid-rows-[auto_1fr] divide-y divide-x-0 divide-solid divide-border-subtle',\n\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t.dropdown,\n\t\t\t\t\t\t\t\t! combobox && 'h-auto',\n\t\t\t\t\t\t\t\t! combobox\n\t\t\t\t\t\t\t\t\t? 'overflow-y-auto overflow-x-hidden'\n\t\t\t\t\t\t\t\t\t: 'overflow-hidden',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t...floatingStyles,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t{ ...getFloatingProps() }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ /* Searchbox */ }\n\t\t\t\t\t\t\t{ combobox && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t\t\t.searchbarWrapper\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ searching ? (\n\t\t\t\t\t\t\t\t\t\t<Loader\n\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t\t].searchbarIcon\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'text-icon-secondary shrink-0',\n\t\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t\t].searchbarIcon\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t'px-1 w-full placeholder:text-field-placeholder border-0 focus:outline-none focus:shadow-none',\n\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t].searchbar\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\t\tname=\"keyword\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={ searchPlaceholder }\n\t\t\t\t\t\t\t\t\t\tonChange={ ( event ) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSearchKeyword( event.target.value )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue={ searchKeyword }\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ /* Dropdown Items Wrapper */ }\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'overflow-y-auto overflow-x-hidden',\n\t\t\t\t\t\t\t\t\t! combobox && 'w-full h-full',\n\t\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t\t.dropdownItemsWrapper\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ /* Dropdown Items */ }\n\t\t\t\t\t\t\t\t{ !! childrenCount && renderChildren }\n\n\t\t\t\t\t\t\t\t{ /* No items found */ }\n\t\t\t\t\t\t\t\t{ ! childrenCount && (\n\t\t\t\t\t\t\t\t\t<div className=\"p-2 text-center text-base font-medium text-field-placeholder\">\n\t\t\t\t\t\t\t\t\t\tNo items found\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FloatingFocusManager>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport function SelectPortal( { children, root, id }: SelectPortalProps ) {\n\treturn (\n\t\t<FloatingPortal id={ id } root={ root }>\n\t\t\t{ children }\n\t\t</FloatingPortal>\n\t);\n}\n\nexport function SelectItem( {\n\tvalue,\n\tselected,\n\tchildren,\n\tclassName,\n\t...props\n}: SelectOptionProps ) {\n\tconst {\n\t\tsizeValue,\n\t\tgetItemProps,\n\t\tonKeyDownItem,\n\t\tonClickItem,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tupdateListRef,\n\t\tgetValues,\n\t\tby,\n\t\tmultiple,\n\t} = useSelectContext();\n\tconst { index: indx } = props;\n\tconst initialIndxRef = useRef( indx );\n\n\tconst selectItemClassNames = {\n\t\tsm: 'py-1.5 px-2 text-xs font-normal',\n\t\tmd: 'p-2 text-sm font-normal',\n\t\tlg: 'p-2 text-base font-normal',\n\t};\n\tconst selectedIconClassName = {\n\t\tsm: 'size-4',\n\t\tmd: 'size-4',\n\t\tlg: 'size-5',\n\t};\n\n\tconst multipleChecked = useMemo( () => {\n\t\tif ( ! multiple ) {\n\t\t\treturn false;\n\t\t}\n\t\tconst currentValue = getValues();\n\t\tif ( ! currentValue ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ( currentValue as SelectOptionValue[] ).some( ( val ) => {\n\t\t\tif ( val !== null && value !== null && typeof val === 'object' ) {\n\t\t\t\treturn (\n\t\t\t\t\t( val as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( value as Record<string, unknown> )[ by ]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn val === value;\n\t\t} );\n\t}, [ value, getValues ] );\n\n\tconst isChecked = useMemo( () => {\n\t\tif ( typeof selected === 'boolean' ) {\n\t\t\treturn selected;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\treturn multipleChecked;\n\t\t}\n\n\t\treturn indx === selectedIndex;\n\t}, [ multipleChecked, selectedIndex, selected ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'w-full flex items-center justify-between text-text-primary hover:bg-button-tertiary-hover rounded-md transition-all duration-150 cursor-pointer focus:outline-none focus-within:outline-none outline-none',\n\t\t\t\tselectItemClassNames[ sizeValue as SelectSizes ],\n\t\t\t\tindx === activeIndex && 'bg-button-tertiary-hover',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\tref={ ( node ) => {\n\t\t\t\tupdateListRef( indx as number, node as HTMLElement );\n\t\t\t} }\n\t\t\trole=\"option\"\n\t\t\ttabIndex={ indx === activeIndex ? 0 : -1 }\n\t\t\taria-selected={ isChecked && indx === activeIndex }\n\t\t\t{ ...getItemProps( {\n\t\t\t\t// Handle pointer select.\n\t\t\t\tonClick() {\n\t\t\t\t\tonClickItem( initialIndxRef.current as number, value );\n\t\t\t\t},\n\t\t\t\t// Handle keyboard select.\n\t\t\t\tonKeyDown( event: React.KeyboardEvent ) {\n\t\t\t\t\tonKeyDownItem(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tinitialIndxRef.current as number,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t} ) }\n\t\t>\n\t\t\t<span className=\"w-full truncate\">{ children }</span>\n\t\t\t{ isChecked && (\n\t\t\t\t<CheckIcon\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'text-icon-on-color-disabled',\n\t\t\t\t\t\tselectedIconClassName[ sizeValue as SelectSizes ]\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nconst SelectComponent = ( {\n\tid,\n\tsize: sizeValue = 'md', // sm, md, lg\n\tvalue, // Value of the select (for controlled component).\n\tdefaultValue, // Default value of the select (for uncontrolled component).\n\tonChange, // Callback function to handle the change event.\n\tby = 'id', // Used to identify the select component. Default is 'id'.\n\tchildren,\n\tmultiple = false, // If true, it will allow multiple selection.\n\tcombobox = false, // If true, it will show a search box.\n\tdisabled = false, // If true, it will disable the select component.\n\tsearchPlaceholder = 'Search...', // Placeholder text for search box.\n\tsearchFn, // Function to handle the search.\n\tdebounceDelay = 500, // Debounce delay for the search.\n}: SelectProps ) => {\n\tconst selectId = useMemo( () => id || `select-${ nanoid() }`, [ id ] );\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst [ selected, setSelected ] = useState<\n\t\tSelectOptionValue | SelectOptionValue[]\n\t>( defaultValue! );\n\tconst [ searchKeyword, setSearchKeyword ] = useState( '' );\n\n\tconst getValues = useCallback<SelectGetValues>( () => {\n\t\tif ( isControlled ) {\n\t\t\treturn value as string | number | Record<string, unknown>;\n\t\t}\n\t\treturn selected as string | number | Record<string, unknown>;\n\t}, [ isControlled, value, selected ] );\n\n\t// Dropdown position related code (Start)\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst [ activeIndex, setActiveIndex ] = useState<number | null>( null );\n\tconst [ selectedIndex, setSelectedIndex ] = useState<number | null>( null );\n\n\tconst dropdownMaxHeightBySize = {\n\t\tsm: combobox ? 256 : 172,\n\t\tmd: combobox ? 256 : 216,\n\t\tlg: combobox ? 256 : 216,\n\t};\n\n\tconst { refs, floatingStyles, context } = useFloating( {\n\t\tplacement: 'bottom-start',\n\t\topen: isOpen,\n\t\tonOpenChange: setIsOpen,\n\t\twhileElementsMounted: autoUpdate,\n\t\tmiddleware: [\n\t\t\toffset( 5 ),\n\t\t\tflip( { padding: 10 } ),\n\t\t\tsize( {\n\t\t\t\tapply( { rects, elements, availableHeight } ) {\n\t\t\t\t\tObject.assign( elements.floating.style, {\n\t\t\t\t\t\tmaxHeight: `min(${ availableHeight }px, ${ dropdownMaxHeightBySize[ sizeValue as SelectSizes ] }px)`,\n\t\t\t\t\t\tmaxWidth: `${ rects.reference.width }px`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\tpadding: 10,\n\t\t\t} ),\n\t\t],\n\t} );\n\n\tconst listRef = useRef<Array<HTMLElement | null>>( [] );\n\tconst listContentRef = useRef( [] );\n\tconst isTypingRef = useRef( false );\n\n\tconst click = useClick( context, { event: 'mousedown' } );\n\tconst dismiss = useDismiss( context );\n\tconst role = useRole( context, { role: 'listbox' } );\n\tconst listNav = useListNavigation( context, {\n\t\tlistRef,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tonNavigate: setActiveIndex,\n\t\t// This is a large list, allow looping.\n\t\tloop: true,\n\t} );\n\tconst typeahead = useTypeahead( context, {\n\t\tlistRef: listContentRef,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tonMatch: isOpen ? setActiveIndex : setSelectedIndex,\n\t\tonTypingChange( isTyping ) {\n\t\t\tisTypingRef.current = isTyping;\n\t\t},\n\t} );\n\n\tconst { getReferenceProps, getFloatingProps, getItemProps } =\n\t\tuseInteractions( [\n\t\t\tdismiss,\n\t\t\trole,\n\t\t\tlistNav,\n\t\t\tclick,\n\t\t\t...( ! combobox ? [ typeahead ] : [] ),\n\t\t] );\n\n\tconst handleMultiSelect: OnClick = ( index, newValue ) => {\n\t\tconst selectedValues = [\n\t\t\t...( ( getValues() as SelectOptionValue[] ) ?? [] ),\n\t\t];\n\t\tconst valueIndex = selectedValues.findIndex( ( selectedValue ) => {\n\t\t\tif (\n\t\t\t\tselectedValue !== null &&\n\t\t\t\tnewValue !== null &&\n\t\t\t\ttypeof selectedValue === 'object'\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( newValue as Record<string, unknown> )[ by ]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn selectedValue === newValue;\n\t\t} );\n\n\t\tif ( valueIndex !== -1 ) {\n\t\t\treturn;\n\t\t}\n\t\tselectedValues.push( newValue );\n\n\t\tif ( ! isControlled ) {\n\t\t\tsetSelected( selectedValues );\n\t\t}\n\t\tsetSelectedIndex( index );\n\t\t( refs.reference.current as HTMLElement ).focus();\n\t\tsetIsOpen( false );\n\t\tsetSearchKeyword( '' );\n\t\tif ( typeof onChange === 'function' ) {\n\t\t\tonChange( selectedValues );\n\t\t}\n\t};\n\n\tconst handleSelect: OnClick = ( index, newValue ) => {\n\t\tif ( multiple ) {\n\t\t\treturn handleMultiSelect( index, newValue );\n\t\t}\n\t\tsetSelectedIndex( index );\n\t\tif ( ! isControlled ) {\n\t\t\tsetSelected( newValue );\n\t\t}\n\t\t( refs.reference.current as HTMLElement ).focus();\n\t\tsetIsOpen( false );\n\t\tsetSearchKeyword( '' );\n\t\tif ( typeof onChange === 'function' ) {\n\t\t\tonChange( newValue );\n\t\t}\n\t};\n\t// Dropdown position related code (End)\n\n\tconst updateListRef = useCallback( ( index: number, node: HTMLElement ) => {\n\t\tlistRef.current[ index ] = node;\n\t}, [] );\n\n\tconst onClickItem: OnClick = ( index, newValue ) => {\n\t\thandleSelect( index, newValue );\n\t};\n\n\tconst onKeyDownItem: OnKeyDown = ( event, index, newValue ) => {\n\t\tif ( event.key === 'Enter' ) {\n\t\t\tevent.preventDefault();\n\t\t\thandleSelect( index, newValue );\n\t\t}\n\n\t\tif ( event.key === ' ' && ! isTypingRef.current ) {\n\t\t\tevent.preventDefault();\n\t\t\thandleSelect( index, newValue );\n\t\t}\n\t};\n\n\treturn (\n\t\t<SelectContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tselectedIndex,\n\t\t\t\tsetSelectedIndex,\n\t\t\t\tactiveIndex,\n\t\t\t\tsetActiveIndex,\n\t\t\t\tselected,\n\t\t\t\tsetSelected,\n\t\t\t\thandleSelect,\n\t\t\t\tcombobox,\n\t\t\t\tsizeValue,\n\t\t\t\tmultiple,\n\t\t\t\tonChange,\n\t\t\t\tisTypingRef,\n\t\t\t\tgetItemProps,\n\t\t\t\tonClickItem,\n\t\t\t\tonKeyDownItem,\n\t\t\t\tgetValues,\n\t\t\t\tselectId,\n\t\t\t\tgetReferenceProps,\n\t\t\t\tisOpen,\n\t\t\t\tvalue,\n\t\t\t\tupdateListRef,\n\t\t\t\trefs,\n\t\t\t\tlistContentRef,\n\t\t\t\tby,\n\t\t\t\tgetFloatingProps,\n\t\t\t\tfloatingStyles,\n\t\t\t\tcontext,\n\t\t\t\tsearchKeyword,\n\t\t\t\tsetSearchKeyword,\n\t\t\t\tdisabled,\n\t\t\t\tisControlled,\n\t\t\t\tsearchPlaceholder,\n\t\t\t\tsearchFn,\n\t\t\t\tdebounceDelay,\n\t\t\t} }\n\t\t>\n\t\t\t{ children }\n\t\t</SelectContext.Provider>\n\t);\n};\n\nSelectComponent.displayName = 'Select';\n\nconst Select = Object.assign( SelectComponent, {\n\tPortal: SelectPortal,\n\tButton: SelectButton,\n\tOptions: SelectOptions,\n\tOption: SelectItem,\n\tOptionGroup: SelectOptionGroup,\n} );\n\nSelectPortal.displayName = 'Select.Portal';\nSelectButton.displayName = 'Select.Button';\nSelectOptions.displayName = 'Select.Options';\nSelectItem.displayName = 'Select.Option';\nSelectOptionGroup.displayName = 'Select.OptionGroup';\n\nexport default Select;\n"],"names":["SelectContext","createContext","useSelectContext","useContext","SelectButton","children","icon","placeholder","optionIcon","render","label","className","props","sizeValue","getReferenceProps","getValues","selectId","refs","isOpen","multiple","combobox","setSelected","onChange","isControlled","disabled","by","badgeSize","getIcon","useCallback","iconClassNames","disabledClassNames","ChevronsUpDown","jsx","ChevronDown","renderSelected","selectedValue","valueItem","index","Badge","handleOnCloseItem","renderValue","childProps","isValidElement","cn","sizeClassNames","value","event","selectedValues","selectedIndex","val","jsxs","SelectOptionGroup","totalGroups","Fragment","Children","optionGroupDividerClassNames","optionGroupDividerSizeClassNames","SelectOptions","context","floatingStyles","getFloatingProps","setSearchKeyword","setActiveIndex","setSelectedIndex","selected","searchKeyword","listContentRef","searchPlaceholder","activeIndex","searchFn","debounceDelay","initialSelectedValueIndex","useMemo","currentValue","indexValue","allChildren","group","child","childValue","useLayoutEffect","renderChildren","visibleGroups","groupChild","textContent","getTextContent","searchTerm","childIndex","groupIndex","processChild","groupChildren","c","groupProps","cloneElement","childrenCount","useEffect","searching","setSearching","useState","handleSearchFn","error","initiateSearch","useDebouncedCallback","FloatingFocusManager","Loader","Search","SelectPortal","root","id","FloatingPortal","SelectItem","getItemProps","onKeyDownItem","onClickItem","updateListRef","indx","initialIndxRef","useRef","selectItemClassNames","selectedIconClassName","multipleChecked","isChecked","node","CheckIcon","SelectComponent","defaultValue","nanoid","setIsOpen","dropdownMaxHeightBySize","useFloating","autoUpdate","offset","flip","size","rects","elements","availableHeight","listRef","isTypingRef","click","useClick","dismiss","useDismiss","role","useRole","listNav","useListNavigation","typeahead","useTypeahead","isTyping","useInteractions","handleMultiSelect","newValue","handleSelect","Select"],"mappings":"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"}