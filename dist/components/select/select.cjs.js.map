{"version":3,"file":"select.cjs.js","sources":["../../../src/components/select/select.tsx"],"sourcesContent":["import {\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tuseRef,\n\tcreateContext,\n\tuseContext,\n\tChildren,\n\tcloneElement,\n\tisValidElement,\n\tuseEffect,\n\tuseLayoutEffect,\n\tFragment,\n\ttype ReactNode,\n} from 'react';\nimport { cn } from '@/utilities/functions';\nimport { CheckIcon, ChevronDown, ChevronsUpDown, Search } from 'lucide-react';\nimport {\n\tuseFloating,\n\tuseClick,\n\tuseDismiss,\n\tuseRole,\n\tuseListNavigation,\n\tuseInteractions,\n\tFloatingFocusManager,\n\tuseTypeahead,\n\toffset,\n\tflip,\n\tsize,\n\tautoUpdate,\n\tFloatingPortal,\n} from '@floating-ui/react';\nimport { Badge, Loader } from '@/components';\nimport { nanoid } from 'nanoid';\nimport {\n\tdisabledClassNames,\n\toptionGroupDividerClassNames,\n\toptionGroupDividerSizeClassNames,\n\tsizeClassNames,\n} from './component-style';\nimport type {\n\tOnClick,\n\tOnKeyDown,\n\tSelectButtonProps,\n\tSelectContextValue,\n\tSelectGetValues,\n\tSelectOptionProps,\n\tSelectOptionsProps,\n\tSelectOptionValue,\n\tSelectPortalProps,\n\tSelectProps,\n\tSelectSizes,\n\tSelectOptionGroupProps,\n} from './select-types';\nimport { getTextContent } from './utils';\nimport { useDebouncedCallback } from '@/utilities/hooks';\n\n// Context to manage the state of the select component.\nconst SelectContext = createContext<SelectContextValue>(\n\t{} as SelectContextValue\n);\nconst useSelectContext = () => useContext( SelectContext );\n\nexport function SelectButton( {\n\tchildren,\n\ticon = null, // Icon to show in the select button.\n\tplaceholder = 'Select an option', // Placeholder text.\n\toptionIcon = null, // Icon to show in the selected option.\n\trender,\n\tlabel, // Label for the select component.\n\tclassName,\n\t...props\n}: SelectButtonProps ) {\n\tconst {\n\t\tsizeValue,\n\t\tgetReferenceProps,\n\t\tgetValues,\n\t\tselectId,\n\t\trefs,\n\t\tisOpen,\n\t\tmultiple,\n\t\tcombobox,\n\t\tsetSelected,\n\t\tonChange,\n\t\tisControlled,\n\t\tdisabled,\n\t\tby,\n\t} = useSelectContext();\n\n\tconst badgeSize = {\n\t\tsm: 'xs',\n\t\tmd: 'sm',\n\t\tlg: 'md',\n\t}?.[ sizeValue as SelectSizes ];\n\n\t// Get icon based on the Select component type and user provided icon.\n\tconst getIcon = useCallback( () => {\n\t\tif ( icon ) {\n\t\t\treturn icon;\n\t\t}\n\n\t\tconst iconClassNames =\n\t\t\t'text-field-placeholder ' + disabledClassNames.icon;\n\n\t\treturn combobox ? (\n\t\t\t<ChevronsUpDown className={ iconClassNames } />\n\t\t) : (\n\t\t\t<ChevronDown className={ iconClassNames } />\n\t\t);\n\t}, [ icon ] );\n\n\tconst renderSelected = useCallback( () => {\n\t\tconst selectedValue = getValues();\n\n\t\tif ( ! selectedValue ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\treturn ( selectedValue as SelectOptionValue[] ).map(\n\t\t\t\t( valueItem: SelectOptionValue, index: number ) => (\n\t\t\t\t\t<Badge\n\t\t\t\t\t\tclassName=\"cursor-default\"\n\t\t\t\t\t\ticon={ optionIcon }\n\t\t\t\t\t\ttype=\"rounded\"\n\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\tsize={ badgeSize as SelectSizes }\n\t\t\t\t\t\tonMouseDown={ handleOnCloseItem( valueItem ) }\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\ttypeof render === 'function'\n\t\t\t\t\t\t\t\t? render( valueItem as SelectOptionValue )\n\t\t\t\t\t\t\t\t: valueItem.toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclosable={ true }\n\t\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tlet renderValue: ReactNode =\n\t\t\ttypeof selectedValue === 'string' ? selectedValue : '';\n\n\t\tif ( typeof render === 'function' ) {\n\t\t\trenderValue = render( selectedValue as SelectOptionValue );\n\t\t}\n\n\t\tif ( typeof children === 'function' && typeof render !== 'function' ) {\n\t\t\tconst childProps = {\n\t\t\t\tvalue: selectedValue as SelectOptionValue,\n\t\t\t\t...( multiple\n\t\t\t\t\t? {\n\t\t\t\t\t\tonClose: handleOnCloseItem(\n\t\t\t\t\t\t\t\tselectedValue as SelectOptionValue\n\t\t\t\t\t\t),\n\t\t\t\t\t}\n\t\t\t\t\t: {} ),\n\t\t\t};\n\t\t\trenderValue = children( childProps );\n\t\t}\n\n\t\tif (\n\t\t\t( isValidElement( children ) || typeof children === 'string' ) &&\n\t\t\ttypeof render !== 'function'\n\t\t) {\n\t\t\trenderValue = children;\n\t\t}\n\n\t\treturn (\n\t\t\t<span\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'truncate',\n\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].displaySelected,\n\t\t\t\t\tdisabledClassNames.text\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ renderValue as React.ReactNode }\n\t\t\t</span>\n\t\t);\n\t}, [ getValues, disabled ] );\n\n\tconst handleOnCloseItem =\n\t\t( value: SelectOptionValue ) =>\n\t\t\t( event?: React.MouseEvent<HTMLElement> ) => {\n\t\t\t\tevent?.preventDefault();\n\t\t\t\tevent?.stopPropagation();\n\n\t\t\t\tconst selectedValues = [\n\t\t\t\t\t...( ( getValues() as SelectOptionValue[] ) ?? [] ),\n\t\t\t\t];\n\t\t\t\tconst selectedIndex = selectedValues.findIndex( ( val ) => {\n\t\t\t\t\tif ( val !== null && value !== null && typeof val === 'object' ) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t( val as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t\t( value as Record<string, unknown> )[ by ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn val === value;\n\t\t\t\t} );\n\n\t\t\t\tif ( selectedIndex === -1 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tselectedValues.splice( selectedIndex, 1 );\n\n\t\t\t\tif ( ! isControlled ) {\n\t\t\t\t\tsetSelected( selectedValues );\n\t\t\t\t}\n\t\t\t\tif ( typeof onChange === 'function' ) {\n\t\t\t\t\tonChange( selectedValues );\n\t\t\t\t}\n\t\t\t};\n\n\treturn (\n\t\t<div className=\"w-full flex flex-col items-start gap-1.5 [&_*]:box-border box-border\">\n\t\t\t{ !! label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]?.label,\n\t\t\t\t\t\t'text-field-label'\n\t\t\t\t\t) }\n\t\t\t\t\thtmlFor={ selectId }\n\t\t\t\t>\n\t\t\t\t\t{ label }\n\t\t\t\t</label>\n\t\t\t) }\n\t\t\t<button\n\t\t\t\tid={ selectId }\n\t\t\t\tref={ refs.setReference }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'flex items-center justify-between w-full box-border transition-[outline,background-color,color,box-shadow] duration-200 bg-white',\n\t\t\t\t\t'outline outline-1 outline-field-border border-none cursor-pointer',\n\t\t\t\t\t! isOpen &&\n\t\t\t\t\t\t'focus:ring-2 focus:ring-offset-2 focus:outline-focus-border focus:ring-focus [&:hover:not(:focus):not(:disabled)]:outline-border-strong',\n\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].selectButton,\n\t\t\t\t\tmultiple &&\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].multiSelect,\n\t\t\t\t\tdisabledClassNames.selectButton,\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\ttabIndex={ 0 }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...getReferenceProps() }\n\t\t\t>\n\t\t\t\t{ /* Input and selected item container */ }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex-1 grid items-center justify-start gap-1.5 overflow-hidden',\n\t\t\t\t\t\tgetValues() && 'flex flex-wrap'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ /* Show Selected item/items (Multi-selector) */ }\n\t\t\t\t\t{ renderSelected() }\n\n\t\t\t\t\t{ /* Placeholder */ }\n\t\t\t\t\t{ ( multiple\n\t\t\t\t\t\t? ! ( getValues() as SelectOptionValue[] )?.length\n\t\t\t\t\t\t: ! getValues() ) && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'[grid-area:1/1/2/3] text-field-input px-1',\n\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t.displaySelected,\n\t\t\t\t\t\t\t\tdisabledClassNames.text\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ placeholder }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t\t{ /* Suffix Icon */ }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex items-center [&>svg]:shrink-0',\n\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ].icon\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ getIcon() }\n\t\t\t\t</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport function SelectOptionGroup( {\n\tlabel,\n\tchildren,\n\tclassName,\n\t...props\n}: SelectOptionGroupProps ) {\n\tconst { index, totalGroups } = props as {\n\t\tindex: number;\n\t\ttotalGroups: number;\n\t};\n\tconst { sizeValue } = useSelectContext();\n\n\tconst groupClassNames = {\n\t\tsm: 'text-xs',\n\t\tmd: 'text-xs',\n\t\tlg: 'text-sm',\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"flex flex-col\" role=\"group\" aria-label={ label }>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'p-2 font-normal text-text-tertiary',\n\t\t\t\t\t\tgroupClassNames[ sizeValue as SelectSizes ],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tid={ `group-${ label?.toLowerCase().replace( /\\s+/g, '-' ) }` }\n\t\t\t\t>\n\t\t\t\t\t{ label }\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"flex flex-col\"\n\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\taria-labelledby={ `group-${ label?.toLowerCase().replace( /\\s+/g, '-' ) }` }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{ index < totalGroups &&\n\t\t\t\t!! ( children && Children.count( children ) > 0 ) && (\n\t\t\t\t<hr\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\toptionGroupDividerClassNames,\n\t\t\t\t\t\toptionGroupDividerSizeClassNames[\n\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t]\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</Fragment>\n\t);\n}\n\nexport function SelectOptions( {\n\tchildren,\n\tclassName, // Additional class name for the dropdown.\n}: SelectOptionsProps ) {\n\tconst {\n\t\tisOpen,\n\t\tcontext,\n\t\trefs,\n\t\tcombobox,\n\t\tfloatingStyles,\n\t\tgetFloatingProps,\n\t\tsizeValue,\n\t\tsetSearchKeyword,\n\t\tsetActiveIndex,\n\t\tsetSelectedIndex,\n\t\tvalue,\n\t\tselected,\n\t\tgetValues,\n\t\tsearchKeyword,\n\t\tlistContentRef,\n\t\tby,\n\t\tsearchPlaceholder,\n\t\tactiveIndex,\n\t\tsearchFn,\n\t\tdebounceDelay,\n\t} = useSelectContext();\n\n\tconst initialSelectedValueIndex = useMemo( () => {\n\t\tconst currentValue = getValues();\n\t\tlet indexValue = -1;\n\n\t\tif ( currentValue ) {\n\t\t\t// Get all children as an array\n\t\t\tlet allChildren = Children.toArray( children );\n\n\t\t\t// If it's an option group, flatten the children\n\t\t\tif (\n\t\t\t\tallChildren.length > 0 &&\n\t\t\t\tisValidElement( allChildren[ 0 ] ) &&\n\t\t\t\tallChildren[ 0 ].type === SelectOptionGroup\n\t\t\t) {\n\t\t\t\tallChildren = Children.toArray( children )\n\t\t\t\t\t.map( ( group ) =>\n\t\t\t\t\t\tisValidElement( group )\n\t\t\t\t\t\t\t? Children.toArray( group.props.children )\n\t\t\t\t\t\t\t: []\n\t\t\t\t\t)\n\t\t\t\t\t.flat();\n\t\t\t}\n\n\t\t\tindexValue = allChildren.findIndex( ( child: React.ReactNode ) => {\n\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tconst childValue = child.props.value;\n\n\t\t\t\tif (\n\t\t\t\t\ttypeof childValue === 'object' &&\n\t\t\t\t\ttypeof currentValue === 'object'\n\t\t\t\t) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tchildValue[ by ] ===\n\t\t\t\t\t\t( currentValue as Record<string, unknown> )[ by ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// For non-object values, do a direct comparison\n\t\t\t\treturn childValue === currentValue;\n\t\t\t} );\n\t\t}\n\n\t\treturn indexValue;\n\t}, [ value, selected, children, by ] );\n\n\t// Initialize active and selected index.\n\tuseLayoutEffect( () => {\n\t\tif ( isOpen ) {\n\t\t\treturn;\n\t\t}\n\t\tsetActiveIndex( initialSelectedValueIndex );\n\t\tsetSelectedIndex( initialSelectedValueIndex );\n\t}, [ initialSelectedValueIndex, isOpen ] );\n\n\t// Reset active index when search keyword changes.\n\tuseLayoutEffect( () => {\n\t\tif ( ! isOpen ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( combobox && [ -1, null ].includes( activeIndex ) ) {\n\t\t\treturn;\n\t\t}\n\t\tsetActiveIndex( -1 );\n\t}, [ searchKeyword, isOpen ] );\n\n\t// Render children based on the search keyword.\n\tconst renderChildren = useMemo( () => {\n\t\t// Track actual visible groups after filtering\n\t\tlet visibleGroups = 0;\n\t\tlet totalGroups = 0;\n\n\t\t// First pass - count total visible groups\n\t\tChildren.forEach( children, ( child ) => {\n\t\t\tif ( isValidElement( child ) && child.type === SelectOptionGroup ) {\n\t\t\t\tconst hasVisibleChildren = Children.toArray(\n\t\t\t\t\tchild.props.children\n\t\t\t\t).some( ( groupChild ) => {\n\t\t\t\t\tif ( ! isValidElement( groupChild ) ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Handle option groups when searchFn is not provided\n\t\t\t\t\t// Search functionality will be handled outside of the select component\n\t\t\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\t\t\tconst textContent = getTextContent(\n\t\t\t\t\t\t\tgroupChild.props.children\n\t\t\t\t\t\t)?.toLowerCase();\n\t\t\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\n\t\t\t\t\t\treturn textContent.includes( searchTerm );\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} );\n\n\t\t\t\tif ( hasVisibleChildren ) {\n\t\t\t\t\tvisibleGroups++;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\ttotalGroups = Math.max( 0, visibleGroups - 1 ); // Subtract 1 since we don't need divider after last group\n\t\tlet childIndex = 0;\n\t\tlet groupIndex = 0;\n\n\t\t// Process child to render\n\t\tconst processChild = ( child: React.ReactNode ): React.ReactNode => {\n\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Handle option groups\n\t\t\tif ( child.type === SelectOptionGroup ) {\n\t\t\t\t// Recursively process children of the option group\n\t\t\t\tconst groupChildren = Children.map(\n\t\t\t\t\tchild.props.children,\n\t\t\t\t\tprocessChild\n\t\t\t\t);\n\t\t\t\t// Only render group if it has visible children\n\t\t\t\tconst hasChildren = groupChildren?.some( ( c ) => c !== null );\n\n\t\t\t\tif ( ! hasChildren ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst groupProps = {\n\t\t\t\t\t...child.props,\n\t\t\t\t\tchildren: groupChildren,\n\t\t\t\t\tindex: groupIndex,\n\t\t\t\t\ttotalGroups,\n\t\t\t\t};\n\n\t\t\t\tgroupIndex++;\n\t\t\t\treturn cloneElement( child, groupProps );\n\t\t\t}\n\n\t\t\t// Handle regular options when searchFn is not provided\n\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\tconst textContent = getTextContent(\n\t\t\t\t\tchild.props?.children\n\t\t\t\t)?.toLowerCase();\n\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\n\t\t\t\tconst textMatch = textContent?.includes( searchTerm );\n\n\t\t\t\tif ( ! textMatch ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn cloneElement( child, {\n\t\t\t\t...child.props,\n\t\t\t\tindex: childIndex++,\n\t\t\t} );\n\t\t};\n\n\t\treturn Children.map( children, processChild );\n\t}, [ searchKeyword, value, selected, children, searchFn ] );\n\tconst childrenCount = Children.count( renderChildren );\n\n\t// Update the content list reference.\n\tuseEffect( () => {\n\t\tlistContentRef.current = [];\n\t\t// Get all children as an array.\n\t\tlet allChildren = Children.toArray( children );\n\t\t// If it's an option group and has children.\n\t\tif (\n\t\t\tallChildren &&\n\t\t\tisValidElement( allChildren[ 0 ] ) &&\n\t\t\tallChildren[ 0 ].type === SelectOptionGroup\n\t\t) {\n\t\t\tallChildren = Children.toArray( allChildren )\n\t\t\t\t.map( ( child ) =>\n\t\t\t\t\tisValidElement( child ) ? child.props.children : null\n\t\t\t\t)\n\t\t\t\t.filter( Boolean );\n\t\t}\n\t\t// Update the list content reference.\n\t\tChildren.forEach( allChildren, ( child ) => {\n\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst textContent = getTextContent(\n\t\t\t\tchild.props?.children\n\t\t\t)?.toLowerCase();\n\t\t\t// Handle regular options when searchFn is not provided\n\t\t\tif ( searchKeyword && ! searchFn ) {\n\t\t\t\tconst searchTerm = searchKeyword.toLowerCase();\n\t\t\t\tconst textMatch = textContent?.includes( searchTerm );\n\n\t\t\t\tif ( ! textMatch ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlistContentRef.current.push( textContent );\n\t\t} );\n\t}, [ searchKeyword, searchFn ] );\n\n\tconst [ searching, setSearching ] = useState( false );\n\n\t// Create a function to handle the search function.\n\tconst handleSearchFn = useCallback( async () => {\n\t\tif ( ! searchFn || typeof searchFn !== 'function' || searching ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSearching( true );\n\t\ttry {\n\t\t\tawait searchFn( searchKeyword );\n\t\t} catch ( error ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( error );\n\t\t} finally {\n\t\t\tsetSearching( false );\n\t\t}\n\t}, [ searchKeyword ] );\n\n\t// Debounce the search function.\n\tconst initiateSearch = useDebouncedCallback( handleSearchFn, debounceDelay! );\n\n\t// Initiate search when searchFn is a function.\n\tuseEffect( () => {\n\t\tif ( typeof searchFn !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tinitiateSearch();\n\t}, [ initiateSearch ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ /* Dropdown */ }\n\t\t\t{ isOpen && (\n\t\t\t\t<>\n\t\t\t\t\t<FloatingFocusManager context={ context } modal={ false }>\n\t\t\t\t\t\t{ /* Dropdown Wrapper */ }\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={ refs.setFloating }\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'box-border [&_*]:box-border w-full bg-white outline-none shadow-lg outline outline-1 outline-border-subtle',\n\t\t\t\t\t\t\t\tcombobox &&\n\t\t\t\t\t\t\t\t\t'grid grid-cols-1 grid-rows-[auto_1fr] divide-y divide-x-0 divide-solid divide-border-subtle',\n\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t.dropdown,\n\t\t\t\t\t\t\t\t! combobox && 'h-auto',\n\t\t\t\t\t\t\t\t! combobox\n\t\t\t\t\t\t\t\t\t? 'overflow-y-auto overflow-x-hidden'\n\t\t\t\t\t\t\t\t\t: 'overflow-hidden',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t...floatingStyles,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t{ ...getFloatingProps() }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ /* Searchbox */ }\n\t\t\t\t\t\t\t{ combobox && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t\t\t.searchbarWrapper\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ searching ? (\n\t\t\t\t\t\t\t\t\t\t<Loader\n\t\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t\t].searchbarIcon\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Search\n\t\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t\t'text-icon-secondary shrink-0',\n\t\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t\t].searchbarIcon\n\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t'px-1 w-full placeholder:text-field-placeholder border-0 focus:outline-none focus:shadow-none',\n\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[\n\t\t\t\t\t\t\t\t\t\t\t\tsizeValue as SelectSizes\n\t\t\t\t\t\t\t\t\t\t\t].searchbar\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\t\tname=\"keyword\"\n\t\t\t\t\t\t\t\t\t\tplaceholder={ searchPlaceholder }\n\t\t\t\t\t\t\t\t\t\tonChange={ ( event ) =>\n\t\t\t\t\t\t\t\t\t\t\tsetSearchKeyword( event.target.value )\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvalue={ searchKeyword }\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ /* Dropdown Items Wrapper */ }\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'overflow-y-auto overflow-x-hidden',\n\t\t\t\t\t\t\t\t\t! combobox && 'w-full h-full',\n\t\t\t\t\t\t\t\t\tsizeClassNames[ sizeValue as SelectSizes ]\n\t\t\t\t\t\t\t\t\t\t.dropdownItemsWrapper\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ /* Dropdown Items */ }\n\t\t\t\t\t\t\t\t{ !! childrenCount && renderChildren }\n\n\t\t\t\t\t\t\t\t{ /* No items found */ }\n\t\t\t\t\t\t\t\t{ ! childrenCount && (\n\t\t\t\t\t\t\t\t\t<div className=\"p-2 text-center text-base font-medium text-field-placeholder\">\n\t\t\t\t\t\t\t\t\t\tNo items found\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FloatingFocusManager>\n\t\t\t\t</>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport function SelectPortal( { children, root, id }: SelectPortalProps ) {\n\treturn (\n\t\t<FloatingPortal id={ id } root={ root }>\n\t\t\t{ children }\n\t\t</FloatingPortal>\n\t);\n}\n\nexport function SelectItem( {\n\tvalue,\n\tselected,\n\tchildren,\n\tclassName,\n\t...props\n}: SelectOptionProps ) {\n\tconst {\n\t\tsizeValue,\n\t\tgetItemProps,\n\t\tonKeyDownItem,\n\t\tonClickItem,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tupdateListRef,\n\t\tgetValues,\n\t\tby,\n\t\tmultiple,\n\t} = useSelectContext();\n\tconst { index: indx } = props;\n\tconst initialIndxRef = useRef( indx );\n\n\tconst selectItemClassNames = {\n\t\tsm: 'py-1.5 px-2 text-xs font-normal',\n\t\tmd: 'p-2 text-sm font-normal',\n\t\tlg: 'p-2 text-base font-normal',\n\t};\n\tconst selectedIconClassName = {\n\t\tsm: 'size-4',\n\t\tmd: 'size-4',\n\t\tlg: 'size-5',\n\t};\n\n\tconst multipleChecked = useMemo( () => {\n\t\tif ( ! multiple ) {\n\t\t\treturn false;\n\t\t}\n\t\tconst currentValue = getValues();\n\t\tif ( ! currentValue ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ( currentValue as SelectOptionValue[] ).some( ( val ) => {\n\t\t\tif ( val !== null && value !== null && typeof val === 'object' ) {\n\t\t\t\treturn (\n\t\t\t\t\t( val as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( value as Record<string, unknown> )[ by ]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn val === value;\n\t\t} );\n\t}, [ value, getValues ] );\n\n\tconst isChecked = useMemo( () => {\n\t\tif ( typeof selected === 'boolean' ) {\n\t\t\treturn selected;\n\t\t}\n\n\t\tif ( multiple ) {\n\t\t\treturn multipleChecked;\n\t\t}\n\n\t\treturn indx === selectedIndex;\n\t}, [ multipleChecked, selectedIndex, selected ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'w-full flex items-center justify-between text-text-primary hover:bg-button-tertiary-hover rounded-md transition-all duration-150 cursor-pointer focus:outline-none focus-within:outline-none outline-none',\n\t\t\t\tselectItemClassNames[ sizeValue as SelectSizes ],\n\t\t\t\tindx === activeIndex && 'bg-button-tertiary-hover',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\tref={ ( node ) => {\n\t\t\t\tupdateListRef( indx as number, node as HTMLElement );\n\t\t\t} }\n\t\t\trole=\"option\"\n\t\t\ttabIndex={ indx === activeIndex ? 0 : -1 }\n\t\t\taria-selected={ isChecked && indx === activeIndex }\n\t\t\t{ ...getItemProps( {\n\t\t\t\t// Handle pointer select.\n\t\t\t\tonClick() {\n\t\t\t\t\tonClickItem( initialIndxRef.current as number, value );\n\t\t\t\t},\n\t\t\t\t// Handle keyboard select.\n\t\t\t\tonKeyDown( event: React.KeyboardEvent ) {\n\t\t\t\t\tonKeyDownItem(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tinitialIndxRef.current as number,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t} ) }\n\t\t>\n\t\t\t<span className=\"w-full truncate\">{ children }</span>\n\t\t\t{ isChecked && (\n\t\t\t\t<CheckIcon\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'text-icon-on-color-disabled',\n\t\t\t\t\t\tselectedIconClassName[ sizeValue as SelectSizes ]\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</div>\n\t);\n}\n\nconst SelectComponent = ( {\n\tid,\n\tsize: sizeValue = 'md', // sm, md, lg\n\tvalue, // Value of the select (for controlled component).\n\tdefaultValue, // Default value of the select (for uncontrolled component).\n\tonChange, // Callback function to handle the change event.\n\tby = 'id', // Used to identify the select component. Default is 'id'.\n\tchildren,\n\tmultiple = false, // If true, it will allow multiple selection.\n\tcombobox = false, // If true, it will show a search box.\n\tdisabled = false, // If true, it will disable the select component.\n\tsearchPlaceholder = 'Search...', // Placeholder text for search box.\n\tsearchFn, // Function to handle the search.\n\tdebounceDelay = 500, // Debounce delay for the search.\n}: SelectProps ) => {\n\tconst selectId = useMemo( () => id || `select-${ nanoid() }`, [ id ] );\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst [ selected, setSelected ] = useState<\n\t\tSelectOptionValue | SelectOptionValue[]\n\t>( defaultValue! );\n\tconst [ searchKeyword, setSearchKeyword ] = useState( '' );\n\n\tconst getValues = useCallback<SelectGetValues>( () => {\n\t\tif ( isControlled ) {\n\t\t\treturn value as string | number | Record<string, unknown>;\n\t\t}\n\t\treturn selected as string | number | Record<string, unknown>;\n\t}, [ isControlled, value, selected ] );\n\n\t// Dropdown position related code (Start)\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst [ activeIndex, setActiveIndex ] = useState<number | null>( null );\n\tconst [ selectedIndex, setSelectedIndex ] = useState<number | null>( null );\n\n\tconst dropdownMaxHeightBySize = {\n\t\tsm: combobox ? 256 : 172,\n\t\tmd: combobox ? 256 : 216,\n\t\tlg: combobox ? 256 : 216,\n\t};\n\n\tconst { refs, floatingStyles, context } = useFloating( {\n\t\tplacement: 'bottom-start',\n\t\topen: isOpen,\n\t\tonOpenChange: setIsOpen,\n\t\twhileElementsMounted: autoUpdate,\n\t\tmiddleware: [\n\t\t\toffset( 5 ),\n\t\t\tflip( { padding: 10 } ),\n\t\t\tsize( {\n\t\t\t\tapply( { rects, elements, availableHeight } ) {\n\t\t\t\t\tObject.assign( elements.floating.style, {\n\t\t\t\t\t\tmaxHeight: `min(${ availableHeight }px, ${ dropdownMaxHeightBySize[ sizeValue as SelectSizes ] }px)`,\n\t\t\t\t\t\tmaxWidth: `${ rects.reference.width }px`,\n\t\t\t\t\t} );\n\t\t\t\t},\n\t\t\t\tpadding: 10,\n\t\t\t} ),\n\t\t],\n\t} );\n\n\tconst listRef = useRef<Array<HTMLElement | null>>( [] );\n\tconst listContentRef = useRef( [] );\n\tconst isTypingRef = useRef( false );\n\n\tconst click = useClick( context, { event: 'mousedown' } );\n\tconst dismiss = useDismiss( context );\n\tconst role = useRole( context, { role: 'listbox' } );\n\tconst listNav = useListNavigation( context, {\n\t\tlistRef,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tonNavigate: setActiveIndex,\n\t\t// This is a large list, allow looping.\n\t\tloop: true,\n\t} );\n\tconst typeahead = useTypeahead( context, {\n\t\tlistRef: listContentRef,\n\t\tactiveIndex,\n\t\tselectedIndex,\n\t\tonMatch: isOpen ? setActiveIndex : setSelectedIndex,\n\t\tonTypingChange( isTyping ) {\n\t\t\tisTypingRef.current = isTyping;\n\t\t},\n\t} );\n\n\tconst { getReferenceProps, getFloatingProps, getItemProps } =\n\t\tuseInteractions( [\n\t\t\tdismiss,\n\t\t\trole,\n\t\t\tlistNav,\n\t\t\tclick,\n\t\t\t...( ! combobox ? [ typeahead ] : [] ),\n\t\t] );\n\n\tconst handleMultiSelect: OnClick = ( index, newValue ) => {\n\t\tconst selectedValues = [\n\t\t\t...( ( getValues() as SelectOptionValue[] ) ?? [] ),\n\t\t];\n\t\tconst valueIndex = selectedValues.findIndex( ( selectedValue ) => {\n\t\t\tif (\n\t\t\t\tselectedValue !== null &&\n\t\t\t\tnewValue !== null &&\n\t\t\t\ttypeof selectedValue === 'object'\n\t\t\t) {\n\t\t\t\treturn (\n\t\t\t\t\t( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( newValue as Record<string, unknown> )[ by ]\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn selectedValue === newValue;\n\t\t} );\n\n\t\tif ( valueIndex !== -1 ) {\n\t\t\treturn;\n\t\t}\n\t\tselectedValues.push( newValue );\n\n\t\tif ( ! isControlled ) {\n\t\t\tsetSelected( selectedValues );\n\t\t}\n\t\tsetSelectedIndex( index );\n\t\t( refs.reference.current as HTMLElement ).focus();\n\t\tsetIsOpen( false );\n\t\tsetSearchKeyword( '' );\n\t\tif ( typeof onChange === 'function' ) {\n\t\t\tonChange( selectedValues );\n\t\t}\n\t};\n\n\tconst handleSelect: OnClick = ( index, newValue ) => {\n\t\tif ( multiple ) {\n\t\t\treturn handleMultiSelect( index, newValue );\n\t\t}\n\t\tsetSelectedIndex( index );\n\t\tif ( ! isControlled ) {\n\t\t\tsetSelected( newValue );\n\t\t}\n\t\t( refs.reference.current as HTMLElement ).focus();\n\t\tsetIsOpen( false );\n\t\tsetSearchKeyword( '' );\n\t\tif ( typeof onChange === 'function' ) {\n\t\t\tonChange( newValue );\n\t\t}\n\t};\n\t// Dropdown position related code (End)\n\n\tconst updateListRef = useCallback( ( index: number, node: HTMLElement ) => {\n\t\tlistRef.current[ index ] = node;\n\t}, [] );\n\n\tconst onClickItem: OnClick = ( index, newValue ) => {\n\t\thandleSelect( index, newValue );\n\t};\n\n\tconst onKeyDownItem: OnKeyDown = ( event, index, newValue ) => {\n\t\tif ( event.key === 'Enter' ) {\n\t\t\tevent.preventDefault();\n\t\t\thandleSelect( index, newValue );\n\t\t}\n\n\t\tif ( event.key === ' ' && ! isTypingRef.current ) {\n\t\t\tevent.preventDefault();\n\t\t\thandleSelect( index, newValue );\n\t\t}\n\t};\n\n\treturn (\n\t\t<SelectContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tselectedIndex,\n\t\t\t\tsetSelectedIndex,\n\t\t\t\tactiveIndex,\n\t\t\t\tsetActiveIndex,\n\t\t\t\tselected,\n\t\t\t\tsetSelected,\n\t\t\t\thandleSelect,\n\t\t\t\tcombobox,\n\t\t\t\tsizeValue,\n\t\t\t\tmultiple,\n\t\t\t\tonChange,\n\t\t\t\tisTypingRef,\n\t\t\t\tgetItemProps,\n\t\t\t\tonClickItem,\n\t\t\t\tonKeyDownItem,\n\t\t\t\tgetValues,\n\t\t\t\tselectId,\n\t\t\t\tgetReferenceProps,\n\t\t\t\tisOpen,\n\t\t\t\tvalue,\n\t\t\t\tupdateListRef,\n\t\t\t\trefs,\n\t\t\t\tlistContentRef,\n\t\t\t\tby,\n\t\t\t\tgetFloatingProps,\n\t\t\t\tfloatingStyles,\n\t\t\t\tcontext,\n\t\t\t\tsearchKeyword,\n\t\t\t\tsetSearchKeyword,\n\t\t\t\tdisabled,\n\t\t\t\tisControlled,\n\t\t\t\tsearchPlaceholder,\n\t\t\t\tsearchFn,\n\t\t\t\tdebounceDelay,\n\t\t\t} }\n\t\t>\n\t\t\t{ children }\n\t\t</SelectContext.Provider>\n\t);\n};\n\nSelectComponent.displayName = 'Select';\n\nconst Select = Object.assign( SelectComponent, {\n\tPortal: SelectPortal,\n\tButton: SelectButton,\n\tOptions: SelectOptions,\n\tOption: SelectItem,\n\tOptionGroup: SelectOptionGroup,\n} );\n\nSelectPortal.displayName = 'Select.Portal';\nSelectButton.displayName = 'Select.Button';\nSelectOptions.displayName = 'Select.Options';\nSelectItem.displayName = 'Select.Option';\nSelectOptionGroup.displayName = 'Select.OptionGroup';\n\nexport default Select;\n"],"names":["SelectContext","createContext","useSelectContext","useContext","SelectButton","children","icon","placeholder","optionIcon","render","label","className","props","sizeValue","getReferenceProps","getValues","selectId","refs","isOpen","multiple","combobox","setSelected","onChange","isControlled","disabled","by","badgeSize","getIcon","useCallback","iconClassNames","disabledClassNames","ChevronsUpDown","jsx","ChevronDown","renderSelected","selectedValue","valueItem","index","Badge","handleOnCloseItem","renderValue","childProps","isValidElement","cn","sizeClassNames","value","event","selectedValues","selectedIndex","val","jsxs","SelectOptionGroup","totalGroups","groupClassNames","Fragment","Children","optionGroupDividerClassNames","optionGroupDividerSizeClassNames","SelectOptions","context","floatingStyles","getFloatingProps","setSearchKeyword","setActiveIndex","setSelectedIndex","selected","searchKeyword","listContentRef","searchPlaceholder","activeIndex","searchFn","debounceDelay","initialSelectedValueIndex","useMemo","currentValue","indexValue","allChildren","group","child","childValue","useLayoutEffect","renderChildren","visibleGroups","groupChild","textContent","getTextContent","searchTerm","childIndex","groupIndex","processChild","groupChildren","c","groupProps","cloneElement","childrenCount","useEffect","searching","setSearching","useState","handleSearchFn","error","initiateSearch","useDebouncedCallback","FloatingFocusManager","Loader","Search","SelectPortal","root","id","FloatingPortal","SelectItem","getItemProps","onKeyDownItem","onClickItem","updateListRef","indx","initialIndxRef","useRef","selectItemClassNames","selectedIconClassName","multipleChecked","isChecked","node","CheckIcon","SelectComponent","defaultValue","nanoid","setIsOpen","dropdownMaxHeightBySize","useFloating","autoUpdate","offset","flip","size","rects","elements","availableHeight","listRef","isTypingRef","click","useClick","dismiss","useDismiss","role","useRole","listNav","useListNavigation","typeahead","useTypeahead","isTyping","useInteractions","handleMultiSelect","newValue","handleSelect","Select"],"mappings":"wdA0DMA,GAAgBC,EAAA,cACrB,CAAA,CACD,EACMC,EAAmB,IAAMC,EAAA,WAAYH,EAAc,EAElD,SAASI,EAAc,CAC7B,SAAAC,EACA,KAAAC,EAAO,KACP,YAAAC,EAAc,mBACd,WAAAC,EAAa,KACb,OAAAC,EACA,MAAAC,EACA,UAAAC,EACA,GAAGC,CACJ,EAAuB,CAChB,KAAA,CACL,UAAAC,EACA,kBAAAC,EACA,UAAAC,EACA,SAAAC,EACA,KAAAC,EACA,OAAAC,EACA,SAAAC,EACA,SAAAC,EACA,YAAAC,EACA,SAAAC,EACA,aAAAC,EACA,SAAAC,EACA,GAAAC,GACGvB,EAAiB,EAEfwB,EAAY,CACjB,GAAI,KACJ,GAAI,KACJ,GAAI,MACAb,CAAyB,EAGxBc,EAAUC,EAAAA,YAAa,IAAM,CAClC,GAAKtB,EACG,OAAAA,EAGF,MAAAuB,EACL,0BAA4BC,EAAAA,mBAAmB,KAEzC,OAAAV,QACLW,EAAe,eAAA,CAAA,UAAYF,EAAiB,EAE7CG,EAAA,IAACC,EAAY,YAAA,CAAA,UAAYJ,CAAiB,CAAA,CAAA,EAEzC,CAAEvB,CAAK,CAAE,EAEN4B,EAAiBN,EAAAA,YAAa,IAAM,CACzC,MAAMO,EAAgBpB,EAAU,EAEhC,GAAK,CAAEoB,EACC,OAAA,KAGR,GAAKhB,EACJ,OAASgB,EAAuC,IAC/C,CAAEC,EAA8BC,IAC/BL,EAAA,IAACM,GAAA,QAAA,CACA,UAAU,iBACV,KAAO9B,EACP,KAAK,UAEL,KAAOkB,EACP,YAAca,EAAmBH,CAAU,EAC3C,MACC,OAAO3B,GAAW,WACfA,EAAQ2B,CAA+B,EACvCA,EAAU,SAAS,EAEvB,SAAW,GACX,SAAAZ,CAAA,EATMa,CAAA,CAYT,EAGD,IAAIG,EACH,OAAOL,GAAkB,SAAWA,EAAgB,GAMrD,GAJK,OAAO1B,GAAW,aACtB+B,EAAc/B,EAAQ0B,CAAmC,GAGrD,OAAO9B,GAAa,YAAc,OAAOI,GAAW,WAAa,CACrE,MAAMgC,EAAa,CAClB,MAAON,EACP,GAAKhB,EACF,CACD,QAASoB,EACPJ,CAAA,CACF,EAEC,CAAA,CACJ,EACAK,EAAcnC,EAAUoC,CAAW,CAAA,CAIjC,OAAAC,EAAAA,eAAgBrC,CAAS,GAAK,OAAOA,GAAa,WACpD,OAAOI,GAAW,aAEJ+B,EAAAnC,GAId2B,EAAA,IAAC,OAAA,CACA,UAAYW,EAAA,GACX,WACAC,EAAA,eAAgB/B,CAAyB,EAAE,gBAC3CiB,qBAAmB,IACpB,EAEE,SAAAU,CAAA,CACH,CAAA,EAEC,CAAEzB,EAAWS,CAAS,CAAE,EAErBe,EACHM,GACCC,GAA2C,CAC5CA,GAAO,eAAe,EACtBA,GAAO,gBAAgB,EAEvB,MAAMC,EAAiB,CACtB,GAAOhC,EAAU,GAA8B,CAAA,CAChD,EACMiC,EAAgBD,EAAe,UAAaE,GAC5CA,IAAQ,MAAQJ,IAAU,MAAQ,OAAOI,GAAQ,SAElDA,EAAkCxB,CAAG,IACtCoB,EAAoCpB,CAAG,EAGnCwB,IAAQJ,CACd,EAEGG,IAAkB,KAIRD,EAAA,OAAQC,EAAe,CAAE,EAEjCzB,GACNF,EAAa0B,CAAe,EAExB,OAAOzB,GAAa,YACxBA,EAAUyB,CAAe,EAE3B,EAGD,OAAAG,EAAA,KAAC,MAAI,CAAA,UAAU,uEACZ,SAAA,CAAA,CAAC,CAAExC,GACJsB,EAAA,IAAC,QAAA,CACA,UAAYW,EAAA,GACXC,EAAA,eAAgB/B,CAAyB,GAAG,MAC5C,kBACD,EACA,QAAUG,EAER,SAAAN,CAAA,CACH,EAEDwC,EAAA,KAAC,SAAA,CACA,GAAKlC,EACL,IAAMC,EAAK,aACX,UAAY0B,EAAA,GACX,mIACA,oEACA,CAAEzB,GACD,0IACD0B,EAAA,eAAgB/B,CAAyB,EAAE,aAC3CM,GACCyB,EAAAA,eAAgB/B,CAAyB,EAAE,YAC5CiB,EAAAA,mBAAmB,aACnBnB,CACD,EACA,SAAW,EACX,SAAAa,EACE,GAAGZ,EACH,GAAGE,EAAkB,EAGvB,SAAA,CAAAoC,EAAA,KAAC,MAAA,CACA,UAAYP,EAAA,GACX,iEACA5B,KAAe,gBAChB,EAGE,SAAA,CAAemB,EAAA,GAGbf,EACD,CAAIJ,EAAA,GAAsC,OAC1C,CAAEA,MACJiB,EAAA,IAAC,MAAA,CACA,UAAYW,EAAA,GACX,4CACAC,EAAA,eAAgB/B,CAAyB,EACvC,gBACFiB,qBAAmB,IACpB,EAEE,SAAAvB,CAAA,CAAA,CACH,CAAA,CAEF,EAEAyB,EAAA,IAAC,MAAA,CACA,UAAYW,EAAA,GACX,qCACAC,EAAA,eAAgB/B,CAAyB,EAAE,IAC5C,EAEE,SAAQc,EAAA,CAAA,CAAA,CACX,CAAA,CAAA,CACD,EACD,CAEF,CAEO,SAASwB,EAAmB,CAClC,MAAAzC,EACA,SAAAL,EACA,UAAAM,EACA,GAAGC,CACJ,EAA4B,CACrB,KAAA,CAAE,MAAAyB,EAAO,YAAAe,CAAA,EAAgBxC,EAIzB,CAAE,UAAAC,CAAU,EAAIX,EAAiB,EAEjCmD,EAAkB,CACvB,GAAI,UACJ,GAAI,UACJ,GAAI,SACL,EAGC,OAAAH,EAAA,KAACI,WAAA,CACA,SAAA,CAAAJ,OAAC,OAAI,UAAU,gBAAgB,KAAK,QAAQ,aAAaxC,EACxD,SAAA,CAAAsB,EAAA,IAAC,MAAA,CACA,UAAYW,EAAA,GACX,qCACAU,EAAiBxC,CAAyB,EAC1CF,CACD,EACA,GAAK,SAAUD,GAAO,cAAc,QAAS,OAAQ,GAAI,CAAE,GAEzD,SAAAA,CAAA,CACH,EACAsB,EAAA,IAAC,MAAA,CACA,UAAU,gBACV,KAAK,eACL,kBAAkB,SAAUtB,GAAO,cAAc,QAAS,OAAQ,GAAI,CAAE,GAEtE,SAAAL,CAAA,CAAA,CACH,EACD,EACEgC,EAAQe,GACT,CAAC,EAAI/C,GAAYkD,EAAAA,SAAS,MAAOlD,CAAS,EAAI,IAC9C2B,EAAA,IAAC,KAAA,CACA,UAAYW,EAAA,GACXa,EAAA,6BACAC,EAAAA,iCACE5C,CACF,CAAA,CACD,CAAA,CACD,EAEF,CAEF,CAEO,SAAS6C,GAAe,CAC9B,SAAArD,EACA,UAAAM,CACD,EAAwB,CACjB,KAAA,CACL,OAAAO,EACA,QAAAyC,EACA,KAAA1C,EACA,SAAAG,EACA,eAAAwC,EACA,iBAAAC,EACA,UAAAhD,EACA,iBAAAiD,EACA,eAAAC,EACA,iBAAAC,EACA,MAAAnB,EACA,SAAAoB,EACA,UAAAlD,EACA,cAAAmD,EACA,eAAAC,EACA,GAAA1C,EACA,kBAAA2C,EACA,YAAAC,EACA,SAAAC,EACA,cAAAC,GACGrE,EAAiB,EAEfsE,EAA4BC,EAAAA,QAAS,IAAM,CAChD,MAAMC,EAAe3D,EAAU,EAC/B,IAAI4D,EAAa,GAEjB,GAAKD,EAAe,CAEf,IAAAE,EAAcrB,EAAAA,SAAS,QAASlD,CAAS,EAI5CuE,EAAY,OAAS,GACrBlC,EAAA,eAAgBkC,EAAa,CAAE,CAAE,GACjCA,EAAa,CAAE,EAAE,OAASzB,IAEZyB,EAAArB,EAAA,SAAS,QAASlD,CAAS,EACvC,IAAOwE,GACPnC,iBAAgBmC,CAAM,EACnBtB,EAAAA,SAAS,QAASsB,EAAM,MAAM,QAAS,EACvC,CAAA,GAEH,KAAK,GAGKF,EAAAC,EAAY,UAAaE,GAA4B,CAC5D,GAAA,CAAEpC,EAAAA,eAAgBoC,CAAM,EACrB,MAAA,GAGF,MAAAC,EAAaD,EAAM,MAAM,MAE/B,OACC,OAAOC,GAAe,UACtB,OAAOL,GAAiB,SAGvBK,EAAYtD,CAAG,IACbiD,EAA2CjD,CAAG,EAK3CsD,IAAeL,CAAA,CACrB,CAAA,CAGI,OAAAC,GACL,CAAE9B,EAAOoB,EAAU5D,EAAUoB,CAAG,CAAE,EAGrCuD,EAAAA,gBAAiB,IAAM,CACjB9D,IAGL6C,EAAgBS,CAA0B,EAC1CR,EAAkBQ,CAA0B,EAAA,EAC1C,CAAEA,EAA2BtD,CAAO,CAAE,EAGzC8D,EAAAA,gBAAiB,IAAM,CACf9D,IAGFE,GAAY,CAAE,GAAI,IAAK,EAAE,SAAUiD,CAAY,GAGpDN,EAAgB,EAAG,EAAA,EACjB,CAAEG,EAAehD,CAAO,CAAE,EAGvB,MAAA+D,EAAiBR,EAAAA,QAAS,IAAM,CAErC,IAAIS,EAAgB,EAChB9B,EAAc,EAGTG,EAAAA,SAAA,QAASlD,EAAYyE,GAAW,CACnCpC,EAAgB,eAAAoC,CAAM,GAAKA,EAAM,OAAS3B,GACnBI,EAAAA,SAAS,QACnCuB,EAAM,MAAM,QAAA,EACX,KAAQK,GAAgB,CACpB,GAAA,CAAEzC,EAAAA,eAAgByC,CAAW,EAC1B,MAAA,GAKH,GAAAjB,GAAiB,CAAEI,EAAW,CAClC,MAAMc,EAAcC,EAAA,eACnBF,EAAW,MAAM,WACf,YAAY,EACTG,EAAapB,EAAc,YAAY,EAEtC,OAAAkB,EAAY,SAAUE,CAAW,CAAA,CAElC,MAAA,EAAA,CACN,GAGDJ,GAEF,CACC,EAEF9B,EAAc,KAAK,IAAK,EAAG8B,EAAgB,CAAE,EAC7C,IAAIK,EAAa,EACbC,EAAa,EAGX,MAAAC,EAAiBX,GAA6C,CAC9D,GAAA,CAAEpC,EAAAA,eAAgBoC,CAAM,EACrB,OAAA,KAIH,GAAAA,EAAM,OAAS3B,EAAoB,CAEvC,MAAMuC,EAAgBnC,EAAAA,SAAS,IAC9BuB,EAAM,MAAM,SACZW,CACD,EAIA,GAAK,CAFeC,GAAe,KAAQC,GAAOA,IAAM,IAAK,EAGrD,OAAA,KAGR,MAAMC,EAAa,CAClB,GAAGd,EAAM,MACT,SAAUY,EACV,MAAOF,EACP,YAAApC,CACD,EAEA,OAAAoC,IACOK,EAAA,aAAcf,EAAOc,CAAW,CAAA,CAInC,GAAA1B,GAAiB,CAAEI,EAAW,CAClC,MAAMc,EAAcC,EAAA,eACnBP,EAAM,OAAO,WACX,YAAY,EACTQ,EAAapB,EAAc,YAAY,EAI7C,GAAK,CAFakB,GAAa,SAAUE,CAAW,EAG5C,OAAA,IACR,CAGD,OAAOO,EAAAA,aAAcf,EAAO,CAC3B,GAAGA,EAAM,MACT,MAAOS,GAAA,CACN,CACH,EAEO,OAAAhC,WAAS,IAAKlD,EAAUoF,CAAa,CAAA,EAC1C,CAAEvB,EAAerB,EAAOoB,EAAU5D,EAAUiE,CAAS,CAAE,EACpDwB,EAAgBvC,EAAAA,SAAS,MAAO0B,CAAe,EAGrDc,EAAAA,UAAW,IAAM,CAChB5B,EAAe,QAAU,CAAC,EAEtB,IAAAS,EAAcrB,EAAAA,SAAS,QAASlD,CAAS,EAG5CuE,GACAlC,iBAAgBkC,EAAa,CAAE,CAAE,GACjCA,EAAa,CAAE,EAAE,OAASzB,IAEZyB,EAAArB,EAAA,SAAS,QAASqB,CAAY,EAC1C,IAAOE,GACPpC,EAAAA,eAAgBoC,CAAM,EAAIA,EAAM,MAAM,SAAW,IAAA,EAEjD,OAAQ,OAAQ,GAGVvB,EAAAA,SAAA,QAASqB,EAAeE,GAAW,CACtC,GAAA,CAAEpC,EAAAA,eAAgBoC,CAAM,EAC5B,OAGD,MAAMM,EAAcC,EAAA,eACnBP,EAAM,OAAO,WACX,YAAY,EAEV,GAAAZ,GAAiB,CAAEI,EAAW,CAC5B,MAAAgB,EAAapB,EAAc,YAAY,EAG7C,GAAK,CAFakB,GAAa,SAAUE,CAAW,EAGnD,MACD,CAGcnB,EAAA,QAAQ,KAAMiB,CAAY,CAAA,CACxC,CAAA,EACA,CAAElB,EAAeI,CAAS,CAAE,EAE/B,KAAM,CAAE0B,EAAWC,CAAa,EAAIC,EAAAA,SAAU,EAAM,EAG9CC,EAAiBvE,EAAAA,YAAa,SAAY,CAC/C,GAAK,GAAE0C,GAAY,OAAOA,GAAa,YAAc0B,GAIrD,CAAAC,EAAc,EAAK,EACf,GAAA,CACH,MAAM3B,EAAUJ,CAAc,QACrBkC,EAAQ,CAEjB,QAAQ,MAAOA,CAAM,CAAA,QACpB,CACDH,EAAc,EAAM,CAAA,EACrB,EACE,CAAE/B,CAAc,CAAE,EAGfmC,EAAiBC,GAAAA,qBAAsBH,EAAgB5B,CAAe,EAG5EwB,OAAAA,EAAAA,UAAW,IAAM,CACX,OAAOzB,GAAa,YAGV+B,EAAA,CAAA,EACb,CAAEA,CAAe,CAAE,oBAKlB,SACDnF,GAAAc,EAAA,IAAAsB,WAAA,CACC,eAACiD,EAAqB,qBAAA,CAAA,QAAA5C,EAAoB,MAAQ,GAEjD,SAAAT,EAAA,KAAC,MAAA,CACA,IAAMjC,EAAK,YACX,UAAY0B,EAAA,GACX,6GACAvB,GACC,8FACDwB,EAAA,eAAgB/B,CAAyB,EACvC,SACF,CAAEO,GAAY,SACZA,EAEC,kBADA,oCAEHT,CACD,EACA,MAAQ,CACP,GAAGiD,CACJ,EACE,GAAGC,EAAiB,EAGpB,SAAA,CACDzC,GAAA8B,EAAA,KAAC,MAAA,CACA,UAAYP,EAAA,GACXC,EAAA,eAAgB/B,CAAyB,EACvC,gBACH,EAEE,SAAA,CACDmF,EAAAhE,EAAA,IAACwE,GAAA,OAAA,CACA,UACC5D,EAAAA,eACC/B,CACD,EAAE,aAAA,CAAA,EAIJmB,EAAA,IAACyE,EAAA,OAAA,CACA,UAAY9D,EAAA,GACX,+BACAC,EAAA,eACC/B,CACD,EAAE,aAAA,CACH,CACD,EAEDmB,EAAA,IAAC,QAAA,CACA,UAAYW,EAAA,GACX,+FACAC,EAAA,eACC/B,CACD,EAAE,SACH,EACA,KAAK,SACL,KAAK,UACL,YAAcuD,EACd,SAAatB,GACZgB,EAAkBhB,EAAM,OAAO,KAAM,EAEtC,MAAQoB,EACR,aAAa,KAAA,CAAA,CACd,CAAA,CACD,EAGDhB,EAAA,KAAC,MAAA,CACA,UAAYP,EAAA,GACX,oCACA,CAAEvB,GAAY,gBACdwB,EAAA,eAAgB/B,CAAyB,EACvC,oBACH,EAGE,SAAA,CAAA,CAAC,CAAEiF,GAAiBb,EAGpB,CAAEa,GACH9D,EAAAA,IAAC,MAAI,CAAA,UAAU,+DAA+D,SAE9E,gBAAA,CAAA,CAAA,CAAA,CAAA,CAEF,CAAA,CAAA,CAEF,CAAA,CACD,CAAA,EAEF,CAEF,CAEO,SAAS0E,GAAc,CAAE,SAAArG,EAAU,KAAAsG,EAAM,GAAAC,GAA0B,CACzE,OACE5E,EAAAA,IAAA6E,EAAAA,eAAA,CAAe,GAAAD,EAAU,KAAAD,EACvB,SAAAtG,CACH,CAAA,CAEF,CAEO,SAASyG,GAAY,CAC3B,MAAAjE,EACA,SAAAoB,EACA,SAAA5D,EACA,UAAAM,EACA,GAAGC,CACJ,EAAuB,CAChB,KAAA,CACL,UAAAC,EACA,aAAAkG,EACA,cAAAC,EACA,YAAAC,EACA,YAAA5C,EACA,cAAArB,EACA,cAAAkE,EACA,UAAAnG,EACA,GAAAU,EACA,SAAAN,GACGjB,EAAiB,EACf,CAAE,MAAOiH,CAAA,EAASvG,EAClBwG,EAAiBC,SAAQF,CAAK,EAE9BG,EAAuB,CAC5B,GAAI,kCACJ,GAAI,0BACJ,GAAI,2BACL,EACMC,EAAwB,CAC7B,GAAI,SACJ,GAAI,SACJ,GAAI,QACL,EAEMC,EAAkB/C,EAAAA,QAAS,IAAM,CACtC,GAAK,CAAEtD,EACC,MAAA,GAER,MAAMuD,EAAe3D,EAAU,EAC/B,OAAO2D,EAGEA,EAAsC,KAAQzB,GACjDA,IAAQ,MAAQJ,IAAU,MAAQ,OAAOI,GAAQ,SAElDA,EAAkCxB,CAAG,IACrCoB,EAAoCpB,CAAG,EAGpCwB,IAAQJ,CACd,EAVM,EAUN,EACA,CAAEA,EAAO9B,CAAU,CAAE,EAElB0G,EAAYhD,EAAAA,QAAS,IACrB,OAAOR,GAAa,UACjBA,EAGH9C,EACGqG,EAGDL,IAASnE,EACd,CAAEwE,EAAiBxE,EAAeiB,CAAS,CAAE,EAG/C,OAAAf,EAAA,KAAC,MAAA,CACA,UAAYP,EAAA,GACX,4MACA2E,EAAsBzG,CAAyB,EAC/CsG,IAAS9C,GAAe,2BACxB1D,CACD,EACA,IAAQ+G,GAAU,CACjBR,EAAeC,EAAgBO,CAAoB,CACpD,EACA,KAAK,SACL,SAAWP,IAAS9C,EAAc,EAAI,GACtC,gBAAgBoD,GAAaN,IAAS9C,EACpC,GAAG0C,EAAc,CAElB,SAAU,CACIE,EAAAG,EAAe,QAAmBvE,CAAM,CACtD,EAEA,UAAWC,EAA6B,CACvCkE,EACClE,EACAsE,EAAe,QACfvE,CACD,CAAA,CACD,CACC,EAEF,SAAA,CAACb,EAAAA,IAAA,OAAA,CAAK,UAAU,kBAAoB,SAAA3B,CAAU,CAAA,EAC5CoH,GACDzF,EAAA,IAAC2F,EAAA,UAAA,CACA,UAAYhF,EAAA,GACX,8BACA4E,EAAuB1G,CAAyB,CAAA,CACjD,CAAA,CACD,CAAA,CAEF,CAEF,CAEA,MAAM+G,GAAkB,CAAE,CACzB,GAAAhB,EACA,KAAM/F,EAAY,KAClB,MAAAgC,EACA,aAAAgF,EACA,SAAAvG,EACA,GAAAG,EAAK,KACL,SAAApB,EACA,SAAAc,EAAW,GACX,SAAAC,EAAW,GACX,SAAAI,EAAW,GACX,kBAAA4C,EAAoB,YACpB,SAAAE,EACA,cAAAC,EAAgB,GACjB,IAAoB,CACb,MAAAvD,EAAWyD,UAAS,IAAMmC,GAAM,UAAWkB,GAAAA,QAAS,GAAI,CAAElB,CAAG,CAAE,EAC/DrF,EAAekD,EAAAA,QAAS,IAAM,OAAO5B,EAAU,IAAa,CAAEA,CAAM,CAAE,EACtE,CAAEoB,EAAU5C,CAAY,EAAI6E,EAAAA,SAE/B2B,CAAc,EACX,CAAE3D,EAAeJ,CAAiB,EAAIoC,EAAAA,SAAU,EAAG,EAEnDnF,EAAYa,EAAAA,YAA8B,IAC1CL,EACGsB,EAEDoB,EACL,CAAE1C,EAAcsB,EAAOoB,CAAS,CAAE,EAG/B,CAAE/C,EAAQ6G,CAAU,EAAI7B,EAAAA,SAAU,EAAM,EACxC,CAAE7B,EAAaN,CAAe,EAAImC,EAAAA,SAAyB,IAAK,EAChE,CAAElD,EAAegB,CAAiB,EAAIkC,EAAAA,SAAyB,IAAK,EAEpE8B,EAA0B,CAC/B,GAAI5G,EAAW,IAAM,IACrB,GAAIA,EAAW,IAAM,IACrB,GAAIA,EAAW,IAAM,GACtB,EAEM,CAAE,KAAAH,EAAM,eAAA2C,EAAgB,QAAAD,CAAA,EAAYsE,EAAAA,YAAa,CACtD,UAAW,eACX,KAAM/G,EACN,aAAc6G,EACd,qBAAsBG,EAAA,WACtB,WAAY,CACXC,EAAAA,OAAQ,CAAE,EACVC,OAAM,CAAE,QAAS,GAAK,EACtBC,OAAM,CACL,MAAO,CAAE,MAAAC,EAAO,SAAAC,EAAU,gBAAAC,GAAoB,CACtC,OAAA,OAAQD,EAAS,SAAS,MAAO,CACvC,UAAW,OAAQC,CAAgB,OAAQR,EAAyBnH,CAAyB,CAAE,MAC/F,SAAU,GAAIyH,EAAM,UAAU,KAAM,IAAA,CACnC,CACH,EACA,QAAS,EACR,CAAA,CAAA,CACH,CACC,EAEIG,EAAUpB,EAAmC,OAAA,EAAG,EAChDlD,EAAiBkD,EAAQ,OAAA,EAAG,EAC5BqB,EAAcrB,SAAQ,EAAM,EAE5BsB,EAAQC,EAAAA,SAAUjF,EAAS,CAAE,MAAO,YAAc,EAClDkF,EAAUC,aAAYnF,CAAQ,EAC9BoF,EAAOC,EAAAA,QAASrF,EAAS,CAAE,KAAM,UAAY,EAC7CsF,EAAUC,oBAAmBvF,EAAS,CAC3C,QAAA8E,EACA,YAAApE,EACA,cAAArB,EACA,WAAYe,EAEZ,KAAM,EAAA,CACL,EACIoF,EAAYC,eAAczF,EAAS,CACxC,QAASQ,EACT,YAAAE,EACA,cAAArB,EACA,QAAS9B,EAAS6C,EAAiBC,EACnC,eAAgBqF,EAAW,CAC1BX,EAAY,QAAUW,CAAA,CACvB,CACC,EAEI,CAAE,kBAAAvI,EAAmB,iBAAA+C,GAAkB,aAAAkD,EAAA,EAC5CuC,EAAAA,gBAAiB,CAChBT,EACAE,EACAE,EACAN,EACA,GAAOvH,EAA2B,CAAA,EAAhB,CAAE+H,CAAU,CAAK,CAClC,EAEGI,GAA6B,CAAElH,EAAOmH,IAAc,CACzD,MAAMzG,EAAiB,CACtB,GAAOhC,EAAU,GAA8B,CAAA,CAChD,EACmBgC,EAAe,UAAaZ,GAE7CA,IAAkB,MAClBqH,IAAa,MACb,OAAOrH,GAAkB,SAGtBA,EAA4CV,CAAG,IAC/C+H,EAAuC/H,CAAG,EAGvCU,IAAkBqH,CACxB,IAEkB,KAGpBzG,EAAe,KAAMyG,CAAS,EAEvBjI,GACNF,EAAa0B,CAAe,EAE7BiB,EAAkB3B,CAAM,EACtBpB,EAAK,UAAU,QAAyB,MAAM,EAChD8G,EAAW,EAAM,EACjBjE,EAAkB,EAAG,EAChB,OAAOxC,GAAa,YACxBA,EAAUyB,CAAe,EAE3B,EAEM0G,EAAwB,CAAEpH,EAAOmH,IAAc,CACpD,GAAKrI,EACG,OAAAoI,GAAmBlH,EAAOmH,CAAS,EAE3CxF,EAAkB3B,CAAM,EACjBd,GACNF,EAAamI,CAAS,EAErBvI,EAAK,UAAU,QAAyB,MAAM,EAChD8G,EAAW,EAAM,EACjBjE,EAAkB,EAAG,EAChB,OAAOxC,GAAa,YACxBA,EAAUkI,CAAS,CAErB,EAGMtC,GAAgBtF,EAAAA,YAAa,CAAES,EAAeqF,IAAuB,CAClEe,EAAA,QAASpG,CAAM,EAAIqF,CAC5B,EAAG,EAAG,EAEAT,GAAuB,CAAE5E,EAAOmH,IAAc,CACnDC,EAAcpH,EAAOmH,CAAS,CAC/B,EAEMxC,GAA2B,CAAElE,EAAOT,EAAOmH,IAAc,CACzD1G,EAAM,MAAQ,UAClBA,EAAM,eAAe,EACrB2G,EAAcpH,EAAOmH,CAAS,GAG1B1G,EAAM,MAAQ,KAAO,CAAE4F,EAAY,UACvC5F,EAAM,eAAe,EACrB2G,EAAcpH,EAAOmH,CAAS,EAEhC,EAGC,OAAAxH,EAAA,IAAChC,GAAc,SAAd,CACA,MAAQ,CACP,cAAAgD,EACA,iBAAAgB,EACA,YAAAK,EACA,eAAAN,EACA,SAAAE,EACA,YAAA5C,EACA,aAAAoI,EACA,SAAArI,EACA,UAAAP,EACA,SAAAM,EACA,SAAAG,EACA,YAAAoH,EACA,aAAA3B,GACA,YAAAE,GACA,cAAAD,GACA,UAAAjG,EACA,SAAAC,EACA,kBAAAF,EACA,OAAAI,EACA,MAAA2B,EACA,cAAAqE,GACA,KAAAjG,EACA,eAAAkD,EACA,GAAA1C,EACA,iBAAAoC,GACA,eAAAD,EACA,QAAAD,EACA,cAAAO,EACA,iBAAAJ,EACA,SAAAtC,EACA,aAAAD,EACA,kBAAA6C,EACA,SAAAE,EACA,cAAAC,CACD,EAEE,SAAAlE,CAAA,CACH,CAEF,EAEAuH,GAAgB,YAAc,SAExB,MAAA8B,GAAS,OAAO,OAAQ9B,GAAiB,CAC9C,OAAQlB,GACR,OAAQtG,EACR,QAASsD,GACT,OAAQoD,GACR,YAAa3D,CACd,CAAE,EAEFuD,GAAa,YAAc,gBAC3BtG,EAAa,YAAc,gBAC3BsD,GAAc,YAAc,iBAC5BoD,GAAW,YAAc,gBACzB3D,EAAkB,YAAc"}