{"version":3,"file":"datepicker-component.es.js","sources":["../../../src/components/datepicker/datepicker-component.tsx"],"sourcesContent":["import React, { useState, type ReactNode } from 'react';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport {\n\tDayPicker,\n\tuseDayPicker,\n\ttype MonthGridProps,\n\ttype CustomComponents,\n\ttype OnSelectHandler,\n} from 'react-day-picker';\nimport { format, isAfter, isBefore, isEqual, subMonths } from 'date-fns';\nimport { cn } from '@/utilities/functions';\nimport Button from '../button';\nimport { currentTimeDot, formatWeekdayName, generateYearRange } from './utils';\n\nexport type TDateRange = { from: Date | undefined; to: Date | undefined };\n\nexport interface DatePickerProps {\n\t/** The width of the date picker. */\n\twidth?: string;\n\t/** Additional classes to be added to the date picker. */\n\tclassName?: string;\n\t/** Additional classes to be added to the date picker elements. */\n\tclassNames?: {\n\t\t/** Additional classes to be added to the months element. */\n\t\tmonths?: string;\n\t\t/** Additional classes to be added to the month element. */\n\t\tmonth?: string;\n\t\t/** Additional classes to be added to the caption element. */\n\t\tcaption?: string;\n\t\t/** Additional classes to be added to the table element. */\n\t\ttable?: string;\n\t\t/** Additional classes to be added to the head row element. */\n\t\thead_row?: string;\n\t\t/** Additional classes to be added to the head cell element. */\n\t\thead_cell?: string;\n\t\t/** Additional classes to be added to the row element. */\n\t\trow?: string;\n\t\t/** Additional classes to be added to the cell element. */\n\t\tcell?: string;\n\t\t/** Additional classes to be added to the day element. */\n\t\tday?: string;\n\t};\n\t/** The selected dates. */\n\tselectedDates?: Date | Date[] | TDateRange | undefined;\n\t/** Sets the selected dates. */\n\tsetSelectedDates: ( dates: Date | Date[] | TDateRange | undefined ) => void;\n\t/** Show or hide days outside of the current month. */\n\tshowOutsideDays?: boolean;\n\t/** Defines the selection selectionType of the date picker: single, range, or multiple dates. */\n\tmode?: 'single' | 'range' | 'multiple';\n\t/** Defines the variant of the date picker: normal, dualdate, or presets. */\n\tvariant?: 'normal' | 'dualdate' | 'presets';\n\t/** Defines the alignment of the date picker: horizontal or vertical. */\n\talignment?: 'horizontal' | 'vertical';\n\t/** The number of months to display. */\n\tnumberOfMonths?: number;\n\t/** Footer content to be displayed at the bottom of the date picker. */\n\tfooter?: ReactNode;\n\t/** Additional props to be passed to the date picker. */\n\t[key: string]: unknown;\n}\n\ninterface CustomMonthCaptionProps {\n\tgoToMonth: ( date: Date ) => void;\n\tnextMonth: Date;\n\tpreviousMonth: Date;\n\tcalendarMonth: { date: Date };\n}\n\ninterface CustomDayButtonProps {\n\tday: { date: Date; displayMonth: Date };\n\tmodifiers: {\n\t\tselected: boolean;\n\t\ttoday: boolean;\n\t\tdisabled: boolean;\n\t\toutside: boolean;\n\t\trange_middle: boolean;\n\t\trange_start: boolean;\n\t\trange_end: boolean;\n\t};\n\tonSelect: ( date: Date ) => void;\n\tonMouseEnter?: ( event: React.MouseEvent<HTMLButtonElement> ) => void;\n\tonMouseLeave?: ( event: React.MouseEvent<HTMLButtonElement> ) => void;\n\tonClick?: ( event: React.MouseEvent<HTMLButtonElement> ) => void;\n\tonKeyDown?: ( event: React.KeyboardEvent<HTMLButtonElement> ) => void;\n\tonFocus?: ( event: React.FocusEvent<HTMLButtonElement> ) => void;\n\tonBlur?: ( event: React.FocusEvent<HTMLButtonElement> ) => void;\n\tchildren: ReactNode;\n}\n\nconst DatePickerComponent = ( {\n\twidth,\n\tclassName: outerClassName, // Renamed to avoid shadowing\n\tclassNames,\n\tselectedDates,\n\tsetSelectedDates,\n\tshowOutsideDays = true,\n\tmode = 'single',\n\tvariant = 'normal',\n\talignment = 'horizontal',\n\tnumberOfMonths,\n\tdisabled,\n\t...props\n}: DatePickerProps ) => {\n\t// check footer is a valid component.\n\tconst isFooter =\n\t\tReact.isValidElement( props.footer ) ||\n\t\ttypeof props.footer === 'function';\n\tconst [ showMonthSelect, setShowMonthSelect ] = useState( false );\n\tconst [ showYearSelect, setShowYearSelect ] = useState( false ); // New state for year selection\n\tconst [ selectedYear, setSelectedYear ] = useState( new Date().getFullYear() );\n\tconst [ yearRangeStart, setYearRangeStart ] = useState(\n\t\tselectedYear - ( selectedYear % 24 )\n\t);\n\n\tif ( selectedDates === undefined ) {\n\t\tif ( mode === 'multiple' ) {\n\t\t\tselectedDates = [];\n\t\t} else if ( mode === 'range' ) {\n\t\t\tselectedDates = { from: undefined, to: undefined };\n\t\t} else {\n\t\t\tselectedDates = undefined;\n\t\t}\n\t}\n\n\tfunction CustomMonthCaption( customMonthProps: CustomMonthCaptionProps ) {\n\t\tconst { goToMonth, nextMonth, previousMonth } = useDayPicker();\n\t\tconst yearFormatted = format(\n\t\t\tcustomMonthProps.calendarMonth.date,\n\t\t\t'yyyy'\n\t\t);\n\t\tconst month = format( customMonthProps.calendarMonth.date, 'MMMM' );\n\n\t\tconst startOfWeek = new Date( customMonthProps.calendarMonth.date );\n\t\tstartOfWeek.setDate( startOfWeek.getDate() - startOfWeek.getDay() );\n\n\t\tconst weekdays = Array.from( { length: 7 }, ( _, i ) => {\n\t\t\tconst date = new Date( startOfWeek );\n\t\t\tdate.setDate( startOfWeek.getDate() + i );\n\t\t\treturn formatWeekdayName( date );\n\t\t} );\n\n\t\tconst handlePrevButtonClick = () => {\n\t\t\tif ( showYearSelect ) {\n\t\t\t\tsetYearRangeStart( yearRangeStart - 24 );\n\t\t\t} else if ( showMonthSelect ) {\n\t\t\t\tconst prevYear = new Date(\n\t\t\t\t\tselectedYear - 1,\n\t\t\t\t\tcustomMonthProps.calendarMonth.date.getMonth()\n\t\t\t\t);\n\t\t\t\tsetSelectedYear( prevYear.getFullYear() );\n\t\t\t\tgoToMonth( prevYear );\n\t\t\t} else {\n\t\t\t\tgoToMonth( previousMonth! );\n\t\t\t}\n\t\t};\n\n\t\tconst handleNextButtonClick = () => {\n\t\t\tif ( showYearSelect ) {\n\t\t\t\tsetYearRangeStart( yearRangeStart + 24 );\n\t\t\t} else if ( showMonthSelect ) {\n\t\t\t\tconst nextYear = new Date(\n\t\t\t\t\tselectedYear + 1,\n\t\t\t\t\tcustomMonthProps.calendarMonth.date.getMonth()\n\t\t\t\t);\n\t\t\t\tsetSelectedYear( nextYear.getFullYear() );\n\t\t\t\tgoToMonth( nextYear );\n\t\t\t} else {\n\t\t\t\tgoToMonth( nextMonth! );\n\t\t\t}\n\t\t};\n\n\t\tconst handleYearClick = ( yearValue: number ) => {\n\t\t\tsetSelectedYear( yearValue );\n\t\t\tsetShowYearSelect( false );\n\t\t\tsetShowMonthSelect( true );\n\t\t\tgoToMonth(\n\t\t\t\tnew Date(\n\t\t\t\t\tyearValue,\n\t\t\t\t\tcustomMonthProps.calendarMonth.date.getMonth()\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\tlet displayText;\n\t\tif ( showYearSelect ) {\n\t\t\tdisplayText = `${ yearRangeStart } - ${ yearRangeStart + 23 }`;\n\t\t} else if ( showMonthSelect ) {\n\t\t\tdisplayText = yearFormatted;\n\t\t} else {\n\t\t\tdisplayText = `${ month } ${ yearFormatted }`;\n\t\t}\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tonClick={ handlePrevButtonClick }\n\t\t\t\t\t\tclassName=\"bg-background-primary border-none cursor-pointer\"\n\t\t\t\t\t\taria-label=\"Previous Button\"\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<ChevronLeft className=\"h-4 w-4 text-button-tertiary-color\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tif ( numberOfMonths! > 1 ) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( showMonthSelect ) {\n\t\t\t\t\t\t\t\tsetShowYearSelect( true );\n\t\t\t\t\t\t\t\tsetShowMonthSelect( false );\n\t\t\t\t\t\t\t} else if ( showYearSelect ) {\n\t\t\t\t\t\t\t\tsetShowYearSelect( false );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetShowMonthSelect( ! showMonthSelect );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ displayText }\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tonClick={ handleNextButtonClick }\n\t\t\t\t\t\tclassName=\"bg-background-primary border-none cursor-pointer\"\n\t\t\t\t\t\taria-label=\"Next Button\"\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\t<ChevronRight className=\"h-4 w-4 text-button-tertiary-color\" />\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{ showYearSelect && (\n\t\t\t\t\t<div className=\"grid grid-cols-4 w-full\">\n\t\t\t\t\t\t{ generateYearRange( yearRangeStart ).map( ( yearValue ) => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tkey={ yearValue }\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tonClick={ () => handleYearClick( yearValue ) }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'h-10 w-full text-center font-normal relative',\n\t\t\t\t\t\t\t\t\tyearValue === selectedYear &&\n\t\t\t\t\t\t\t\t\t\tyearValue !==\n\t\t\t\t\t\t\t\t\t\t\tnew Date().getFullYear() &&\n\t\t\t\t\t\t\t\t\t\t'bg-background-brand text-text-on-color hover:bg-background-brand hover:text-black',\n\t\t\t\t\t\t\t\t\tyearValue === new Date().getFullYear() &&\n\t\t\t\t\t\t\t\t\t\t'font-semibold'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ yearValue }\n\t\t\t\t\t\t\t\t{ yearValue === new Date().getFullYear() &&\n\t\t\t\t\t\t\t\t\tcurrentTimeDot() }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t{ showMonthSelect && ! showYearSelect && (\n\t\t\t\t\t<div className=\"grid grid-cols-4 gap-2 my-12\">\n\t\t\t\t\t\t{ Array.from( { length: 12 }, ( _, monthIndex ) => (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tkey={ monthIndex }\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tsetShowMonthSelect( false );\n\t\t\t\t\t\t\t\t\tgoToMonth(\n\t\t\t\t\t\t\t\t\t\tnew Date( selectedYear, monthIndex )\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'px-1.5 py-2 h-10 w-[4.375rem] text-center font-normal relative',\n\t\t\t\t\t\t\t\t\tmonthIndex ===\n\t\t\t\t\t\t\t\t\t\tcustomMonthProps.calendarMonth.date.getMonth() &&\n\t\t\t\t\t\t\t\t\t\tmonthIndex !== new Date().getMonth() &&\n\t\t\t\t\t\t\t\t\t\tselectedYear ===\n\t\t\t\t\t\t\t\t\t\t\tcustomMonthProps.calendarMonth.date.getFullYear() &&\n\t\t\t\t\t\t\t\t\t\tcustomMonthProps.calendarMonth.date.getFullYear() !==\n\t\t\t\t\t\t\t\t\t\t\tnew Date().getFullYear() &&\n\t\t\t\t\t\t\t\t\t\t'bg-background-brand text-text-on-color hover:bg-background-brand hover:text-black',\n\t\t\t\t\t\t\t\t\tmonthIndex === new Date().getMonth() &&\n\t\t\t\t\t\t\t\t\t\tnew Date().getFullYear() ===\n\t\t\t\t\t\t\t\t\t\t\tselectedYear &&\n\t\t\t\t\t\t\t\t\t\t'font-semibold'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ format( new Date( 0, monthIndex ), 'MMM' ) }\n\t\t\t\t\t\t\t\t{ new Date().getMonth() === monthIndex &&\n\t\t\t\t\t\t\t\t\tnew Date().getFullYear() === selectedYear &&\n\t\t\t\t\t\t\t\t\tcurrentTimeDot() }\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\n\t\t\t\t{ ! showMonthSelect && ! showYearSelect && (\n\t\t\t\t\t<MonthSelectors weekdays={ weekdays } />\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t}\n\n\tconst MonthSelectors = ( { weekdays }: { weekdays: string[] } ) => {\n\t\treturn (\n\t\t\t<div className=\"flex justify-between\">\n\t\t\t\t{ weekdays.map( ( weekday, weekdayIndex ) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tkey={ weekdayIndex }\n\t\t\t\t\t\tclassName=\"h-10 w-10 px-1.5 py-2 text-center text-text-secondary text-sm font-normal content-center bg-transparent border-none shrink-0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ weekday }\n\t\t\t\t\t</button>\n\t\t\t\t) ) }\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst CustomDayButton = ( {\n\t\tday,\n\t\tmodifiers,\n\t\t...customDayProps\n\t}: CustomDayButtonProps ) => {\n\t\tconst {\n\t\t\tselected: isSelected,\n\t\t\ttoday: isToday,\n\t\t\tdisabled: isDisabled,\n\t\t\toutside: isOutside,\n\t\t\trange_middle: isRangeMiddle,\n\t\t\trange_start: isRangeStart,\n\t\t\trange_end: isRangeEnd,\n\t\t} = modifiers;\n\n\t\tconst isPartOfRange = isRangeStart || isRangeEnd || isRangeMiddle;\n\n\t\tconst today = new Date();\n\t\tconst rangeEnd = ( selectedDates as TDateRange )?.to;\n\n\t\tconst isThisMonth =\n\t\t\tformat( day.displayMonth, 'yyyy-MM' ) === format( today, 'yyyy-MM' );\n\t\tconst isRangeEndInCurrentMonth =\n\t\t\trangeEnd &&\n\t\t\tformat( rangeEnd, 'yyyy-MM' ) === format( day.date, 'yyyy-MM' );\n\t\tconst previousMonth = subMonths( today, 1 );\n\t\tconst isPreviousMonth =\n\t\t\tformat( day.date, 'yyyy-MM' ) === format( previousMonth, 'yyyy-MM' );\n\n\t\tconst shouldShowDay =\n\t\t\tisThisMonth || isRangeEndInCurrentMonth || isPartOfRange;\n\t\tconst showOutsideDates = ! showOutsideDays && isOutside;\n\n\t\t// Common class for disabled outside days\n\t\tconst disabledOutsideClass =\n\t\t\t'bg-transparent opacity-50 text-text-disabled cursor-auto';\n\n\t\tconst buttonClasses = cn(\n\t\t\t'h-10 w-10 flex items-center justify-center transition text-text-secondary relative text-sm',\n\t\t\t'border-none rounded',\n\t\t\t( isSelected || isPartOfRange ) && ! isOutside\n\t\t\t\t? 'bg-background-brand text-text-on-color'\n\t\t\t\t: 'bg-transparent hover:bg-button-tertiary-hover',\n\t\t\tisRangeMiddle && shouldShowDay && ! isOutside\n\t\t\t\t? 'bg-brand-background-50 text-text-secondary rounded-none'\n\t\t\t\t: '',\n\t\t\tisDisabled\n\t\t\t\t? 'opacity-50 cursor-not-allowed text-text-disabled'\n\t\t\t\t: 'cursor-pointer',\n\t\t\t( isOutside && ! isPartOfRange ) ||\n\t\t\t\t( ! shouldShowDay && isOutside ) ||\n\t\t\t\t( isOutside && ! isPreviousMonth ) ||\n\t\t\t\tisOutside\n\t\t\t\t? disabledOutsideClass\n\t\t\t\t: ''\n\t\t);\n\n\t\tconst handleHover = ( event: React.MouseEvent<HTMLButtonElement> ) => {\n\t\t\tif ( typeof customDayProps.onMouseEnter === 'function' ) {\n\t\t\t\tcustomDayProps.onMouseEnter( event );\n\t\t\t}\n\t\t\tevent.currentTarget.setAttribute( 'data-hover', 'true' );\n\t\t};\n\t\tconst handleLeave = ( event: React.MouseEvent<HTMLButtonElement> ) => {\n\t\t\tif ( typeof customDayProps.onMouseLeave === 'function' ) {\n\t\t\t\tcustomDayProps.onMouseLeave( event );\n\t\t\t}\n\t\t\tevent.currentTarget.setAttribute( 'data-hover', 'false' );\n\t\t};\n\t\tconst handleClick = ( event: React.MouseEvent<HTMLButtonElement> ) => {\n\t\t\tif ( typeof customDayProps.onClick === 'function' ) {\n\t\t\t\tcustomDayProps.onClick( event );\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<button\n\t\t\t\tclassName={ cn(\n\t\t\t\t\tbuttonClasses,\n\t\t\t\t\tisToday && 'font-semibold',\n\t\t\t\t\tshowOutsideDates && 'opacity-0',\n\t\t\t\t\tisRangeStart && 'fui-range-start',\n\t\t\t\t\tisRangeEnd && 'fui-range-end',\n\t\t\t\t\tisRangeMiddle && 'fui-range-middle',\n\t\t\t\t\t{\n\t\t\t\t\t\t'[&:is([data-hover=true])]:bg-brand-background-50 [&:is([data-hover=true])]:rounded-none':\n\t\t\t\t\t\t\t! isPartOfRange && ! isSelected,\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t\tdisabled={ isDisabled || isOutside }\n\t\t\t\tonClick={ handleClick }\n\t\t\t\tonMouseEnter={ handleHover }\n\t\t\t\tonMouseLeave={ handleLeave }\n\t\t\t\taria-label={ format( day.date, 'EEEE, MMMM do, yyyy' ) }\n\t\t\t\tdata-selected={ isSelected }\n\t\t\t\tdata-day={ format( day.date, 'yyyy-MM-dd' ) }\n\t\t\t>\n\t\t\t\t{ ( ! showOutsideDates || ( isPartOfRange && shouldShowDay ) ) &&\n\t\t\t\t\tcustomDayProps.children }\n\t\t\t\t{ isToday && shouldShowDay && (\n\t\t\t\t\t<span className=\"absolute h-1 w-1 bg-background-brand rounded-full bottom-1\"></span>\n\t\t\t\t) }\n\t\t\t</button>\n\t\t);\n\t};\n\n\tconst CustomMonths = ( monthGridProps: MonthGridProps ) => {\n\t\treturn (\n\t\t\t<div className=\"flex flex-col bsf-force-ui-month-weeks\">\n\t\t\t\t{ (\n\t\t\t\t\tmonthGridProps as {\n\t\t\t\t\t\tchildren: React.ReactElement[];\n\t\t\t\t\t}\n\t\t\t\t).children[ 1 ].props.children.map(\n\t\t\t\t\t( month: React.ReactElement, index: number ) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\tclassName=\"flex flex-row justify-between\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ month }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleSelect: OnSelectHandler<\n\t\tDate | Date[] | TDateRange | undefined\n\t> = ( selectedDate, trigger ) => {\n\t\tif ( mode === 'range' ) {\n\t\t\tconst currentSelectedValue = selectedDates as TDateRange;\n\t\t\tif (\n\t\t\t\t( ! currentSelectedValue?.from && ! currentSelectedValue?.to ) ||\n\t\t\t\t( currentSelectedValue?.from && currentSelectedValue?.to )\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\t( currentSelectedValue.from &&\n\t\t\t\t\t\tisEqual( trigger, currentSelectedValue?.from ) ) ||\n\t\t\t\t\t( currentSelectedValue.to &&\n\t\t\t\t\t\tisEqual( trigger, currentSelectedValue?.to ) )\n\t\t\t\t) {\n\t\t\t\t\tsetSelectedDates( { from: undefined, to: undefined } );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetSelectedDates( { from: trigger, to: undefined } );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( currentSelectedValue?.from && ! currentSelectedValue?.to ) {\n\t\t\t\tif ( trigger < currentSelectedValue.from ) {\n\t\t\t\t\tsetSelectedDates( {\n\t\t\t\t\t\tfrom: trigger,\n\t\t\t\t\t\tto: currentSelectedValue.from,\n\t\t\t\t\t} );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetSelectedDates( {\n\t\t\t\t\tfrom: currentSelectedValue.from,\n\t\t\t\t\tto: trigger,\n\t\t\t\t} );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetSelectedDates( selectedDate as TDateRange );\n\t\t} else if ( mode === 'multiple' ) {\n\t\t\tif (\n\t\t\t\t( selectedDates as Date[] )!.some(\n\t\t\t\t\t( date ) =>\n\t\t\t\t\t\tformat( date, 'yyyy-MM-dd' ) ===\n\t\t\t\t\t\tformat( trigger, 'yyyy-MM-dd' )\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetSelectedDates(\n\t\t\t\t\t( selectedDates as Date[] )!.filter(\n\t\t\t\t\t\t( date ) =>\n\t\t\t\t\t\t\tformat( date, 'yyyy-MM-dd' ) !==\n\t\t\t\t\t\t\tformat( trigger, 'yyyy-MM-dd' )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tsetSelectedDates( [ ...( selectedDates as Date[] ), trigger ] );\n\t\t\t}\n\t\t} else if ( mode === 'single' ) {\n\t\t\tsetSelectedDates( selectedDate as Date );\n\t\t}\n\t};\n\n\tconst monthsClassName = cn(\n\t\t'relative bg-background-primary shadow-datepicker-wrapper',\n\t\twidth,\n\t\talignment === 'vertical' ? 'flex flex-col' : 'flex flex-row  gap-3',\n\t\tvariant === 'normal'\n\t\t\t? 'rounded-tr-md rounded-tl-md border border-solid border-border-subtle'\n\t\t\t: '',\n\t\tvariant === 'presets'\n\t\t\t? 'rounded-tr-md border border-solid border-border-subtle'\n\t\t\t: '',\n\t\tvariant === 'dualdate'\n\t\t\t? 'rounded-tr-md rounded-tl-md border border-solid border-border-subtle'\n\t\t\t: '',\n\t\tisFooter ? 'rounded-b-none' : 'rounded-bl-md rounded-br-md'\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<DayPicker\n\t\t\t\tmode={ mode }\n\t\t\t\tselected={ ( () => {\n\t\t\t\t\tif ( mode === 'range' ) {\n\t\t\t\t\t\treturn selectedDates as TDateRange;\n\t\t\t\t\t}\n\t\t\t\t\tif ( mode === 'multiple' ) {\n\t\t\t\t\t\treturn selectedDates as Date[];\n\t\t\t\t\t}\n\t\t\t\t\treturn selectedDates as Date | undefined;\n\t\t\t\t} )() }\n\t\t\t\tonSelect={ handleSelect }\n\t\t\t\thideNavigation\n\t\t\t\tcaptionLayout=\"label\"\n\t\t\t\tclassName={ cn( outerClassName ) } // Using renamed className\n\t\t\t\tformatters={ {\n\t\t\t\t\tformatWeekdayName,\n\t\t\t\t} }\n\t\t\t\tclassNames={ {\n\t\t\t\t\tmonths: monthsClassName,\n\t\t\t\t\tmonth: 'flex flex-col p-2 gap-1 text-center w-full',\n\t\t\t\t\tcaption: 'relative flex justify-center items-center',\n\t\t\t\t\ttable: 'w-full border-separate border-spacing-0',\n\t\t\t\t\thead_row: 'flex mb-1',\n\t\t\t\t\thead_cell:\n\t\t\t\t\t\t'text-muted-foreground rounded-md w-10 font-normal text-sm',\n\t\t\t\t\trow: 'flex w-full mt-2',\n\t\t\t\t\tcell: 'h-10 w-10 text-center text-sm p-0 relative',\n\t\t\t\t\t...classNames,\n\t\t\t\t} }\n\t\t\t\tnumberOfMonths={ numberOfMonths }\n\t\t\t\tcomponents={ {\n\t\t\t\t\tMonthCaption:\n\t\t\t\t\t\tCustomMonthCaption as unknown as CustomComponents['MonthCaption'],\n\t\t\t\t\tDayButton:\n\t\t\t\t\t\tCustomDayButton as unknown as CustomComponents['DayButton'],\n\t\t\t\t\tDay: ( singleDayProps ) => {\n\t\t\t\t\t\tconst dataAttributes = Object.entries(\n\t\t\t\t\t\t\tsingleDayProps\n\t\t\t\t\t\t).reduce(\n\t\t\t\t\t\t\t( acc: { [key: string]: unknown }, [ key, value ] ) => {\n\t\t\t\t\t\t\t\tif ( key.startsWith( 'data-' ) ) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = value;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t{ ...dataAttributes }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\tsingleDayProps.className,\n\t\t\t\t\t\t\t\t\t'inline-flex'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ singleDayProps.children }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tWeekdays: () => <></>,\n\t\t\t\t\tWeek: ( weekProps ) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'bsf-force-ui-month-week flex flex-row',\n\t\t\t\t\t\t\t\t\tweekProps.className\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ weekProps.children }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tMonths: ( monthsProps ) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'bsf-force-ui-date-picker-month',\n\t\t\t\t\t\t\t\t\tmonthsClassName\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ (\n\t\t\t\t\t\t\t\t\tmonthsProps as {\n\t\t\t\t\t\t\t\t\t\tchildren: React.ReactElement[];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)?.children?.map( ( months, monthIndex ) => {\n\t\t\t\t\t\t\t\t\tif ( ! months ) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={ monthIndex }>\n\t\t\t\t\t\t\t\t\t\t\t{ (\n\t\t\t\t\t\t\t\t\t\t\t\tmonths as unknown as React.ReactElement[]\n\t\t\t\t\t\t\t\t\t\t\t).map( ( month, innerMonthIndex ) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<React.Fragment\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={ innerMonthIndex }\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ innerMonthIndex > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"border border-solid border-border-subtle border-l-0\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t\t\t\t\t{ month }\n\t\t\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t\t\t) ) }\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t),\n\t\t\t\t\tMonthGrid: ( monthGridProps ) =>\n\t\t\t\t\t\t! showMonthSelect && ! showYearSelect ? (\n\t\t\t\t\t\t\t<CustomMonths { ...monthGridProps } />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t),\n\t\t\t\t} }\n\t\t\t\t/* eslint-disable  @typescript-eslint/no-explicit-any */\n\t\t\t\t{ ...( ( mode === 'range' ? { required: false } : {} ) as any ) }\n\t\t\t\t{ ...props }\n\t\t\t\tonDayMouseEnter={ ( _, __, event ) => {\n\t\t\t\t\tif ( mode !== 'range' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// if more then 1 selected then no need of hover effect\n\t\t\t\t\tconst selected = selectedDates as TDateRange;\n\n\t\t\t\t\t// Reset data-hover if more then 1 selected or if none are selected\n\t\t\t\t\tif (\n\t\t\t\t\t\t( selected?.from && selected?.to ) ||\n\t\t\t\t\t\t( ! selected?.from && ! selected?.to )\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst resetButtons = Array.from(\n\t\t\t\t\t\t\tdocument.querySelectorAll( '[data-hover]' )\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tresetButtons.forEach( ( item: Element ) => {\n\t\t\t\t\t\t\titem.setAttribute( 'data-hover', 'false' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get the current target button\n\t\t\t\t\tconst currentButton = event.target as HTMLButtonElement;\n\t\t\t\t\t// Get the date of the current button\n\t\t\t\t\tconst currentButtonDate = new Date(\n\t\t\t\t\t\tcurrentButton.dataset.day!\n\t\t\t\t\t);\n\t\t\t\t\t// Check if the current button is before or after the selected range\n\t\t\t\t\tconst isCurrentButtonBefore = isBefore(\n\t\t\t\t\t\tcurrentButtonDate,\n\t\t\t\t\t\tselected.from!\n\t\t\t\t\t);\n\t\t\t\t\tconst isCurrentButtonAfter = isAfter(\n\t\t\t\t\t\tcurrentButtonDate,\n\t\t\t\t\t\tselected.to!\n\t\t\t\t\t);\n\n\t\t\t\t\t// Find the closest ancestor container element\n\t\t\t\t\t// Selector based on the variant of the date picker\n\t\t\t\t\tlet datesContainer: Element | undefined;\n\t\t\t\t\tswitch ( variant ) {\n\t\t\t\t\t\tcase 'dualdate':\n\t\t\t\t\t\tcase 'presets':\n\t\t\t\t\t\t\tdatesContainer = currentButton.closest(\n\t\t\t\t\t\t\t\t'.bsf-force-ui-date-picker-month'\n\t\t\t\t\t\t\t) as Element;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'normal':\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tdatesContainer = currentButton.closest(\n\t\t\t\t\t\t\t\t'.bsf-force-ui-month-weeks'\n\t\t\t\t\t\t\t) as Element;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find all buttons within the container element\n\t\t\t\t\tconst buttons: HTMLButtonElement[] = Array.from(\n\t\t\t\t\t\tdatesContainer.querySelectorAll( 'button' )\n\t\t\t\t\t);\n\n\t\t\t\t\t// Sort if the current button is before or after the selected range\n\t\t\t\t\tif ( isCurrentButtonAfter ) {\n\t\t\t\t\t\tbuttons.sort( ( a, b ) =>\n\t\t\t\t\t\t\tisAfter(\n\t\t\t\t\t\t\t\tnew Date( a.dataset.day! ),\n\t\t\t\t\t\t\t\tnew Date( b.dataset.day! )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t\t: 1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif ( isCurrentButtonBefore ) {\n\t\t\t\t\t\tbuttons.sort( ( a, b ) =>\n\t\t\t\t\t\t\tisBefore(\n\t\t\t\t\t\t\t\tnew Date( a.dataset.day! ),\n\t\t\t\t\t\t\t\tnew Date( b.dataset.day! )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t: -1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Find the index of the current button in the buttons array\n\t\t\t\t\tconst currentIndex = buttons.indexOf( currentButton );\n\n\t\t\t\t\t// Find the index of the button with data-selected=\"true\"\n\t\t\t\t\tconst selectedIndex = buttons.findIndex(\n\t\t\t\t\t\t( button: Element ) =>\n\t\t\t\t\t\t\tbutton.getAttribute( 'data-selected' ) === 'true'\n\t\t\t\t\t);\n\n\t\t\t\t\t// Create an array to store the selected buttons\n\t\t\t\t\tconst selectedButtons: HTMLButtonElement[] = [];\n\n\t\t\t\t\t// Determine the range of buttons to select\n\t\t\t\t\tconst start = Math.min( currentIndex, selectedIndex );\n\t\t\t\t\tconst end = Math.max( currentIndex, selectedIndex );\n\n\t\t\t\t\t// Select the buttons between the current button and the button with data-selected=\"true\" (inclusive)\n\t\t\t\t\tfor ( let i = start; i <= end; i++ ) {\n\t\t\t\t\t\tif ( ! buttons[ i ]?.disabled ) {\n\t\t\t\t\t\t\tselectedButtons.push( buttons[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbuttons.forEach( ( item: HTMLButtonElement ) => {\n\t\t\t\t\t\t// run over all buttons and set data-hover true to those who in range\n\t\t\t\t\t\titem.setAttribute(\n\t\t\t\t\t\t\t'data-hover',\n\t\t\t\t\t\t\tselectedButtons.includes( item ) ? 'true' : 'false'\n\t\t\t\t\t\t);\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t\tdisabled={ disabled }\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default DatePickerComponent;\n"],"names":["DatePickerComponent","width","outerClassName","classNames","selectedDates","setSelectedDates","showOutsideDays","mode","variant","alignment","numberOfMonths","disabled","props","isFooter","React","showMonthSelect","setShowMonthSelect","useState","showYearSelect","setShowYearSelect","selectedYear","setSelectedYear","yearRangeStart","setYearRangeStart","CustomMonthCaption","customMonthProps","goToMonth","nextMonth","previousMonth","useDayPicker","yearFormatted","format","month","startOfWeek","weekdays","_","i","date","formatWeekdayName","handlePrevButtonClick","prevYear","handleNextButtonClick","nextYear","handleYearClick","yearValue","displayText","jsxs","Fragment","jsx","Button","ChevronLeft","ChevronRight","cn","currentTimeDot","monthIndex","MonthSelectors","weekday","weekdayIndex","CustomDayButton","day","modifiers","customDayProps","isSelected","isToday","isDisabled","isOutside","isRangeMiddle","isRangeStart","isRangeEnd","isPartOfRange","today","rangeEnd","isThisMonth","isRangeEndInCurrentMonth","subMonths","isPreviousMonth","shouldShowDay","showOutsideDates","buttonClasses","handleHover","event","handleLeave","handleClick","CustomMonths","monthGridProps","index","handleSelect","selectedDate","trigger","currentSelectedValue","isEqual","monthsClassName","DayPicker","singleDayProps","dataAttributes","acc","key","value","weekProps","monthsProps","months","innerMonthIndex","__","selected","item","currentButton","currentButtonDate","isCurrentButtonBefore","isBefore","isCurrentButtonAfter","isAfter","datesContainer","buttons","a","b","currentIndex","selectedIndex","button","selectedButtons","start","end"],"mappings":"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"}