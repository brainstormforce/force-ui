"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("react/jsx-runtime"),t=require("recharts"),q=require("./chart-tooltip-content.cjs.js"),E=require("../label/label.cjs.js"),K=({data:i,dataKeys:c=[],colors:s=[],showXAxis:d=!1,showYAxis:f=!1,showTooltip:u=!0,tooltipIndicator:h="dot",tooltipLabelKey:x,showCartesianGrid:p=!0,tickFormatter:k,xAxisDataKey:j,yAxisDataKey:g,xAxisFontSize:m="sm",xAxisFontColor:C="#6B7280",yAxisFontColor:L="#6B7280",chartWidth:z=350,chartHeight:S=200,withDots:b=!1,lineChartWrapperProps:v,strokeDasharray:y="3 3",gridColor:B="#E5E7EB"})=>{const M=[{stroke:"#2563EB"},{stroke:"#38BDF8"}],a=s.length>0?s:M,r={sm:"12px",md:"14px",lg:"16px"},n=r[m]||r.sm;return!i||i.length===0?e.jsx(E.default,{size:"sm",variant:"help",children:"No data available"}):e.jsx(t.ResponsiveContainer,{width:z,height:S,children:e.jsxs(t.LineChart,{...v,data:i,children:[p&&e.jsx(t.CartesianGrid,{strokeDasharray:y,horizontal:!1,stroke:B}),e.jsx(t.XAxis,{dataKey:j,tickLine:!1,axisLine:!1,tickMargin:8,tickFormatter:k,tick:{fontSize:n,fill:C},hide:!d}),e.jsx(t.YAxis,{dataKey:g,tickLine:!1,axisLine:!1,tickMargin:8,tick:{fontSize:n,fill:L},hide:!f}),u&&e.jsx(t.Tooltip,{content:e.jsx(q.default,{indicator:h,labelKey:x})}),c.map((l,o)=>e.jsx(t.Line,{type:"natural",dataKey:l,stroke:a[o].stroke,fill:a[o].stroke,strokeWidth:2,dot:b},l))]})})};exports.default=K;
//# sourceMappingURL=line-chart.cjs.js.map
