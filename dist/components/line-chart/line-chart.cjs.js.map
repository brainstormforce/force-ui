{"version":3,"file":"line-chart.cjs.js","sources":["../../../src/components/line-chart/line-chart.tsx"],"sourcesContent":["import {\n\tLineChart as LineChartWrapper,\n\tLine,\n\tXAxis,\n\tYAxis,\n\tCartesianGrid,\n\tTooltip,\n\tResponsiveContainer,\n} from 'recharts';\nimport ChartTooltipContent from './chart-tooltip-content';\nimport Label from '../label';\nimport type { CategoricalChartProps } from 'recharts/types/chart/generateCategoricalChart';\n\ninterface DataItem {\n\t[key: string]: number | string;\n}\ninterface Color {\n\tstroke: string;\n}\n\ninterface LineChartProps {\n\t/** An array of objects representing the source data for the chart. */\n\tdata: DataItem[];\n\n\t/** An array of strings representing the keys to access data in each data object. Used for identifying different data series. */\n\tdataKeys: string[];\n\n\t/** An array of color objects that determine the stroke colors for each data series in the chart. */\n\tcolors?: Color[];\n\n\t/** Whether to render the `<XAxis />` component for the x-axis. */\n\tshowXAxis?: boolean;\n\n\t/** Whether to render the `<YAxis />` component for the y-axis. */\n\tshowYAxis?: boolean;\n\n\t/** Toggle the visibility of the tooltip on hover, displaying detailed information for each data point. */\n\tshowTooltip?: boolean;\n\n\t/** The tooltip indicator. It can be `dot`, `line`, or `dashed`. */\n\ttooltipIndicator?: 'dot' | 'line' | 'dashed';\n\n\t/** The key to use for the tooltip label. */\n\ttooltipLabelKey?: string;\n\n\t/** Whether to display the `<CartesianGrid />`, adding horizontal and vertical grid lines. */\n\tshowCartesianGrid?: boolean;\n\n\t/** A function used to format the ticks on the x-axis, e.g., for formatting dates or numbers. */\n\ttickFormatter?: ( value: string ) => string;\n\n\t/** The key in the data objects representing values for the x-axis. */\n\txAxisDataKey?: string;\n\n\t/** The key in the data objects representing values for the y-axis. */\n\tyAxisDataKey?: string;\n\n\t/** Font size for the labels on the x-axis. */\n\txAxisFontSize?: 'sm' | 'md' | 'lg';\n\n\t/** Font color for the labels on the x-axis. */\n\txAxisFontColor?: string;\n\n\t/** Font color for the labels on the y-axis. */\n\tyAxisFontColor?: string;\n\n\t/** Width of the chart container. */\n\tchartWidth?: number | string;\n\n\t/** Height of the chart container. */\n\tchartHeight?: number | string;\n\n\t/** Determines whether dots are shown on each data point. */\n\twithDots?: boolean;\n\n\t/**\n\t * Line chart Wrapper props to apply additional props to the wrapper component. Ex. `margin`, or `onClick` etc.\n\t * @see https://recharts.org/en-US/api/LineChart\n\t */\n\tlineChartWrapperProps?: Omit<\n\t\tCategoricalChartProps,\n\t\t'width' | 'height' | 'data'\n\t>;\n\t/**\n\t * The stroke dasharray for the Cartesian grid.\n\t * @default '3 3'\n\t * @see https://recharts.org/en-US/api/CartesianGrid\n\t */\n\tstrokeDasharray?: string;\n\n\t/**\n\t * The color of the Cartesian grid lines.\n\t * @default '#E5E7EB'\n\t */\n\tgridColor?: string;\n}\n\nconst LineChart = ( {\n\tdata,\n\tdataKeys = [],\n\tcolors = [],\n\tshowXAxis = false,\n\tshowYAxis = false,\n\tshowTooltip = true,\n\ttooltipIndicator = 'dot', // dot, line, dashed\n\ttooltipLabelKey,\n\tshowCartesianGrid = true,\n\ttickFormatter,\n\txAxisDataKey,\n\tyAxisDataKey,\n\txAxisFontSize = 'sm', // sm, md, lg\n\txAxisFontColor = '#6B7280',\n\tyAxisFontColor = '#6B7280',\n\tchartWidth = 350,\n\tchartHeight = 200,\n\twithDots = false,\n\tlineChartWrapperProps,\n\tstrokeDasharray = '3 3',\n\tgridColor = '#E5E7EB',\n}: LineChartProps ) => {\n\tconst defaultColors = [ { stroke: '#2563EB' }, { stroke: '#38BDF8' } ];\n\n\tconst appliedColors = colors.length > 0 ? colors : defaultColors;\n\n\tconst fontSizeMap = {\n\t\tsm: '12px',\n\t\tmd: '14px',\n\t\tlg: '16px',\n\t};\n\n\tconst fontSizeVariant = fontSizeMap[ xAxisFontSize ] || fontSizeMap.sm;\n\n\tif ( ! data || data.length === 0 ) {\n\t\treturn (\n\t\t\t<Label size=\"sm\" variant=\"help\">\n\t\t\t\tNo data available\n\t\t\t</Label>\n\t\t);\n\t}\n\n\treturn (\n\t\t<ResponsiveContainer width={ chartWidth } height={ chartHeight }>\n\t\t\t<LineChartWrapper { ...lineChartWrapperProps } data={ data }>\n\t\t\t\t{ showCartesianGrid && (\n\t\t\t\t\t<CartesianGrid\n\t\t\t\t\t\tstrokeDasharray={ strokeDasharray }\n\t\t\t\t\t\thorizontal={ false }\n\t\t\t\t\t\tstroke={ gridColor }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<XAxis\n\t\t\t\t\tdataKey={ xAxisDataKey }\n\t\t\t\t\ttickLine={ false }\n\t\t\t\t\taxisLine={ false }\n\t\t\t\t\ttickMargin={ 8 }\n\t\t\t\t\ttickFormatter={ tickFormatter }\n\t\t\t\t\ttick={ {\n\t\t\t\t\t\tfontSize: fontSizeVariant,\n\t\t\t\t\t\tfill: xAxisFontColor,\n\t\t\t\t\t} }\n\t\t\t\t\thide={ ! showXAxis }\n\t\t\t\t/>\n\t\t\t\t<YAxis\n\t\t\t\t\tdataKey={ yAxisDataKey }\n\t\t\t\t\ttickLine={ false }\n\t\t\t\t\taxisLine={ false }\n\t\t\t\t\ttickMargin={ 8 }\n\t\t\t\t\ttick={ {\n\t\t\t\t\t\tfontSize: fontSizeVariant,\n\t\t\t\t\t\tfill: yAxisFontColor,\n\t\t\t\t\t} }\n\t\t\t\t\thide={ ! showYAxis }\n\t\t\t\t/>\n\n\t\t\t\t{ showTooltip && (\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<ChartTooltipContent\n\t\t\t\t\t\t\t\tindicator={ tooltipIndicator }\n\t\t\t\t\t\t\t\tlabelKey={ tooltipLabelKey }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\n\t\t\t\t{ dataKeys.map( ( key, index ) => (\n\t\t\t\t\t<Line\n\t\t\t\t\t\tkey={ key }\n\t\t\t\t\t\ttype=\"natural\"\n\t\t\t\t\t\tdataKey={ key }\n\t\t\t\t\t\tstroke={ appliedColors[ index ].stroke }\n\t\t\t\t\t\tfill={ appliedColors[ index ].stroke }\n\t\t\t\t\t\tstrokeWidth={ 2 }\n\t\t\t\t\t\tdot={ withDots }\n\t\t\t\t\t/>\n\t\t\t\t) ) }\n\t\t\t</LineChartWrapper>\n\t\t</ResponsiveContainer>\n\t);\n};\n\nexport default LineChart;\n"],"names":["LineChart","data","dataKeys","colors","showXAxis","showYAxis","showTooltip","tooltipIndicator","tooltipLabelKey","showCartesianGrid","tickFormatter","xAxisDataKey","yAxisDataKey","xAxisFontSize","xAxisFontColor","yAxisFontColor","chartWidth","chartHeight","withDots","lineChartWrapperProps","strokeDasharray","gridColor","defaultColors","appliedColors","fontSizeMap","fontSizeVariant","Label","jsx","ResponsiveContainer","jsxs","LineChartWrapper","CartesianGrid","XAxis","YAxis","Tooltip","ChartTooltipContent","key","index","Line"],"mappings":"sPAiGMA,EAAY,CAAE,CACnB,KAAAC,EACA,SAAAC,EAAW,CAAC,EACZ,OAAAC,EAAS,CAAC,EACV,UAAAC,EAAY,GACZ,UAAAC,EAAY,GACZ,YAAAC,EAAc,GACd,iBAAAC,EAAmB,MACnB,gBAAAC,EACA,kBAAAC,EAAoB,GACpB,cAAAC,EACA,aAAAC,EACA,aAAAC,EACA,cAAAC,EAAgB,KAChB,eAAAC,EAAiB,UACjB,eAAAC,EAAiB,UACjB,WAAAC,EAAa,IACb,YAAAC,EAAc,IACd,SAAAC,EAAW,GACX,sBAAAC,EACA,gBAAAC,EAAkB,MAClB,UAAAC,EAAY,SACb,IAAuB,CAChB,MAAAC,EAAgB,CAAE,CAAE,OAAQ,WAAa,CAAE,OAAQ,UAAY,EAE/DC,EAAgBpB,EAAO,OAAS,EAAIA,EAASmB,EAE7CE,EAAc,CACnB,GAAI,OACJ,GAAI,OACJ,GAAI,MACL,EAEMC,EAAkBD,EAAaX,CAAc,GAAKW,EAAY,GAEpE,MAAK,CAAEvB,GAAQA,EAAK,SAAW,QAE5ByB,UAAM,CAAA,KAAK,KAAK,QAAQ,OAAO,SAEhC,oBAAA,EAKDC,EAAA,IAACC,EAAoB,oBAAA,CAAA,MAAQZ,EAAa,OAASC,EAClD,SAACY,EAAAA,KAAAC,EAAAA,UAAA,CAAmB,GAAGX,EAAwB,KAAAlB,EAC5C,SAAA,CACDQ,GAAAkB,EAAA,IAACI,EAAA,cAAA,CACA,gBAAAX,EACA,WAAa,GACb,OAASC,CAAA,CACV,EAEDM,EAAA,IAACK,EAAA,MAAA,CACA,QAAUrB,EACV,SAAW,GACX,SAAW,GACX,WAAa,EACb,cAAAD,EACA,KAAO,CACN,SAAUe,EACV,KAAMX,CACP,EACA,KAAO,CAAEV,CAAA,CACV,EACAuB,EAAA,IAACM,EAAA,MAAA,CACA,QAAUrB,EACV,SAAW,GACX,SAAW,GACX,WAAa,EACb,KAAO,CACN,SAAUa,EACV,KAAMV,CACP,EACA,KAAO,CAAEV,CAAA,CACV,EAEEC,GACDqB,EAAA,IAACO,EAAA,QAAA,CACA,QACCP,EAAA,IAACQ,EAAA,QAAA,CACA,UAAY5B,EACZ,SAAWC,CAAA,CAAA,CACZ,CAEF,EAGCN,EAAS,IAAK,CAAEkC,EAAKC,IACtBV,EAAA,IAACW,EAAA,KAAA,CAEA,KAAK,UACL,QAAUF,EACV,OAASb,EAAec,CAAM,EAAE,OAChC,KAAOd,EAAec,CAAM,EAAE,OAC9B,YAAc,EACd,IAAMnB,CAAA,EANAkB,CAQN,CAAA,CAAA,CAAA,CACH,CACD,CAAA,CAEF"}