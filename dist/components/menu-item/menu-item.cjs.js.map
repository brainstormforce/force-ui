{"version":3,"file":"menu-item.cjs.js","sources":["../../../src/components/menu-item/menu-item.tsx"],"sourcesContent":["import { useState, createContext, useContext, type ReactNode } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronDown } from 'lucide-react';\nimport { cn } from '@/utilities/functions';\n\nconst MenuContext = createContext<{ size?: 'sm' | 'md' }>( {} );\nconst useMenuContext = () => useContext( MenuContext );\n\n// Base interface for common props\nexport interface BaseMenuProps {\n\t/** Additional CSS classes for the component. */\n\tclassName?: string;\n}\n\n// Props for Menu\nexport interface MenuProps extends BaseMenuProps {\n\t/** Defines the size of the menu (e.g., 'sm', 'md'). */\n\tsize?: 'sm' | 'md';\n\t/** Child elements of the menu. */\n\tchildren: ReactNode;\n}\n\nexport const Menu = ( { size = 'md', children, className }: MenuProps ) => {\n\tconst baseClasses = 'flex flex-col bg-background-primary p-2';\n\n\treturn (\n\t\t<MenuContext.Provider value={ { size } }>\n\t\t\t<div className={ cn( baseClasses, className ) }>{ children }</div>\n\t\t</MenuContext.Provider>\n\t);\n};\nMenu.displayName = 'Menu';\n\nexport interface MenuListProps extends BaseMenuProps {\n\t/** Heading for the menu list. */\n\theading?: string;\n\t/** Displays an arrow next to the heading. */\n\tarrow?: boolean;\n\t/** Controls the initial open state of the menu list. */\n\topen?: boolean;\n\t/** Callback function triggered when the menu list is clicked. */\n\tonClick?: ( isOpen: boolean ) => void;\n\t/** Child elements of the menu list. */\n\tchildren: ReactNode;\n\t/** Shows the arrow only when hovering. */\n\tshowArrowOnHover?: boolean;\n}\n\nexport const MenuList = ( {\n\theading,\n\tarrow = false,\n\tshowArrowOnHover = false, // Prop to toggle hover-based arrow display\n\topen: initialOpen = true,\n\tonClick,\n\tchildren,\n\tclassName,\n}: MenuListProps ) => {\n\tconst [ isOpen, setIsOpen ] = useState( initialOpen );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\tconst { size } = useMenuContext();\n\n\tconst baseClasses =\n\t\t'text-text-primary bg-transparent cursor-pointer flex justify-between items-center gap-1';\n\n\tconst sizeClasses = {\n\t\tsm: 'text-xs',\n\t\tmd: 'text-sm',\n\t}?.[ size ?? 'md' ];\n\tconst iconSizeClasses = {\n\t\tsm: 'size-4',\n\t\tmd: 'size-5',\n\t}?.[ size ?? 'md' ];\n\n\tconst handleToggle = () => {\n\t\tsetIsOpen( ! isOpen );\n\t\tif ( onClick ) {\n\t\t\tonClick( ! isOpen );\n\t\t}\n\t};\n\n\tconst arrowAnimationVariants = {\n\t\topen: { rotate: 180 },\n\t\tclosed: { rotate: 0 },\n\t};\n\n\tconst listAnimationVariants = {\n\t\topen: { height: 'auto', opacity: 1 },\n\t\tclosed: { height: 0, opacity: 0 },\n\t};\n\n\tconst arrowFadeVariants = {\n\t\tvisible: { opacity: 1 },\n\t\thidden: { opacity: 0 },\n\t};\n\n\tconst getArrowAnimationVariant = () => {\n\t\tif ( ! showArrowOnHover ) {\n\t\t\treturn 'visible';\n\t\t}\n\n\t\treturn isOpen || isHovered ? 'visible' : 'hidden';\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{ !! heading && (\n\t\t\t\t<div\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex={ 0 }\n\t\t\t\t\tonClick={ handleToggle }\n\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\t\t\thandleToggle();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tonMouseEnter={ () => showArrowOnHover && setIsHovered( true ) }\n\t\t\t\t\tonMouseLeave={ () => showArrowOnHover && setIsHovered( false ) }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tbaseClasses,\n\t\t\t\t\t\tsizeClasses,\n\t\t\t\t\t\theading ? 'p-1' : 'p-0',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t>\n\t\t\t\t\t<span className=\"text-text-tertiary\">{ heading }</span>\n\n\t\t\t\t\t{ arrow && (\n\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\tclassName=\"flex items-center text-border-strong\"\n\t\t\t\t\t\t\tinitial=\"hidden\"\n\t\t\t\t\t\t\tanimate={ getArrowAnimationVariant() }\n\t\t\t\t\t\t\texit=\"hidden\"\n\t\t\t\t\t\t\tvariants={ arrowFadeVariants }\n\t\t\t\t\t\t\ttransition={ { duration: 0.15 } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\t\tclassName=\"inline-flex p-1\"\n\t\t\t\t\t\t\t\tvariants={ arrowAnimationVariants }\n\t\t\t\t\t\t\t\tanimate={ isOpen ? 'open' : 'closed' }\n\t\t\t\t\t\t\t\ttransition={ { duration: 0.15 } }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\t\t\t\tclassName={ cn( 'shrink-0', iconSizeClasses ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<AnimatePresence initial={ false }>\n\t\t\t\t{ isOpen && (\n\t\t\t\t\t<motion.ul\n\t\t\t\t\t\trole=\"menu\"\n\t\t\t\t\t\tvariants={ listAnimationVariants }\n\t\t\t\t\t\tinitial=\"closed\"\n\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\texit=\"closed\"\n\t\t\t\t\t\ttransition={ { duration: 0.3, ease: 'easeInOut' } }\n\t\t\t\t\t\tclassName=\"overflow flex gap-0.5 flex-col m-0 bg-white rounded p-0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</motion.ul>\n\t\t\t\t) }\n\t\t\t</AnimatePresence>\n\t\t</div>\n\t);\n};\n\nMenuList.displayName = 'Menu.List';\n\n// Props for MenuItem\nexport interface MenuItemProps extends BaseMenuProps {\n\t/** Disables the menu item if true. */\n\tdisabled?: boolean;\n\t/** Marks the menu item as active. */\n\tactive?: boolean;\n\t/** Callback function triggered when the menu item is clicked. */\n\tonClick?: () => void;\n\t/** Child elements of the menu item. */\n\tchildren: ReactNode;\n}\nexport const MenuItem = ( {\n\tdisabled = false,\n\tactive,\n\tonClick,\n\tchildren,\n\tclassName,\n\t...props\n}: MenuItemProps ) => {\n\tconst { size } = useMenuContext();\n\n\tconst baseClasses =\n\t\t'flex p-1 gap-1 items-center bg-transparent border-none rounded text-text-secondary cursor-pointer m-0';\n\tconst sizeClasses = {\n\t\tsm: '[&>svg]:size-4 [&>svg]:m-1 [&>*:not(svg)]:mx-1 [&>*:not(svg)]:my-0.5 text-sm',\n\t\tmd: '[&>svg]:size-5 [&>svg]:m-1.5 [&>*:not(svg)]:m-1 text-base',\n\t}?.[ size ?? 'md' ];\n\tconst hoverClasses =\n\t\t'hover:bg-background-secondary hover:text-text-primary';\n\tconst disabledClasses = disabled\n\t\t? 'text-text-disabled hover:text-text-disabled cursor-not-allowed hover:bg-transparent'\n\t\t: '';\n\tconst activeClasses = active\n\t\t? 'text-icon-primary [&>svg]:text-icon-interactive bg-background-secondary'\n\t\t: '';\n\tconst transitionClasses = 'transition-colors duration-300 ease-in-out';\n\n\treturn (\n\t\t<li\n\t\t\trole=\"menuitem\"\n\t\t\ttabIndex={ disabled ? -1 : 0 }\n\t\t\tonClick={ disabled ? undefined : onClick }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\tonClick?.();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tclassName={ cn(\n\t\t\t\tbaseClasses,\n\t\t\t\tsizeClasses,\n\t\t\t\thoverClasses,\n\t\t\t\tdisabledClasses,\n\t\t\t\tactiveClasses,\n\t\t\t\ttransitionClasses,\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-disabled={ disabled }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</li>\n\t);\n};\n\nMenuItem.displayName = 'Menu.Item';\n\n// Props for MenuSeparator\nexport interface MenuSeparatorProps extends BaseMenuProps {\n\t/** Defines the style of the separator (e.g., 'solid', 'dashed'). */\n\tvariant?: 'solid' | 'dashed' | 'dotted' | 'double' | 'hidden' | 'none';\n}\nexport const MenuSeparator = ( {\n\tvariant = 'solid',\n\tclassName,\n}: MenuSeparatorProps ) => {\n\tconst variantClasses = {\n\t\tsolid: 'border-solid',\n\t\tdashed: 'border-dashed',\n\t\tdotted: 'border-dotted',\n\t\tdouble: 'border-double',\n\t\thidden: 'border-hidden',\n\t\tnone: 'border-none',\n\t}?.[ variant ];\n\n\treturn (\n\t\t<li className=\"m-0 p-0 list-none\" role=\"separator\" aria-hidden=\"true\">\n\t\t\t<hr\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full border-0 border-t border-border-subtle',\n\t\t\t\t\tvariantClasses,\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t/>\n\t\t</li>\n\t);\n};\n\nMenuSeparator.displayName = 'Menu.Separator';\n\nMenu.List = MenuList;\nMenu.Item = MenuItem;\nMenu.Separator = MenuSeparator;\n\nexport default Menu;\n"],"names":["MenuContext","createContext","useMenuContext","useContext","Menu","size","children","className","jsx","cn","MenuList","heading","arrow","showArrowOnHover","initialOpen","onClick","isOpen","setIsOpen","useState","isHovered","setIsHovered","baseClasses","sizeClasses","iconSizeClasses","handleToggle","arrowAnimationVariants","listAnimationVariants","arrowFadeVariants","getArrowAnimationVariant","jsxs","event","motion","ChevronDown","AnimatePresence","MenuItem","disabled","active","props","hoverClasses","disabledClasses","activeClasses","MenuSeparator","variant","variantClasses"],"mappings":"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"}