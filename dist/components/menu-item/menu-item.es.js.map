{"version":3,"file":"menu-item.es.js","sources":["../../../src/components/menu-item/menu-item.tsx"],"sourcesContent":["import { useState, createContext, useContext, type ReactNode } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { ChevronDown } from 'lucide-react';\nimport { cn } from '@/utilities/functions';\n\nconst MenuContext = createContext<{ size?: 'sm' | 'md' }>( {} );\nconst useMenuContext = () => useContext( MenuContext );\n\n// Base interface for common props\nexport interface BaseMenuProps {\n\t/** Additional CSS classes for the component. */\n\tclassName?: string;\n}\n\n// Props for Menu\nexport interface MenuProps extends BaseMenuProps {\n\t/** Defines the size of the menu (e.g., 'sm', 'md'). */\n\tsize?: 'sm' | 'md';\n\t/** Child elements of the menu. */\n\tchildren: ReactNode;\n}\n\nexport const Menu = ( { size = 'md', children, className }: MenuProps ) => {\n\tconst baseClasses = 'flex flex-col bg-background-primary p-2';\n\n\treturn (\n\t\t<MenuContext.Provider value={ { size } }>\n\t\t\t<div className={ cn( baseClasses, className ) }>{ children }</div>\n\t\t</MenuContext.Provider>\n\t);\n};\nMenu.displayName = 'Menu';\n\nexport interface MenuListProps extends BaseMenuProps {\n\t/** Heading for the menu list. */\n\theading?: string;\n\t/** Displays an arrow next to the heading. */\n\tarrow?: boolean;\n\t/** Controls the initial open state of the menu list. */\n\topen?: boolean;\n\t/** Callback function triggered when the menu list is clicked. */\n\tonClick?: ( isOpen: boolean ) => void;\n\t/** Child elements of the menu list. */\n\tchildren: ReactNode;\n\t/** Shows the arrow only when hovering. */\n\tshowArrowOnHover?: boolean;\n}\n\nexport const MenuList = ( {\n\theading,\n\tarrow = false,\n\tshowArrowOnHover = false, // Prop to toggle hover-based arrow display\n\topen: initialOpen = true,\n\tonClick,\n\tchildren,\n\tclassName,\n}: MenuListProps ) => {\n\tconst [ isOpen, setIsOpen ] = useState( initialOpen );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\tconst { size } = useMenuContext();\n\n\tconst baseClasses =\n\t\t'text-text-primary bg-transparent cursor-pointer flex justify-between items-center gap-1';\n\n\tconst sizeClasses = {\n\t\tsm: 'text-xs',\n\t\tmd: 'text-sm',\n\t}?.[ size ?? 'md' ];\n\tconst iconSizeClasses = {\n\t\tsm: 'size-4',\n\t\tmd: 'size-5',\n\t}?.[ size ?? 'md' ];\n\n\tconst handleToggle = () => {\n\t\tsetIsOpen( ! isOpen );\n\t\tif ( onClick ) {\n\t\t\tonClick( ! isOpen );\n\t\t}\n\t};\n\n\tconst arrowAnimationVariants = {\n\t\topen: { rotate: 180 },\n\t\tclosed: { rotate: 0 },\n\t};\n\n\tconst listAnimationVariants = {\n\t\topen: { height: 'auto', opacity: 1 },\n\t\tclosed: { height: 0, opacity: 0 },\n\t};\n\n\tconst arrowFadeVariants = {\n\t\tvisible: { opacity: 1 },\n\t\thidden: { opacity: 0 },\n\t};\n\n\tconst getArrowAnimationVariant = () => {\n\t\tif ( ! showArrowOnHover ) {\n\t\t\treturn 'visible';\n\t\t}\n\n\t\treturn isOpen || isHovered ? 'visible' : 'hidden';\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{ !! heading && (\n\t\t\t\t<div\n\t\t\t\t\trole=\"button\"\n\t\t\t\t\ttabIndex={ 0 }\n\t\t\t\t\tonClick={ handleToggle }\n\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\t\t\thandleToggle();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\tonMouseEnter={ () => showArrowOnHover && setIsHovered( true ) }\n\t\t\t\t\tonMouseLeave={ () => showArrowOnHover && setIsHovered( false ) }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tbaseClasses,\n\t\t\t\t\t\tsizeClasses,\n\t\t\t\t\t\theading ? 'p-1' : 'p-0',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t>\n\t\t\t\t\t<span className=\"text-text-tertiary\">{ heading }</span>\n\n\t\t\t\t\t{ arrow && (\n\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\tclassName=\"flex items-center text-border-strong\"\n\t\t\t\t\t\t\tinitial=\"hidden\"\n\t\t\t\t\t\t\tanimate={ getArrowAnimationVariant() }\n\t\t\t\t\t\t\texit=\"hidden\"\n\t\t\t\t\t\t\tvariants={ arrowFadeVariants }\n\t\t\t\t\t\t\ttransition={ { duration: 0.15 } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<motion.span\n\t\t\t\t\t\t\t\tclassName=\"inline-flex p-1\"\n\t\t\t\t\t\t\t\tvariants={ arrowAnimationVariants }\n\t\t\t\t\t\t\t\tanimate={ isOpen ? 'open' : 'closed' }\n\t\t\t\t\t\t\t\ttransition={ { duration: 0.15 } }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\t\t\t\tclassName={ cn( 'shrink-0', iconSizeClasses ) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t\t</motion.span>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t<AnimatePresence initial={ false }>\n\t\t\t\t{ isOpen && (\n\t\t\t\t\t<motion.ul\n\t\t\t\t\t\trole=\"menu\"\n\t\t\t\t\t\tvariants={ listAnimationVariants }\n\t\t\t\t\t\tinitial=\"closed\"\n\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\texit=\"closed\"\n\t\t\t\t\t\ttransition={ { duration: 0.3, ease: 'easeInOut' } }\n\t\t\t\t\t\tclassName=\"overflow flex gap-0.5 flex-col m-0 bg-white rounded p-0\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ children }\n\t\t\t\t\t</motion.ul>\n\t\t\t\t) }\n\t\t\t</AnimatePresence>\n\t\t</div>\n\t);\n};\n\nMenuList.displayName = 'Menu.List';\n\n// Props for MenuItem\nexport interface MenuItemProps extends BaseMenuProps {\n\t/** Disables the menu item if true. */\n\tdisabled?: boolean;\n\t/** Marks the menu item as active. */\n\tactive?: boolean;\n\t/** Callback function triggered when the menu item is clicked. */\n\tonClick?: () => void;\n\t/** Child elements of the menu item. */\n\tchildren: ReactNode;\n}\nexport const MenuItem = ( {\n\tdisabled = false,\n\tactive,\n\tonClick,\n\tchildren,\n\tclassName,\n}: MenuItemProps ) => {\n\tconst { size } = useMenuContext();\n\n\tconst baseClasses =\n\t\t'flex p-1 gap-1 items-center bg-transparent border-none rounded text-text-secondary cursor-pointer m-0';\n\tconst sizeClasses = {\n\t\tsm: '[&>svg]:size-4 [&>svg]:m-1 [&>*:not(svg)]:mx-1 [&>*:not(svg)]:my-0.5 text-sm',\n\t\tmd: '[&>svg]:size-5 [&>svg]:m-1.5 [&>*:not(svg)]:m-1 text-base',\n\t}?.[ size ?? 'md' ];\n\tconst hoverClasses =\n\t\t'hover:bg-background-secondary hover:text-text-primary';\n\tconst disabledClasses = disabled\n\t\t? 'text-text-disabled hover:text-text-disabled cursor-not-allowed hover:bg-transparent'\n\t\t: '';\n\tconst activeClasses = active\n\t\t? 'text-icon-primary [&>svg]:text-icon-interactive bg-background-secondary'\n\t\t: '';\n\tconst transitionClasses = 'transition-colors duration-300 ease-in-out';\n\n\treturn (\n\t\t<li\n\t\t\trole=\"menuitem\"\n\t\t\ttabIndex={ 0 }\n\t\t\tonClick={ onClick }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( event.key === 'Enter' || event.key === ' ' ) {\n\t\t\t\t\tonClick?.();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tclassName={ cn(\n\t\t\t\tbaseClasses,\n\t\t\t\tsizeClasses,\n\t\t\t\thoverClasses,\n\t\t\t\tdisabledClasses,\n\t\t\t\tactiveClasses,\n\t\t\t\ttransitionClasses,\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ children }\n\t\t</li>\n\t);\n};\n\nMenuItem.displayName = 'Menu.Item';\n\n// Props for MenuSeparator\nexport interface MenuSeparatorProps extends BaseMenuProps {\n\t/** Defines the style of the separator (e.g., 'solid', 'dashed'). */\n\tvariant?: 'solid' | 'dashed' | 'dotted' | 'double' | 'hidden' | 'none';\n}\nexport const MenuSeparator = ( {\n\tvariant = 'solid',\n\tclassName,\n}: MenuSeparatorProps ) => {\n\tconst variantClasses = {\n\t\tsolid: 'border-solid',\n\t\tdashed: 'border-dashed',\n\t\tdotted: 'border-dotted',\n\t\tdouble: 'border-double',\n\t\thidden: 'border-hidden',\n\t\tnone: 'border-none',\n\t}?.[ variant ];\n\n\treturn (\n\t\t<li className=\"m-0 p-0 list-none\" role=\"separator\" aria-hidden=\"true\">\n\t\t\t<hr\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full border-0 border-t border-border-subtle',\n\t\t\t\t\tvariantClasses,\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t/>\n\t\t</li>\n\t);\n};\n\nMenuSeparator.displayName = 'Menu.Separator';\n\nMenu.List = MenuList;\nMenu.Item = MenuItem;\nMenu.Separator = MenuSeparator;\n\nexport default Menu;\n"],"names":["MenuContext","createContext","useMenuContext","useContext","Menu","size","children","className","jsx","cn","MenuList","heading","arrow","showArrowOnHover","initialOpen","onClick","isOpen","setIsOpen","useState","isHovered","setIsHovered","baseClasses","sizeClasses","iconSizeClasses","handleToggle","arrowAnimationVariants","listAnimationVariants","arrowFadeVariants","getArrowAnimationVariant","jsxs","event","motion","ChevronDown","AnimatePresence","MenuItem","disabled","active","MenuSeparator","variant","variantClasses"],"mappings":"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"}