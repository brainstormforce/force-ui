{"version":3,"file":"radio-button.cjs.js","sources":["../../../src/components/radio-button/radio-button.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tforwardRef,\n\tisValidElement,\n\tcreateContext,\n\tuseContext,\n\tFragment,\n\ttype ReactNode,\n\ttype ElementType,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport { Check, Info } from 'lucide-react';\n\nimport { cn, columnClasses } from '@/utilities/functions';\nimport Switch from '../switch';\nimport {\n\tcolorClassNames,\n\tdisabledClassNames,\n\tsizeClassNames,\n\ttextSizeClassNames,\n\tsizes,\n\tborderClasses,\n\tbaseClasses,\n\thoverClasses,\n\tfocusClasses,\n} from './styles';\nimport Tooltip from '../tooltip';\n\nconst RadioButtonContext = createContext<\n\tPartial<{\n\t\tname: string;\n\t\tvalue: string | string[];\n\t\tby: string;\n\t\tonChange:( value: string | string[] ) => void;\n\t\tisControlled: boolean;\n\t\tdisableAll: boolean;\n\t\tstyle: 'simple' | 'tile';\n\t\tcolumns: number;\n\t\tmultiSelection: boolean;\n\t\tsize: 'sm' | 'md';\n\t\tchecked?: boolean;\n\t\t\t}>\n\t\t\t>( {} );\nconst useRadioButton = () => useContext( RadioButtonContext );\n\n/** Common props used across the radio button components */\nexport interface RadioButtonCommonProps {\n\t/** Custom class names for additional styling */\n\tclassName?: string;\n\t/** HTML element or React component to render the element as */\n\tas?: ElementType;\n\t/** Children components (usually RadioButton.Button instances) */\n\tchildren?: ReactNode;\n\t/** Disables the radio button */\n\tdisabled?: boolean;\n}\n\n/** Props for the RadioButtonGroup component */\nexport interface RadioButtonGroupProps extends RadioButtonCommonProps {\n\t/** Name used for form submission */\n\tname?: string;\n\t/** Style of the radio button group: 'simple' or 'tile' */\n\tstyle?: 'simple' | 'tile';\n\t/** Size of the radio buttons: 'sm' or 'md' */\n\tsize?: 'sm' | 'md';\n\t/** Controlled value of the group */\n\tvalue?: string | string[];\n\t/** Default value if the group is uncontrolled */\n\tdefaultValue?: string | string[];\n\t/** Attribute to compare selected values, typically 'id' */\n\tby?: string;\n\t/** Handler invoked on value change */\n\tonChange?: ( value: string | string[] ) => void;\n\t/** Disables all radio buttons in the group */\n\tdisableGroup?: boolean;\n\t/** Arranges the radio buttons vertically */\n\tvertical?: boolean;\n\t/** Number of columns for arranging the buttons */\n\tcolumns?: number;\n\t/** Enables multi-selection mode */\n\tmultiSelection?: boolean;\n\t/** Gap between radio buttons */\n\tgapClassName?: string;\n}\n\n/** Props for an individual RadioButton */\nexport interface RadioButtonProps extends RadioButtonCommonProps {\n\t/** Unique identifier for the radio button */\n\tid?: string;\n\t/** Label content for the radio button */\n\tlabel?: { heading: string; description?: string };\n\t/** Value of the radio button */\n\tvalue: string;\n\t/** Disables the radio button */\n\tdisabled?: boolean;\n\t/** Custom icon to display */\n\ticon?: ReactNode;\n\t/** Aligns icon inline with the label */\n\tinlineIcon?: boolean;\n\t/** Hides the selection indicator */\n\thideSelection?: boolean;\n\t/** Reverses the position of icon and label */\n\treversePosition?: boolean;\n\t/** Adds a border around the button */\n\tborderOn?: boolean;\n\t/** Adds a border when the button is active */\n\tborderOnActive?: boolean;\n\t/** Badge element to display */\n\tbadgeItem?: ReactNode;\n\t/** Uses a switch for selection instead of radio input */\n\tuseSwitch?: boolean;\n\t/** Info object with heading and description */\n\tinfo?: { heading: string; description?: string };\n\t/** Ensures the button has minimum width */\n\tminWidth?: boolean;\n\t/** Custom classes for the button wrapper */\n\tbuttonWrapperClasses?: string;\n\t/** Checked state of the radio button */\n\tchecked?: boolean;\n}\n\nexport const RadioButtonGroup = ( {\n\tchildren,\n\tname,\n\tstyle = 'simple',\n\tsize = 'md',\n\tvalue,\n\tdefaultValue,\n\tby = 'id',\n\tas: AsElement = 'div',\n\tonChange,\n\tclassName,\n\tdisableGroup = false,\n\tvertical = false,\n\tcolumns = 4,\n\tmultiSelection = false,\n\tgapClassName = 'gap-2',\n}: RadioButtonGroupProps ) => {\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst nameAttr = useMemo(\n\t\t() => name || `radio-button-group-${ nanoid() }`,\n\t\t[ name ]\n\t);\n\tlet initialSelectedValue;\n\tif ( isControlled ) {\n\t\tinitialSelectedValue = value;\n\t} else if ( multiSelection ) {\n\t\tinitialSelectedValue = defaultValue ?? [];\n\t} else {\n\t\tinitialSelectedValue = defaultValue;\n\t}\n\n\tconst [ selectedValue, setSelectedValue ] = useState( initialSelectedValue );\n\n\tconst handleChange = useCallback(\n\t\t( newValue: string | string[] ) => {\n\t\t\tif ( multiSelection ) {\n\t\t\t\t// Handles multi-selection logic\n\t\t\t\tsetSelectedValue( ( prevValue ) => {\n\t\t\t\t\tconst isAlreadySelected =\n\t\t\t\t\t\tArray.isArray( prevValue ) &&\n\t\t\t\t\t\ttypeof newValue === 'string' &&\n\t\t\t\t\t\tprevValue.includes( newValue );\n\t\t\t\t\tlet updatedValue: string[];\n\t\t\t\t\tif ( isAlreadySelected ) {\n\t\t\t\t\t\tupdatedValue = ( prevValue as string[] ).filter(\n\t\t\t\t\t\t\t( val ) => val !== newValue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdatedValue = [\n\t\t\t\t\t\t\t...( Array.isArray( prevValue ) ? prevValue : [] ),\n\t\t\t\t\t\t\t...( typeof newValue === 'string' ? [ newValue ] : [] ),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof onChange === 'function' ) {\n\t\t\t\t\t\tonChange( updatedValue );\n\t\t\t\t\t}\n\t\t\t\t\treturn updatedValue;\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\t// Handles single selection logic\n\t\t\t\tif ( ! isControlled ) {\n\t\t\t\t\tsetSelectedValue( newValue );\n\t\t\t\t}\n\t\t\t\tif ( typeof onChange !== 'function' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonChange( newValue );\n\t\t\t}\n\t\t},\n\t\t[ onChange ]\n\t);\n\tclassName = cn(\n\t\t`grid grid-cols-4`,\n\t\tcolumnClasses[ columns as keyof typeof columnClasses ],\n\t\tgapClassName,\n\t\tstyle === 'tile' && 'gap-0',\n\t\tvertical && 'grid-cols-1',\n\t\tclassName\n\t);\n\n\tconst groupClassName = cn(\n\t\tstyle === 'tile'\n\t\t\t? 'border border-border-subtle border-solid rounded-md shadow-sm'\n\t\t\t: 'gap-6',\n\t\tclassName\n\t);\n\n\tconst renderRadioButtonContext = () => (\n\t\t<RadioButtonContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tname: nameAttr,\n\t\t\t\tvalue: isControlled ? value : selectedValue,\n\t\t\t\tby,\n\t\t\t\tonChange: handleChange,\n\t\t\t\tisControlled,\n\t\t\t\tdisableAll: disableGroup,\n\t\t\t\tstyle,\n\t\t\t\tcolumns,\n\t\t\t\tmultiSelection,\n\t\t\t\tsize,\n\t\t\t} }\n\t\t>\n\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn child;\n\t\t\t} ) }\n\t\t</RadioButtonContext.Provider>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ style === 'tile' ? (\n\t\t\t\t<div className={ groupClassName }>\n\t\t\t\t\t{ renderRadioButtonContext() }\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<AsElement { ...( AsElement === Fragment ? {} : { className } ) }>\n\t\t\t\t\t{ renderRadioButtonContext() }\n\t\t\t\t</AsElement>\n\t\t\t) }\n\t\t</>\n\t);\n};\nRadioButtonGroup.displayName = 'RadioButton.Group';\n\nexport const RadioButtonComponent = (\n\t{\n\t\tid,\n\t\tlabel,\n\t\tvalue,\n\t\tchildren,\n\t\tdisabled,\n\t\ticon = null,\n\t\tinlineIcon = false,\n\t\thideSelection = false,\n\t\treversePosition = false,\n\t\tborderOn = false,\n\t\tborderOnActive = true,\n\t\tbadgeItem = null,\n\t\tuseSwitch = false,\n\t\tinfo = undefined,\n\t\tminWidth = true,\n\t\t...props\n\t}: RadioButtonProps,\n\tref: React.ForwardedRef<HTMLInputElement>\n) => {\n\tconst { buttonWrapperClasses, ...restProps } = props;\n\tconst providerValue = useRadioButton();\n\tconst {\n\t\tname,\n\t\tvalue: selectedValue,\n\t\tby,\n\t\tonChange,\n\t\tdisableAll,\n\t\tchecked,\n\t\tmultiSelection,\n\t\tsize = 'md', // Default size to 'md' if not provided\n\t} = providerValue as {\n\t\tname: string;\n\t\tvalue: string | string[];\n\t\tby: string;\n\t\tonChange: ( newValue: string | string[], newChecked?: boolean ) => void;\n\t\tdisableAll: boolean;\n\t\tchecked?: boolean;\n\t\tmultiSelection: boolean;\n\t\tsize: 'sm' | 'md';\n\t};\n\n\tconst color = 'primary';\n\tconst radioButtonId = useMemo( () => id || `radio-button-${ nanoid() }`, [ id ] ),\n\t\tisDisabled = useMemo(\n\t\t\t() => disableAll || disabled,\n\t\t\t[ disableAll, disabled ]\n\t\t);\n\tconst checkedValue = useMemo( () => {\n\t\tif ( multiSelection ) {\n\t\t\treturn (\n\t\t\t\tArray.isArray( selectedValue ) && selectedValue.includes( value )\n\t\t\t);\n\t\t}\n\t\tif ( typeof checked !== 'undefined' ) {\n\t\t\treturn checked;\n\t\t}\n\n\t\tif ( typeof selectedValue !== typeof value ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( typeof selectedValue === 'string' ) {\n\t\t\treturn selectedValue === value;\n\t\t}\n\n\t\tif ( Array.isArray( selectedValue ) ) {\n\t\t\treturn selectedValue.includes( value );\n\t\t}\n\n\t\treturn (\n\t\t\t( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t( value as unknown as Record<string, unknown> )[ by ]\n\t\t);\n\t}, [ selectedValue, value, checked ] );\n\n\tconst renderLabel = useCallback( () => {\n\t\tif ( isValidElement( label ) ) {\n\t\t\treturn label;\n\t\t}\n\n\t\tif ( ! label?.heading ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t! inlineIcon && {\n\t\t\t\t\t\t'space-y-3': size === 'sm',\n\t\t\t\t\t\t'space-y-4': size === 'md',\n\t\t\t\t\t},\n\t\t\t\t\treversePosition && ( useSwitch ? 'ml-10' : 'ml-4' ),\n\t\t\t\t\tinlineIcon && 'flex gap-2',\n\t\t\t\t\tinlineIcon && ! label.description && 'items-center'\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ icon && <>{ icon }</> }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t! ( icon && useSwitch ) || ( icon && badgeItem )\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t'space-y-0.5': size === 'sm',\n\t\t\t\t\t\t\t\t'space-y-1': size === 'md',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: 'space-y-0.5'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t'text-text-primary font-medium m-0',\n\t\t\t\t\t\t\ttextSizeClassNames[\n\t\t\t\t\t\t\t\tsize as keyof typeof textSizeClassNames\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdisabled && 'text-text-disabled cursor-not-allowed'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label.heading }\n\t\t\t\t\t</p>\n\t\t\t\t\t{ label.description && (\n\t\t\t\t\t\t<p className=\"text-text-tertiary text-sm font-normal leading-5 m-0\">\n\t\t\t\t\t\t\t{ label.description }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [ label ] );\n\n\tif ( providerValue.style === 'tile' ) {\n\t\treturn (\n\t\t\t<ButtonGroupItem\n\t\t\t\tid={ id }\n\t\t\t\tlabel={ label }\n\t\t\t\tvalue={ value }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tsize={ size }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</ButtonGroupItem>\n\t\t);\n\t}\n\n\tconst handleLabelClick = () => {\n\t\tif ( ! isDisabled ) {\n\t\t\tif ( multiSelection ) {\n\t\t\t\t// In multi-selection, toggle each individual selection\n\t\t\t\tif ( useSwitch ) {\n\t\t\t\t\tonChange( value, ! checkedValue );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// In single selection, toggle on and off\n\t\t\t\tonChange( value ); // If it's selected, deselect it; otherwise, select it\n\t\t\t}\n\t\t}\n\t};\n\n\tconst paddingClasses = {\n\t\t'pl-3.5 pr-2.5 py-2.5': size === 'sm' && ! ( icon && useSwitch ),\n\t\t'p-3': size === 'sm' && ( ( icon && useSwitch ) || ( icon && badgeItem ) ),\n\t\t'pl-4 pr-3 py-3': size === 'md' && ! ( icon && useSwitch ),\n\t\t'p-4': size === 'md' && ( ( icon && useSwitch ) || ( icon && badgeItem ) ),\n\t};\n\n\treturn (\n\t\t<label\n\t\t\tclassName={ cn(\n\t\t\t\t'inline-flex items-center relative cursor-pointer transition-all duration-300',\n\t\t\t\t!! label && 'items-start justify-between',\n\t\t\t\tminWidth && 'min-w-[180px]',\n\t\t\t\tborderOn &&\n\t\t\t\t\t'outline outline-field-border outline-1 rounded-md shadow-sm hover:outline-border-interactive',\n\t\t\t\tborderOnActive &&\n\t\t\t\t\tborderOn &&\n\t\t\t\t\tcheckedValue &&\n\t\t\t\t\t'outline-border-interactive',\n\t\t\t\tpaddingClasses,\n\t\t\t\t'pr-12',\n\t\t\t\tisDisabled && 'cursor-not-allowed opacity-40',\n\t\t\t\tbuttonWrapperClasses\n\t\t\t) }\n\t\t\thtmlFor={ radioButtonId }\n\t\t\tonClick={ handleLabelClick } // Toggle switch when label is clicked\n\t\t>\n\t\t\t{ !! label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'cursor-pointer',\n\t\t\t\t\t\tisDisabled && 'cursor-not-allowed'\n\t\t\t\t\t) }\n\t\t\t\t\thtmlFor={ radioButtonId }\n\t\t\t\t>\n\t\t\t\t\t{ renderLabel() }\n\t\t\t\t</label>\n\t\t\t) }\n\t\t\t{ !! info && (\n\t\t\t\t<div className=\"absolute mr-0.5 bottom-1.5 right-3\">\n\t\t\t\t\t<Tooltip title={ info?.heading } content={ info?.description }>\n\t\t\t\t\t\t<Info\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'text-text-primary',\n\t\t\t\t\t\t\t\tsizeClassNames[ size ]?.info\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<label\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'absolute mr-0.5 right-3 flex items-center cursor-pointer rounded-full gap-2',\n\t\t\t\t\treversePosition && 'left-0',\n\t\t\t\t\tisDisabled && 'cursor-not-allowed',\n\t\t\t\t\tinlineIcon && 'mr-3'\n\t\t\t\t) }\n\t\t\t\tonClick={ handleLabelClick }\n\t\t\t>\n\t\t\t\t{ !! badgeItem && badgeItem }\n\t\t\t\t{ ! hideSelection &&\n\t\t\t\t\t( useSwitch ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tdefaultValue={ false }\n\t\t\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\t\tif ( ! multiSelection ) {\n\t\t\t\t\t\t\t\t\t\t// Toggle the switch on or off\n\t\t\t\t\t\t\t\t\t\tonChange( value );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// In multi-selection, toggle the current state\n\t\t\t\t\t\t\t\t\t\tonChange( value, ! checkedValue );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t\t\t\taria-label={ label?.heading ?? 'Switch' }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"relative p-0.5\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\tid={ radioButtonId }\n\t\t\t\t\t\t\t\ttype={ multiSelection ? 'checkbox' : 'radio' }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\"peer flex relative cursor-pointer appearance-none transition-all m-0 before:content-[''] checked:before:content-[''] checked:before:hidden before:hidden !border-1.5 border-solid\",\n\t\t\t\t\t\t\t\t\t! multiSelection && 'rounded-full',\n\t\t\t\t\t\t\t\t\tcolorClassNames[ color ].checkbox,\n\t\t\t\t\t\t\t\t\tsizeClassNames[ size ].checkbox,\n\t\t\t\t\t\t\t\t\tisDisabled && disabledClassNames.checkbox\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tname={ name }\n\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\tonChange={ ( e ) => onChange( e.target.value ) }\n\t\t\t\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'inline-flex items-center absolute top-2/4 not-rtl:left-2/4 rtl:right-2/4 -translate-y-2/4 -translate-x-2/4 text-white opacity-0 transition-opacity peer-checked:opacity-100',\n\t\t\t\t\t\t\t\t\tcolorClassNames[ color ].icon,\n\t\t\t\t\t\t\t\t\tisDisabled && disabledClassNames.icon\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ multiSelection ? (\n\t\t\t\t\t\t\t\t\t<Check\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tsize === 'sm' ? 'size-3' : 'size-4'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t'rounded-full bg-current',\n\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[ size ]?.icon\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) ) }\n\t\t\t</label>\n\t\t</label>\n\t);\n};\nexport const RadioButton = forwardRef( RadioButtonComponent );\nRadioButton.displayName = 'RadioButton.Button';\n\nexport interface ButtonGroupItemProps {\n\tid?: string;\n\tchildren: ReactNode;\n\tvalue: string;\n\tdisabled?: boolean;\n\tsize?: 'sm' | 'md';\n\t[key: string]: unknown;\n}\n\nexport const ButtonGroupItem = ( {\n\tid,\n\tchildren,\n\tvalue,\n\tdisabled,\n\tsize = 'md',\n\t...props\n}: ButtonGroupItemProps ) => {\n\tconst providerValue = useRadioButton();\n\n\tconst {\n\t\tname,\n\t\tvalue: selectedValue,\n\t\tby,\n\t\tonChange,\n\t\tdisableAll,\n\t\tchecked,\n\t} = providerValue || {};\n\n\tconst radioButtonId = useMemo( () => id || `radio-button-${ nanoid() }`, [ id ] );\n\tconst isDisabled = useMemo(\n\t\t() => disableAll || disabled,\n\t\t[ disableAll, disabled ]\n\t);\n\n\tconst checkedValue = useMemo( () => {\n\t\tif ( typeof checked !== 'undefined' ) {\n\t\t\treturn checked;\n\t\t}\n\n\t\tif ( typeof selectedValue !== typeof value ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( typeof selectedValue === 'string' ) {\n\t\t\treturn selectedValue === value;\n\t\t}\n\n\t\tif ( Array.isArray( selectedValue ) ) {\n\t\t\treturn selectedValue.includes( value );\n\t\t}\n\n\t\treturn selectedValue && by\n\t\t\t? ( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( value as unknown as Record<string, unknown> )[ by ]\n\t\t\t: false;\n\t}, [ selectedValue, value, checked, by ] );\n\n\tconst handleClick = () => {\n\t\tif ( onChange ) {\n\t\t\tonChange( value );\n\t\t}\n\t};\n\n\tconst disabledClasses = isDisabled\n\t\t? 'text-text-disabled cursor-not-allowed'\n\t\t: '';\n\tconst buttonClassName = cn(\n\t\tbaseClasses,\n\t\thoverClasses,\n\t\tfocusClasses,\n\t\tdisabledClasses,\n\t\tsizes[ size ],\n\t\tborderClasses\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tid={ radioButtonId }\n\t\t\t\taria-label=\"Radio Button\"\n\t\t\t\tclassName={ cn(\n\t\t\t\t\tbuttonClassName,\n\t\t\t\t\t'first:rounded-tl first:rounded-bl first:border-0 first:border-r first:border-border-subtle last:rounded-tr last:rounded-br last:border-0',\n\t\t\t\t\tcheckedValue && 'bg-button-disabled'\n\t\t\t\t) }\n\t\t\t\tonClick={ handleClick }\n\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tname={ name }\n\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\tonChange={ ( e ) => onChange?.( e.target.value ) }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</button>\n\t\t</>\n\t);\n};\n\nexport default Object.assign( RadioButton, {\n\tGroup: RadioButtonGroup,\n\tButton: RadioButton,\n} );\n"],"names":["RadioButtonContext","createContext","useRadioButton","useContext","RadioButtonGroup","children","name","style","size","value","defaultValue","by","AsElement","onChange","className","disableGroup","vertical","columns","multiSelection","gapClassName","isControlled","useMemo","nameAttr","nanoid","initialSelectedValue","selectedValue","setSelectedValue","useState","handleChange","useCallback","newValue","prevValue","isAlreadySelected","updatedValue","val","cn","columnClasses","groupClassName","renderRadioButtonContext","jsx","React","child","isValidElement","Fragment","RadioButtonComponent","id","label","disabled","icon","inlineIcon","hideSelection","reversePosition","borderOn","borderOnActive","badgeItem","useSwitch","info","minWidth","props","ref","buttonWrapperClasses","restProps","providerValue","disableAll","checked","color","radioButtonId","isDisabled","checkedValue","renderLabel","jsxs","textSizeClassNames","ButtonGroupItem","handleLabelClick","paddingClasses","Tooltip","Info","sizeClassNames","Switch","colorClassNames","disabledClassNames","e","Check","RadioButton","forwardRef","handleClick","disabledClasses","buttonClassName","baseClasses","hoverClasses","focusClasses","sizes","borderClasses","radioButton"],"mappings":"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"}