{"version":3,"file":"radio-button.es.js","sources":["../../../src/components/radio-button/radio-button.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tforwardRef,\n\tisValidElement,\n\tcreateContext,\n\tuseContext,\n\tFragment,\n\ttype ReactNode,\n\ttype ElementType,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport { Check, Info } from 'lucide-react';\n\nimport { cn, columnClasses } from '@/utilities/functions';\nimport Switch from '../switch';\nimport {\n\tcolorClassNames,\n\tdisabledClassNames,\n\tsizeClassNames,\n\ttextSizeClassNames,\n\tsizes,\n\tborderClasses,\n\tbaseClasses,\n\thoverClasses,\n\tfocusClasses,\n} from './styles';\nimport Tooltip from '../tooltip';\n\nconst RadioButtonContext = createContext<\n\tPartial<{\n\t\tname: string;\n\t\tvalue: string | string[];\n\t\tby: string;\n\t\tonChange:( value: string | string[] ) => void;\n\t\tisControlled: boolean;\n\t\tdisableAll: boolean;\n\t\tstyle: 'simple' | 'tile';\n\t\tcolumns: number;\n\t\tmultiSelection: boolean;\n\t\tsize: 'sm' | 'md';\n\t\tchecked?: boolean;\n\t\t\t}>\n\t\t\t>( {} );\nconst useRadioButton = () => useContext( RadioButtonContext );\n\n/** Common props used across the radio button components */\nexport interface RadioButtonCommonProps {\n\t/** Custom class names for additional styling */\n\tclassName?: string;\n\t/** HTML element or React component to render the element as */\n\tas?: ElementType;\n\t/** Children components (usually RadioButton.Button instances) */\n\tchildren?: ReactNode;\n\t/** Disables the radio button */\n\tdisabled?: boolean;\n}\n\n/** Props for the RadioButtonGroup component */\nexport interface RadioButtonGroupProps extends RadioButtonCommonProps {\n\t/** Name used for form submission */\n\tname?: string;\n\t/** Style of the radio button group: 'simple' or 'tile' */\n\tstyle?: 'simple' | 'tile';\n\t/** Size of the radio buttons: 'sm' or 'md' */\n\tsize?: 'sm' | 'md';\n\t/** Controlled value of the group */\n\tvalue?: string | string[];\n\t/** Default value if the group is uncontrolled */\n\tdefaultValue?: string | string[];\n\t/** Attribute to compare selected values, typically 'id' */\n\tby?: string;\n\t/** Handler invoked on value change */\n\tonChange?: ( value: string | string[] ) => void;\n\t/** Disables all radio buttons in the group */\n\tdisableGroup?: boolean;\n\t/** Arranges the radio buttons vertically */\n\tvertical?: boolean;\n\t/** Number of columns for arranging the buttons */\n\tcolumns?: number;\n\t/** Enables multi-selection mode */\n\tmultiSelection?: boolean;\n\t/** Gap between radio buttons */\n\tgapClassName?: string;\n}\n\n/** Props for an individual RadioButton */\nexport interface RadioButtonProps extends RadioButtonCommonProps {\n\t/** Unique identifier for the radio button */\n\tid?: string;\n\t/** Label content for the radio button */\n\tlabel?: { heading: string; description?: string };\n\t/** Value of the radio button */\n\tvalue: string;\n\t/** Disables the radio button */\n\tdisabled?: boolean;\n\t/** Custom icon to display */\n\ticon?: ReactNode;\n\t/** Aligns icon inline with the label */\n\tinlineIcon?: boolean;\n\t/** Hides the selection indicator */\n\thideSelection?: boolean;\n\t/** Reverses the position of icon and label */\n\treversePosition?: boolean;\n\t/** Adds a border around the button */\n\tborderOn?: boolean;\n\t/** Adds a border when the button is active */\n\tborderOnActive?: boolean;\n\t/** Badge element to display */\n\tbadgeItem?: ReactNode;\n\t/** Uses a switch for selection instead of radio input */\n\tuseSwitch?: boolean;\n\t/** Info object with heading and description */\n\tinfo?: { heading: string; description?: string };\n\t/** Ensures the button has minimum width */\n\tminWidth?: boolean;\n\t/** Custom classes for the button wrapper */\n\tbuttonWrapperClasses?: string;\n\t/** Checked state of the radio button */\n\tchecked?: boolean;\n}\n\nexport const RadioButtonGroup = ( {\n\tchildren,\n\tname,\n\tstyle = 'simple',\n\tsize = 'md',\n\tvalue,\n\tdefaultValue,\n\tby = 'id',\n\tas: AsElement = 'div',\n\tonChange,\n\tclassName,\n\tdisableGroup = false,\n\tvertical = false,\n\tcolumns = 4,\n\tmultiSelection = false,\n\tgapClassName = 'gap-2',\n}: RadioButtonGroupProps ) => {\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst nameAttr = useMemo(\n\t\t() => name || `radio-button-group-${ nanoid() }`,\n\t\t[ name ]\n\t);\n\tlet initialSelectedValue;\n\tif ( isControlled ) {\n\t\tinitialSelectedValue = value;\n\t} else if ( multiSelection ) {\n\t\tinitialSelectedValue = defaultValue ?? [];\n\t} else {\n\t\tinitialSelectedValue = defaultValue;\n\t}\n\n\tconst [ selectedValue, setSelectedValue ] = useState( initialSelectedValue );\n\n\tconst handleChange = useCallback(\n\t\t( newValue: string | string[] ) => {\n\t\t\tif ( multiSelection ) {\n\t\t\t\t// Handles multi-selection logic\n\t\t\t\tsetSelectedValue( ( prevValue ) => {\n\t\t\t\t\tconst isAlreadySelected =\n\t\t\t\t\t\tArray.isArray( prevValue ) &&\n\t\t\t\t\t\ttypeof newValue === 'string' &&\n\t\t\t\t\t\tprevValue.includes( newValue );\n\t\t\t\t\tlet updatedValue: string[];\n\t\t\t\t\tif ( isAlreadySelected ) {\n\t\t\t\t\t\tupdatedValue = ( prevValue as string[] ).filter(\n\t\t\t\t\t\t\t( val ) => val !== newValue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdatedValue = [\n\t\t\t\t\t\t\t...( Array.isArray( prevValue ) ? prevValue : [] ),\n\t\t\t\t\t\t\t...( typeof newValue === 'string' ? [ newValue ] : [] ),\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof onChange === 'function' ) {\n\t\t\t\t\t\tonChange( updatedValue );\n\t\t\t\t\t}\n\t\t\t\t\treturn updatedValue;\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\t// Handles single selection logic\n\t\t\t\tif ( ! isControlled ) {\n\t\t\t\t\tsetSelectedValue( newValue );\n\t\t\t\t}\n\t\t\t\tif ( typeof onChange !== 'function' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonChange( newValue );\n\t\t\t}\n\t\t},\n\t\t[ onChange ]\n\t);\n\tclassName = cn(\n\t\t`grid grid-cols-4`,\n\t\tcolumnClasses[ columns as keyof typeof columnClasses ],\n\t\tgapClassName,\n\t\tstyle === 'tile' && 'gap-0',\n\t\tvertical && 'grid-cols-1',\n\t\tclassName\n\t);\n\n\tconst groupClassName = cn(\n\t\tstyle === 'tile'\n\t\t\t? 'border border-border-subtle border-solid rounded-md shadow-sm'\n\t\t\t: 'gap-6',\n\t\tclassName\n\t);\n\n\tconst renderRadioButtonContext = () => (\n\t\t<RadioButtonContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tname: nameAttr,\n\t\t\t\tvalue: isControlled ? value : selectedValue,\n\t\t\t\tby,\n\t\t\t\tonChange: handleChange,\n\t\t\t\tisControlled,\n\t\t\t\tdisableAll: disableGroup,\n\t\t\t\tstyle,\n\t\t\t\tcolumns,\n\t\t\t\tmultiSelection,\n\t\t\t\tsize,\n\t\t\t} }\n\t\t>\n\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\treturn child;\n\t\t\t} ) }\n\t\t</RadioButtonContext.Provider>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ style === 'tile' ? (\n\t\t\t\t<div className={ groupClassName }>\n\t\t\t\t\t{ renderRadioButtonContext() }\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<AsElement { ...( AsElement === Fragment ? {} : { className } ) }>\n\t\t\t\t\t{ renderRadioButtonContext() }\n\t\t\t\t</AsElement>\n\t\t\t) }\n\t\t</>\n\t);\n};\nRadioButtonGroup.displayName = 'RadioButton.Group';\n\nexport const RadioButtonComponent = (\n\t{\n\t\tid,\n\t\tlabel,\n\t\tvalue,\n\t\tchildren,\n\t\tdisabled,\n\t\ticon = null,\n\t\tinlineIcon = false,\n\t\thideSelection = false,\n\t\treversePosition = false,\n\t\tborderOn = false,\n\t\tborderOnActive = true,\n\t\tbadgeItem = null,\n\t\tuseSwitch = false,\n\t\tinfo = undefined,\n\t\tminWidth = true,\n\t\t...props\n\t}: RadioButtonProps,\n\tref: React.ForwardedRef<HTMLInputElement>\n) => {\n\tconst { buttonWrapperClasses, ...restProps } = props;\n\tconst providerValue = useRadioButton();\n\tconst {\n\t\tname,\n\t\tvalue: selectedValue,\n\t\tby,\n\t\tonChange,\n\t\tdisableAll,\n\t\tchecked,\n\t\tmultiSelection,\n\t\tsize = 'md', // Default size to 'md' if not provided\n\t} = providerValue as {\n\t\tname: string;\n\t\tvalue: string | string[];\n\t\tby: string;\n\t\tonChange: ( newValue: string | string[], newChecked?: boolean ) => void;\n\t\tdisableAll: boolean;\n\t\tchecked?: boolean;\n\t\tmultiSelection: boolean;\n\t\tsize: 'sm' | 'md';\n\t};\n\n\tconst color = 'primary';\n\tconst radioButtonId = useMemo( () => id || `radio-button-${ nanoid() }`, [ id ] ),\n\t\tisDisabled = useMemo(\n\t\t\t() => disableAll || disabled,\n\t\t\t[ disableAll, disabled ]\n\t\t);\n\tconst checkedValue = useMemo( () => {\n\t\tif ( multiSelection ) {\n\t\t\treturn (\n\t\t\t\tArray.isArray( selectedValue ) && selectedValue.includes( value )\n\t\t\t);\n\t\t}\n\t\tif ( typeof checked !== 'undefined' ) {\n\t\t\treturn checked;\n\t\t}\n\n\t\tif ( typeof selectedValue !== typeof value ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( typeof selectedValue === 'string' ) {\n\t\t\treturn selectedValue === value;\n\t\t}\n\n\t\tif ( Array.isArray( selectedValue ) ) {\n\t\t\treturn selectedValue.includes( value );\n\t\t}\n\n\t\treturn (\n\t\t\t( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t( value as unknown as Record<string, unknown> )[ by ]\n\t\t);\n\t}, [ selectedValue, value, checked ] );\n\n\tconst renderLabel = useCallback( () => {\n\t\tif ( isValidElement( label ) ) {\n\t\t\treturn label;\n\t\t}\n\n\t\tif ( ! label?.heading ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t! inlineIcon && {\n\t\t\t\t\t\t'space-y-3': size === 'sm',\n\t\t\t\t\t\t'space-y-4': size === 'md',\n\t\t\t\t\t},\n\t\t\t\t\treversePosition && ( useSwitch ? 'ml-10' : 'ml-4' ),\n\t\t\t\t\tinlineIcon && 'flex gap-2',\n\t\t\t\t\tinlineIcon && ! label.description && 'items-center'\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ icon && <>{ icon }</> }\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t! ( icon && useSwitch ) || ( icon && badgeItem )\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t'space-y-0.5': size === 'sm',\n\t\t\t\t\t\t\t\t'space-y-1': size === 'md',\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: 'space-y-0.5'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t<p\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t'text-text-primary font-medium m-0',\n\t\t\t\t\t\t\ttextSizeClassNames[\n\t\t\t\t\t\t\t\tsize as keyof typeof textSizeClassNames\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\tdisabled && 'text-text-disabled cursor-not-allowed'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label.heading }\n\t\t\t\t\t</p>\n\t\t\t\t\t{ label.description && (\n\t\t\t\t\t\t<p className=\"text-text-tertiary text-sm font-normal leading-5 m-0\">\n\t\t\t\t\t\t\t{ label.description }\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [ label ] );\n\n\tif ( providerValue.style === 'tile' ) {\n\t\treturn (\n\t\t\t<ButtonGroupItem\n\t\t\t\tid={ id }\n\t\t\t\tlabel={ label }\n\t\t\t\tvalue={ value }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tsize={ size }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</ButtonGroupItem>\n\t\t);\n\t}\n\n\tconst handleLabelClick = () => {\n\t\tif ( ! isDisabled ) {\n\t\t\tif ( multiSelection ) {\n\t\t\t\t// In multi-selection, toggle each individual selection\n\t\t\t\tif ( useSwitch ) {\n\t\t\t\t\tonChange( value, ! checkedValue );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// In single selection, toggle on and off\n\t\t\t\tonChange( value ); // If it's selected, deselect it; otherwise, select it\n\t\t\t}\n\t\t}\n\t};\n\n\tconst paddingClasses = {\n\t\t'pl-3.5 pr-2.5 py-2.5': size === 'sm' && ! ( icon && useSwitch ),\n\t\t'p-3': size === 'sm' && ( ( icon && useSwitch ) || ( icon && badgeItem ) ),\n\t\t'pl-4 pr-3 py-3': size === 'md' && ! ( icon && useSwitch ),\n\t\t'p-4': size === 'md' && ( ( icon && useSwitch ) || ( icon && badgeItem ) ),\n\t};\n\n\treturn (\n\t\t<label\n\t\t\tclassName={ cn(\n\t\t\t\t'inline-flex items-center relative cursor-pointer transition-all duration-300',\n\t\t\t\t!! label && 'items-start justify-between',\n\t\t\t\tminWidth && 'min-w-[180px]',\n\t\t\t\tborderOn &&\n\t\t\t\t\t'outline outline-field-border outline-1 rounded-md shadow-sm hover:outline-border-interactive',\n\t\t\t\tborderOnActive &&\n\t\t\t\t\tborderOn &&\n\t\t\t\t\tcheckedValue &&\n\t\t\t\t\t'outline-border-interactive',\n\t\t\t\tpaddingClasses,\n\t\t\t\tisDisabled && 'cursor-not-allowed opacity-40',\n\t\t\t\tbuttonWrapperClasses\n\t\t\t) }\n\t\t\thtmlFor={ radioButtonId }\n\t\t\tonClick={ handleLabelClick } // Toggle switch when label is clicked\n\t\t>\n\t\t\t{ !! label && (\n\t\t\t\t<label\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'cursor-pointer',\n\t\t\t\t\t\tisDisabled && 'cursor-not-allowed'\n\t\t\t\t\t) }\n\t\t\t\t\thtmlFor={ radioButtonId }\n\t\t\t\t>\n\t\t\t\t\t{ renderLabel() }\n\t\t\t\t</label>\n\t\t\t) }\n\t\t\t{ !! info && (\n\t\t\t\t<div className=\"absolute mr-0.5 bottom-1.5 right-3\">\n\t\t\t\t\t<Tooltip title={ info?.heading } content={ info?.description }>\n\t\t\t\t\t\t<Info\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'text-text-primary',\n\t\t\t\t\t\t\t\tsizeClassNames[ size ]?.info\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<label\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'absolute mr-0.5 right-3 flex items-center cursor-pointer rounded-full gap-2',\n\t\t\t\t\treversePosition && 'left-0',\n\t\t\t\t\tisDisabled && 'cursor-not-allowed',\n\t\t\t\t\tinlineIcon && 'mr-3',\n\t\t\t\t) }\n\t\t\t\tonClick={ handleLabelClick }\n\t\t\t>\n\t\t\t\t{ !! badgeItem && badgeItem }\n\t\t\t\t{ ! hideSelection &&\n\t\t\t\t\t( useSwitch ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\t\tdefaultValue={ false }\n\t\t\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\t\t\tonChange={ () => {\n\t\t\t\t\t\t\t\t\tif ( ! multiSelection ) {\n\t\t\t\t\t\t\t\t\t\t// Toggle the switch on or off\n\t\t\t\t\t\t\t\t\t\tonChange( value );\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t// In multi-selection, toggle the current state\n\t\t\t\t\t\t\t\t\t\tonChange( value, ! checkedValue );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t\t\t\taria-label={ label?.heading ?? 'Switch' }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"relative p-0.5\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\tid={ radioButtonId }\n\t\t\t\t\t\t\t\ttype={ multiSelection ? 'checkbox' : 'radio' }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\"peer flex relative cursor-pointer appearance-none transition-all m-0 before:content-[''] checked:before:content-[''] checked:before:hidden before:hidden !border-1.5 border-solid\",\n\t\t\t\t\t\t\t\t\t! multiSelection && 'rounded-full',\n\t\t\t\t\t\t\t\t\tcolorClassNames[ color ].checkbox,\n\t\t\t\t\t\t\t\t\tsizeClassNames[ size ].checkbox,\n\t\t\t\t\t\t\t\t\tisDisabled && disabledClassNames.checkbox\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tname={ name }\n\t\t\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\t\t\tonChange={ ( e ) => onChange( e.target.value ) }\n\t\t\t\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'inline-flex items-center absolute top-2/4 left-2/4 -translate-y-2/4 -translate-x-2/4 text-white opacity-0 transition-opacity peer-checked:opacity-100',\n\t\t\t\t\t\t\t\t\tcolorClassNames[ color ].icon,\n\t\t\t\t\t\t\t\t\tisDisabled && disabledClassNames.icon\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ multiSelection ? (\n\t\t\t\t\t\t\t\t\t<Check\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tsize === 'sm' ? 'size-3' : 'size-4'\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t\t'rounded-full bg-current',\n\t\t\t\t\t\t\t\t\t\t\tsizeClassNames[ size ]?.icon\n\t\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) ) }\n\t\t\t</label>\n\t\t</label>\n\t);\n};\nexport const RadioButton = forwardRef( RadioButtonComponent );\nRadioButton.displayName = 'RadioButton.Button';\n\nexport interface ButtonGroupItemProps {\n\tid?: string;\n\tchildren: ReactNode;\n\tvalue: string;\n\tdisabled?: boolean;\n\tsize?: 'sm' | 'md';\n\t[key: string]: unknown;\n}\n\nexport const ButtonGroupItem = ( {\n\tid,\n\tchildren,\n\tvalue,\n\tdisabled,\n\tsize = 'md',\n\t...props\n}: ButtonGroupItemProps ) => {\n\tconst providerValue = useRadioButton();\n\n\tconst {\n\t\tname,\n\t\tvalue: selectedValue,\n\t\tby,\n\t\tonChange,\n\t\tdisableAll,\n\t\tchecked,\n\t} = providerValue || {};\n\n\tconst radioButtonId = useMemo( () => id || `radio-button-${ nanoid() }`, [ id ] );\n\tconst isDisabled = useMemo(\n\t\t() => disableAll || disabled,\n\t\t[ disableAll, disabled ]\n\t);\n\n\tconst checkedValue = useMemo( () => {\n\t\tif ( typeof checked !== 'undefined' ) {\n\t\t\treturn checked;\n\t\t}\n\n\t\tif ( typeof selectedValue !== typeof value ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( typeof selectedValue === 'string' ) {\n\t\t\treturn selectedValue === value;\n\t\t}\n\n\t\tif ( Array.isArray( selectedValue ) ) {\n\t\t\treturn selectedValue.includes( value );\n\t\t}\n\n\t\treturn selectedValue && by\n\t\t\t? ( selectedValue as Record<string, unknown> )[ by ] ===\n\t\t\t\t\t( value as unknown as Record<string, unknown> )[ by ]\n\t\t\t: false;\n\t}, [ selectedValue, value, checked, by ] );\n\n\tconst handleClick = () => {\n\t\tif ( onChange ) {\n\t\t\tonChange( value );\n\t\t}\n\t};\n\n\tconst disabledClasses = isDisabled\n\t\t? 'text-text-disabled cursor-not-allowed'\n\t\t: '';\n\tconst buttonClassName = cn(\n\t\tbaseClasses,\n\t\thoverClasses,\n\t\tfocusClasses,\n\t\tdisabledClasses,\n\t\tsizes[ size ],\n\t\tborderClasses\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tid={ radioButtonId }\n\t\t\t\taria-label=\"Radio Button\"\n\t\t\t\tclassName={ cn(\n\t\t\t\t\tbuttonClassName,\n\t\t\t\t\t'first:rounded-tl first:rounded-bl first:border-0 first:border-r first:border-border-subtle last:rounded-tr last:rounded-br last:border-0',\n\t\t\t\t\tcheckedValue && 'bg-button-disabled'\n\t\t\t\t) }\n\t\t\t\tonClick={ handleClick }\n\t\t\t\tdisabled={ isDisabled }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tname={ name }\n\t\t\t\t\tchecked={ checkedValue }\n\t\t\t\t\tonChange={ ( e ) => onChange?.( e.target.value ) }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</button>\n\t\t</>\n\t);\n};\n\nexport default Object.assign( RadioButton, {\n\tGroup: RadioButtonGroup,\n\tButton: RadioButton,\n} );\n"],"names":["RadioButtonContext","createContext","useRadioButton","useContext","RadioButtonGroup","children","name","style","size","value","defaultValue","by","AsElement","onChange","className","disableGroup","vertical","columns","multiSelection","gapClassName","isControlled","useMemo","nameAttr","nanoid","initialSelectedValue","selectedValue","setSelectedValue","useState","handleChange","useCallback","newValue","prevValue","isAlreadySelected","updatedValue","val","cn","columnClasses","groupClassName","renderRadioButtonContext","jsx","React","child","isValidElement","Fragment","RadioButtonComponent","id","label","disabled","icon","inlineIcon","hideSelection","reversePosition","borderOn","borderOnActive","badgeItem","useSwitch","info","minWidth","props","ref","buttonWrapperClasses","restProps","providerValue","disableAll","checked","color","radioButtonId","isDisabled","checkedValue","renderLabel","jsxs","textSizeClassNames","ButtonGroupItem","handleLabelClick","Tooltip","Info","sizeClassNames","Switch","colorClassNames","disabledClassNames","e","Check","RadioButton","forwardRef","handleClick","buttonClassName","baseClasses","hoverClasses","focusClasses","sizes","borderClasses","radioButton"],"mappings":"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"}