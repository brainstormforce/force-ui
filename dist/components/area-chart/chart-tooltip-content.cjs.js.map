{"version":3,"file":"chart-tooltip-content.cjs.js","sources":["../../../src/components/area-chart/chart-tooltip-content.tsx"],"sourcesContent":["import { useMemo, forwardRef } from 'react';\nimport { cn } from '@/utilities/functions';\n\ntype IndicatorType = 'dot' | 'line' | 'dashed';\n\ninterface PayloadItem {\n\tcolor?: string;\n\tdataKey?: string;\n\tname?: string;\n\tvalue?: number | string;\n\t[key: string]: string | number | undefined; // Allow additional properties in each payload item\n}\n\ninterface ChartTooltipContentProps {\n\tactive?: boolean;\n\tpayload?: PayloadItem[];\n\tclassName?: string;\n\tindicator?: IndicatorType; // dot, line, dashed\n\thideLabel?: boolean;\n\thideIndicator?: boolean;\n\tlabel?: string;\n\tlabelFormatter?: ( label: string ) => string;\n\tlabelClassName?: string;\n\tformatter?: ( value: number | string ) => string | number;\n\tcolor?: string;\n\tnameKey?: string;\n\tlabelKey?: string;\n}\n\nconst ChartTooltipContent = forwardRef<\n\tHTMLDivElement,\n\tChartTooltipContentProps\n>(\n\t(\n\t\t{\n\t\t\tactive,\n\t\t\tpayload,\n\t\t\tclassName,\n\t\t\tindicator, // dot, line, dashed\n\t\t\thideLabel = false,\n\t\t\thideIndicator = false,\n\t\t\tlabel,\n\t\t\tlabelFormatter,\n\t\t\tlabelClassName,\n\t\t\tformatter,\n\t\t\tcolor,\n\t\t\tnameKey = 'name',\n\t\t\tlabelKey,\n\t\t},\n\t\tref\n\t) => {\n\t\tconst tooltipLabel = useMemo( () => {\n\t\t\tif ( hideLabel || ! payload?.length ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst [ item ] = payload;\n\t\t\tconst value = labelFormatter\n\t\t\t\t? labelFormatter( label || '' )\n\t\t\t\t: item[ labelKey as keyof PayloadItem ] || label;\n\n\t\t\treturn value ? (\n\t\t\t\t<div className={ cn( 'font-medium', labelClassName ) }>{ value }</div>\n\t\t\t) : null;\n\t\t}, [\n\t\t\tlabel,\n\t\t\tlabelFormatter,\n\t\t\tpayload,\n\t\t\thideLabel,\n\t\t\tlabelClassName,\n\t\t\tlabelKey,\n\t\t] );\n\n\t\tif ( ! active || ! payload?.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isSinglePayload = payload.length === 1 && indicator !== 'dot';\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'grid min-w-[8rem] items-start gap-1.5 rounded-lg border bg-tooltip-background-light px-3 py-2 text-xs shadow-xl',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ ! isSinglePayload ? tooltipLabel : null }\n\t\t\t\t<div className=\"grid gap-1.5\">\n\t\t\t\t\t{ payload.map( ( item, index ) => {\n\t\t\t\t\t\tconst indicatorColor = color || item.color || '#000';\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={ item.dataKey || index }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'flex w-full items-stretch gap-2',\n\t\t\t\t\t\t\t\t\tindicator === 'dot' && 'items-center'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ! hideIndicator && (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={ cn( {\n\t\t\t\t\t\t\t\t\t\t\t'size-2.5': indicator === 'dot',\n\t\t\t\t\t\t\t\t\t\t\t'w-1 h-full': indicator === 'line',\n\t\t\t\t\t\t\t\t\t\t\t'w-0 border-[0.5px] border-dashed':\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dashed',\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dot' ||\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'line'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? indicatorColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dashed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? indicatorColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<div className=\"flex-1 flex justify-between items-center gap-1\">\n\t\t\t\t\t\t\t\t\t<span>{ item[ nameKey ] || item.dataKey }</span>\n\t\t\t\t\t\t\t\t\t<span className=\"font-mono font-medium\">\n\t\t\t\t\t\t\t\t\t\t{ formatter\n\t\t\t\t\t\t\t\t\t\t\t? formatter( item.value ?? '' )\n\t\t\t\t\t\t\t\t\t\t\t: ( item.value ?? '' ) }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nChartTooltipContent.displayName = 'ChartTooltipContent';\n\nexport default ChartTooltipContent;\n"],"names":["ChartTooltipContent","forwardRef","active","payload","className","indicator","hideLabel","hideIndicator","label","labelFormatter","labelClassName","formatter","color","nameKey","labelKey","ref","tooltipLabel","useMemo","item","value","cn","isSinglePayload","jsxs","jsx","index","indicatorColor"],"mappings":"kNA6BMA,EAAsBC,EAAA,WAI3B,CACC,CACC,OAAAC,EACA,QAAAC,EACA,UAAAC,EACA,UAAAC,EACA,UAAAC,EAAY,GACZ,cAAAC,EAAgB,GAChB,MAAAC,EACA,eAAAC,EACA,eAAAC,EACA,UAAAC,EACA,MAAAC,EACA,QAAAC,EAAU,OACV,SAAAC,GAEDC,IACI,CACE,MAAAC,EAAeC,EAAAA,QAAS,IAAM,CAC9B,GAAAX,GAAa,CAAEH,GAAS,OACrB,OAAA,KAGF,KAAA,CAAEe,CAAK,EAAIf,EACXgB,EAAQV,EACXA,EAAgBD,GAAS,EAAG,EAC5BU,EAAMJ,CAA8B,GAAKN,EAErC,OAAAW,QACL,MAAI,CAAA,UAAYC,EAAAA,GAAI,cAAeV,CAAe,EAAM,SAAAS,CAAA,CAAO,EAC7D,IAAA,EACF,CACFX,EACAC,EACAN,EACAG,EACAI,EACAI,CAAA,CACC,EAEF,GAAK,CAAEZ,GAAU,CAAEC,GAAS,OACpB,OAAA,KAGR,MAAMkB,EAAkBlB,EAAQ,SAAW,GAAKE,IAAc,MAG7D,OAAAiB,EAAA,KAAC,MAAA,CACA,IAAAP,EACA,UAAYK,EAAA,GACX,kHACAhB,CACD,EAEE,SAAA,CAAEiB,EAAiC,KAAfL,EACtBO,MAAC,OAAI,UAAU,eACZ,WAAQ,IAAK,CAAEL,EAAMM,IAAW,CAC3B,MAAAC,EAAiBb,GAASM,EAAK,OAAS,OAG7C,OAAAI,EAAA,KAAC,MAAA,CAEA,UAAYF,EAAA,GACX,kCACAf,IAAc,OAAS,cACxB,EAEE,SAAA,CAAA,CAAEE,GACHgB,EAAA,IAAC,MAAA,CACA,UAAYH,EAAAA,GAAI,CACf,WAAYf,IAAc,MAC1B,aAAcA,IAAc,OAC5B,mCACCA,IAAc,QAAA,CACd,EACF,MAAQ,CACP,gBACCA,IAAc,OACdA,IAAc,OACXoB,EACA,GACJ,YACCpB,IAAc,SACXoB,EACA,EAAA,CACL,CACD,EAEDH,EAAAA,KAAC,MAAI,CAAA,UAAU,iDACd,SAAA,CAAAC,MAAC,OAAO,CAAA,SAAAL,EAAML,CAAQ,GAAKK,EAAK,QAAS,EACxCK,EAAAA,IAAA,OAAA,CAAK,UAAU,wBACb,SACCZ,EAAAA,EAAWO,EAAK,OAAS,EAAG,EAC1BA,EAAK,OAAS,EACpB,CAAA,CAAA,CACD,CAAA,CAAA,CAAA,EAlCMA,EAAK,SAAWM,CAmCvB,CAAA,CAEA,CACH,CAAA,CAAA,CAAA,CACD,CAAA,CAGH,EAEAxB,EAAoB,YAAc"}