{"version":3,"file":"textarea.es.js","sources":["../../../src/components/textarea/textarea.tsx"],"sourcesContent":["import { useState, useCallback, useMemo, forwardRef } from 'react';\nimport { nanoid } from 'nanoid';\nimport { cn } from '@/utilities/functions';\n\nexport interface TextAreaProps {\n\t/** ID of the textarea element. */\n\tid?: string;\n\t/** Default value when used in uncontrolled mode. */\n\tdefaultValue?: string;\n\t/** Value when used in controlled mode. */\n\tvalue?: string;\n\t/** Size of the textarea (sm, md, lg). */\n\tsize?: 'sm' | 'md' | 'lg';\n\t/** Additional class names for the textarea. */\n\tclassName?: string;\n\t/** Disables the textarea if true. */\n\tdisabled?: boolean;\n\t/** Handles changes in the textarea value. */\n\tonChange?: ( value: string ) => void;\n\t/** Marks the field with an error state. */\n\terror?: boolean;\n\t/** Callback triggered when the field is invalid. */\n\tonError?: () => void;\n}\n\nexport const TextAreaComponent = (\n\t{\n\t\tid,\n\t\tdefaultValue = '',\n\t\tvalue,\n\t\tsize = 'sm', // sm, md, lg\n\t\tclassName = '',\n\t\tdisabled = false,\n\t\tonChange = () => {},\n\t\terror = false,\n\t\tonError = () => {},\n\t\t...props\n\t}: TextAreaProps,\n\tref: React.ForwardedRef<HTMLTextAreaElement>\n) => {\n\tconst inputId = useMemo( () => id || `input-textarea-${ nanoid() }`, [ id ] );\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst [ inputValue, setInputValue ] = useState( defaultValue );\n\n\tconst getValue = useCallback(\n\t\t() => ( isControlled ? value : inputValue ),\n\t\t[ isControlled, value, inputValue ]\n\t);\n\n\tconst handleChange = ( event: React.ChangeEvent<HTMLTextAreaElement> ) => {\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = event.target.value;\n\t\tif ( ! isControlled ) {\n\t\t\tsetInputValue( newValue );\n\t\t}\n\n\t\tif ( typeof onChange !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tonChange( newValue );\n\t};\n\n\tconst baseClasses =\n\t\t'py-2 rounded border border-solid border-border-subtle bg-field-secondary-background font-normal placeholder-text-tertiary text-text-primary focus:outline-none transition ease-in-out duration-200';\n\tconst sizeClasses = {\n\t\tsm: 'px-3 rounded text-xs',\n\t\tmd: 'px-3 rounded-md text-sm',\n\t\tlg: 'px-4 rounded-lg text-base',\n\t};\n\n\tconst hoverClasses = disabled\n\t\t? 'hover:border-border-disabled'\n\t\t: 'hover:border-border-strong';\n\tconst focusClasses =\n\t\t'focus:border-focus-border focus:ring-2 focus:ring-toggle-on focus:ring-offset-2';\n\tconst errorClasses = error\n\t\t? 'focus:border-focus-error-border focus:ring-field-color-error border-focus-error-border'\n\t\t: '';\n\tconst disabledClasses = disabled\n\t\t? 'border-border-disabled bg-field-background-disabled cursor-not-allowed text-text-disabled'\n\t\t: '';\n\n\treturn (\n\t\t<textarea\n\t\t\tref={ ref }\n\t\t\tid={ inputId }\n\t\t\tclassName={ cn(\n\t\t\t\tbaseClasses,\n\t\t\t\tdisabledClasses,\n\t\t\t\tsizeClasses[ size ],\n\t\t\t\tfocusClasses,\n\t\t\t\thoverClasses,\n\t\t\t\terrorClasses,\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\tdisabled={ disabled }\n\t\t\tonChange={ handleChange }\n\t\t\tonInvalid={ onError }\n\t\t\tvalue={ getValue() }\n\t\t\t{ ...props }\n\t\t/>\n\t);\n};\nconst TextArea = forwardRef( TextAreaComponent );\nTextArea.displayName = 'TextArea';\n\nexport default TextArea;\n"],"names":["TextAreaComponent","id","defaultValue","value","size","className","disabled","onChange","error","onError","props","ref","inputId","useMemo","nanoid","isControlled","inputValue","setInputValue","useState","getValue","useCallback","handleChange","event","newValue","baseClasses","sizeClasses","hoverClasses","focusClasses","errorClasses","jsx","cn","TextArea","forwardRef"],"mappings":";;;;AAyBO,MAAMA,IAAoB,CAChC;AAAA,EACC,IAAAC;AAAA,EACA,cAAAC,IAAe;AAAA,EACf,OAAAC;AAAA,EACA,MAAAC,IAAO;AAAA;AAAA,EACP,WAAAC,IAAY;AAAA,EACZ,UAAAC,IAAW;AAAA,EACX,UAAAC,IAAW,MAAM;AAAA,EAAC;AAAA,EAClB,OAAAC,IAAQ;AAAA,EACR,SAAAC,IAAU,MAAM;AAAA,EAAC;AAAA,EACjB,GAAGC;AACJ,GACAC,MACI;AACE,QAAAC,IAAUC,EAAS,MAAMZ,KAAM,kBAAmBa,GAAS,IAAI,CAAEb,CAAG,CAAE,GACtEc,IAAeF,EAAS,MAAM,OAAOV,IAAU,KAAa,CAAEA,CAAM,CAAE,GACtE,CAAEa,GAAYC,CAAc,IAAIC,EAAUhB,CAAa,GAEvDiB,IAAWC;AAAA,IAChB,MAAQL,IAAeZ,IAAQa;AAAA,IAC/B,CAAED,GAAcZ,GAAOa,CAAW;AAAA,EACnC,GAEMK,IAAe,CAAEC,MAAmD;AACzE,QAAKhB;AACJ;AAGK,UAAAiB,IAAWD,EAAM,OAAO;AAKzB,IAJEP,KACNE,EAAeM,CAAS,GAGpB,OAAOhB,KAAa,cAGzBA,EAAUgB,CAAS;AAAA,EACpB,GAEMC,IACL,sMACKC,IAAc;AAAA,IACnB,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,EACL,GAEMC,IAAepB,IAClB,iCACA,8BACGqB,IACL,mFACKC,IAAepB,IAClB,2FACA;AAMF,SAAA,gBAAAqB;AAAA,IAAC;AAAA,IAAA;AAAA,MACA,KAAAlB;AAAA,MACA,IAAKC;AAAA,MACL,WAAYkB;AAAA,QACXN;AAAA,QATqBlB,IACrB,8FACA;AAAA,QASAmB,EAAarB,CAAK;AAAA,QAClBuB;AAAA,QACAD;AAAA,QACAE;AAAA,QACAvB;AAAA,MACD;AAAA,MACA,UAAAC;AAAA,MACA,UAAWe;AAAA,MACX,WAAYZ;AAAA,MACZ,OAAQU,EAAS;AAAA,MACf,GAAGT;AAAA,IAAA;AAAA,EACN;AAEF,GACMqB,IAAWC,EAAYhC,CAAkB;AAC/C+B,EAAS,cAAc;"}