{"version":3,"file":"dialog.es.js","sources":["../../../src/components/dialog/dialog.tsx"],"sourcesContent":["import {\n\tcloneElement,\n\tcreateContext,\n\ttype ElementType,\n\tFragment,\n\tisValidElement,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n\ttype ReactNode,\n} from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { callAll, cn } from '@/utilities/functions';\nimport { X } from 'lucide-react';\nimport { createPortal } from 'react-dom';\n\nexport interface DialogState {\n\topen: boolean;\n\tsetOpen: ( open: boolean ) => void;\n\thandleClose: () => void;\n\tdesign: 'simple' | 'footer-divided';\n\tdialogContainerRef: React.RefObject<HTMLDivElement | null>;\n\tdialogRef: React.RefObject<HTMLDivElement>;\n}\n\nconst DialogContext = createContext<Partial<DialogState>>( {} );\nconst useDialogState = () => useContext( DialogContext );\n\nconst animationVariants = {\n\topen: {\n\t\topacity: 1,\n\t},\n\texit: {\n\t\topacity: 0,\n\t},\n};\nconst TRANSITION_DURATION = { duration: 0.2 };\n\nexport interface CommonProps {\n\t/** Additional class name. */\n\tclassName?: string;\n\t/** Additional inline styles. */\n\tstyle?: React.CSSProperties;\n}\n\nexport interface DialogProps extends CommonProps {\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\topen?: boolean;\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\tsetOpen?: ( open: boolean ) => void;\n\t/** Children of the dialog. */\n\tchildren: ReactNode;\n\t/** Trigger element for the dialog. */\n\ttrigger?:\n\t\t| ReactNode\n\t\t| ( ( props: { onClick: () => void } ) => React.ReactElement );\n\t/** Close the dialog on clicking outside the dialog. */\n\texitOnClickOutside?: boolean;\n\t/** Close the dialog on pressing the escape key. */\n\texitOnEsc?: boolean;\n\t/** Design of the dialog. */\n\tdesign?: 'simple' | 'footer-divided';\n\t/** Lock the scroll when the dialog is open. */\n\tscrollLock?: boolean;\n}\n\n// Dialog component.\nconst Dialog = ( {\n\topen,\n\tsetOpen,\n\tchildren,\n\ttrigger = null,\n\tclassName,\n\texitOnClickOutside = false,\n\texitOnEsc = true,\n\tdesign = 'simple',\n\tscrollLock = true,\n}: DialogProps ): JSX.Element => {\n\tconst isControlled = open !== undefined && setOpen !== undefined;\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst dialogRef = useRef<HTMLDivElement | null>( null );\n\tconst dialogContainerRef = useRef( null );\n\n\tconst openState = useMemo(\n\t\t() => ( isControlled ? open : isOpen ),\n\t\t[ open, isOpen ]\n\t);\n\tconst setOpenState = useMemo(\n\t\t() => ( isControlled ? setOpen : setIsOpen ),\n\t\t[ setIsOpen, setIsOpen ]\n\t);\n\n\tconst handleOpen = () => {\n\t\tif ( openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( true );\n\t};\n\n\tconst handleClose = () => {\n\t\tif ( ! openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( false );\n\t};\n\n\tconst renderTrigger = useCallback( () => {\n\t\tif ( isValidElement( trigger ) ) {\n\t\t\treturn cloneElement( trigger as React.ReactElement, {\n\t\t\t\tonClick: callAll( handleOpen, trigger?.props?.onClick ),\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof trigger === 'function' ) {\n\t\t\treturn trigger( { onClick: handleOpen } );\n\t\t}\n\n\t\treturn null;\n\t}, [ trigger, handleOpen, handleClose ] );\n\n\tconst handleKeyDown = ( event: KeyboardEvent ) => {\n\t\tswitch ( event.key ) {\n\t\t\tcase 'Escape':\n\t\t\t\tif ( exitOnEsc ) {\n\t\t\t\t\thandleClose();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleClickOutside = ( event: MouseEvent ) => {\n\t\tif (\n\t\t\texitOnClickOutside &&\n\t\t\tdialogRef.current &&\n\t\t\t! dialogRef.current.contains( event.target as Node )\n\t\t) {\n\t\t\thandleClose();\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\twindow.addEventListener( 'keydown', handleKeyDown );\n\t\tdocument.addEventListener( 'mousedown', handleClickOutside );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'keydown', handleKeyDown );\n\t\t\tdocument.removeEventListener( 'mousedown', handleClickOutside );\n\t\t};\n\t}, [ openState ] );\n\n\t// Prevent scrolling when dialog is open.\n\tuseEffect( () => {\n\t\tif ( ! scrollLock ) {\n\t\t\treturn;\n\t\t}\n\t\tconst htmlElement: HTMLElement | null = document.querySelector( 'html' );\n\t\tif ( openState && htmlElement ) {\n\t\t\thtmlElement.style.overflow = 'hidden';\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( ! htmlElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thtmlElement.style.overflow = '';\n\t\t};\n\t}, [ openState ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ renderTrigger() }\n\t\t\t<DialogContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\topen: openState,\n\t\t\t\t\tsetOpen: setOpenState,\n\t\t\t\t\thandleClose,\n\t\t\t\t\tdesign,\n\t\t\t\t\tdialogContainerRef,\n\t\t\t\t\tdialogRef,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={ dialogContainerRef }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'fixed z-999999 w-0 h-0 overflow-visible',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t</DialogContext.Provider>\n\t\t</>\n\t);\n};\nDialog.displayName = 'Dialog';\n\nexport interface DialogPanelProps extends CommonProps {\n\t/** Children of the dialog panel. */\n\tchildren: ReactNode | ( ( param: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogPanel = ( {\n\tchildren,\n\tclassName,\n}: DialogPanelProps ): JSX.Element => {\n\tconst { open, handleClose, dialogRef } = useDialogState();\n\n\treturn (\n\t\t<AnimatePresence>\n\t\t\t{ open && (\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName=\"fixed inset-0 overflow-y-auto\"\n\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\texit=\"exit\"\n\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex items-center justify-center min-h-full\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={ dialogRef }\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'flex flex-col gap-5 w-120 h-fit bg-background-primary border border-solid border-border-subtle rounded-xl shadow-soft-shadow-2xl my-5 overflow-hidden',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ typeof children === 'function'\n\t\t\t\t\t\t\t\t? children( { close: handleClose! } )\n\t\t\t\t\t\t\t\t: children }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</motion.div>\n\t\t\t) }\n\t\t</AnimatePresence>\n\t);\n};\nDialogPanel.displayName = 'Dialog.Panel';\n\nexport const DialogBackdrop = ( {\n\tclassName,\n\t...props\n}: CommonProps ): JSX.Element | null => {\n\tconst { open, dialogContainerRef } = useDialogState();\n\n\tif ( ! dialogContainerRef?.current ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ createPortal(\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{ open && (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'fixed inset-0 -z-10 bg-background-inverse/90',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\t\texit=\"exit\"\n\t\t\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</AnimatePresence>,\n\t\t\t\tdialogContainerRef.current\n\t\t\t) }\n\t\t</>\n\t);\n};\nDialogBackdrop.displayName = 'Dialog.Backdrop';\n\nexport interface DialogHeaderProps extends CommonProps {\n\t/** Children of the dialog header. */\n\tchildren: ReactNode;\n}\n\n// Dialog header wrapper.\nexport const DialogHeader = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogHeaderProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'space-y-2 px-5 pt-5 pb-1', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogHeader.displayName = 'Dialog.Header';\n\nexport interface DialogTitleProp extends CommonProps {\n\t/** Children of the dialog title. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog title. */\n\tas?: ElementType;\n}\n\n// Dialog title.\nexport const DialogTitle = ( {\n\tchildren,\n\tas: Tag = 'h3',\n\tclassName,\n\t...props\n}: DialogTitleProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-base font-semibold text-text-primary m-0 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogTitle.displayName = 'Dialog.Title';\n\nexport interface DialogDescriptionProp extends CommonProps {\n\t/** Children of the dialog description. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog description. */\n\tas?: ElementType;\n}\n\n// Dialog description.\nexport const DialogDescription = ( {\n\tchildren,\n\tas: Tag = 'p',\n\tclassName,\n\t...props\n}: DialogDescriptionProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-sm font-normal text-text-secondary my-0 ml-0 mr-1 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogDescription.displayName = 'Dialog.Description';\n\nexport interface DialogCloseButtonProps extends CommonProps {\n\t/** Children of the dialog close button. */\n\tchildren?: ReactNode;\n\t/** Additional class name for the dialog close button. */\n\tas?: ElementType;\n\t/** Additional class name for the dialog close button. */\n\tclassName?: string;\n\t/** Additional props based on the as value. */\n\t[key: string]: unknown;\n}\n\nexport interface DialogDefaultCloseButtonProps extends CommonProps {\n\t/** On click event for the close button. */\n\tonClick?: () => void;\n}\n\n// Default close button for the dialog.\nexport const DefaultCloseButton = ( {\n\tclassName,\n\t...props\n}: DialogDefaultCloseButtonProps ): JSX.Element => {\n\treturn (\n\t\t<button\n\t\t\tclassName={ cn(\n\t\t\t\t'bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label=\"Close dialog\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<X className=\"size-4 text-text-primary shrink-0\" />\n\t\t</button>\n\t);\n};\n\n// Close button for the dialog.\nexport const DialogCloseButton = ( {\n\tchildren,\n\tas: Tag = Fragment,\n\t...props\n}: DialogCloseButtonProps ): JSX.Element | ReactNode => {\n\tconst { handleClose } = useDialogState();\n\n\tif ( ! children ) {\n\t\treturn <DefaultCloseButton onClick={ handleClose } { ...props } />;\n\t}\n\n\tif ( Tag === Fragment ) {\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn ( children as ( args: { close: () => void } ) => ReactNode )( {\n\t\t\t\tclose: handleClose!,\n\t\t\t} );\n\t\t}\n\n\t\treturn cloneElement( children as React.ReactElement, {\n\t\t\tonClick: handleClose,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Tag { ...props } onClick={ handleClose }>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogCloseButton.displayName = 'Dialog.CloseButton';\n\nexport interface DialogBodyProps extends CommonProps {\n\t/** Children of the dialog body. */\n\tchildren: ReactNode;\n}\n\n// Dialog body.\nexport const DialogBody = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogBodyProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'px-5', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogBody.displayName = 'Dialog.Body';\n\n// Dialog footer.\nexport interface DialogFooterProps extends CommonProps {\n\t/** Children of the dialog footer. */\n\tchildren?: ReactNode | ( ( props: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogFooter = ( {\n\tchildren,\n\tclassName,\n}: DialogFooterProps ): JSX.Element => {\n\tconst { design, handleClose } = useDialogState();\n\n\tconst renderChildren = () => {\n\t\tif ( ! children ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn children( { close: handleClose! } );\n\t\t}\n\n\t\treturn children;\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'p-4 flex justify-end gap-3',\n\t\t\t\t{\n\t\t\t\t\t'bg-background-secondary': design === 'footer-divided',\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ renderChildren() }\n\t\t</div>\n\t);\n};\nDialogFooter.displayName = 'Dialog.Footer';\n\nDialog.Panel = DialogPanel;\nDialog.Title = DialogTitle;\nDialog.Description = DialogDescription;\nDialog.CloseButton = DialogCloseButton;\nDialog.Header = DialogHeader;\nDialog.Body = DialogBody;\nDialog.Footer = DialogFooter;\nDialog.Backdrop = DialogBackdrop;\n\nexport default Dialog;\n"],"names":["DialogContext","createContext","useDialogState","useContext","animationVariants","TRANSITION_DURATION","Dialog","open","setOpen","children","trigger","className","exitOnClickOutside","exitOnEsc","design","scrollLock","isControlled","isOpen","setIsOpen","useState","dialogRef","useRef","dialogContainerRef","openState","useMemo","setOpenState","handleOpen","handleClose","renderTrigger","useCallback","isValidElement","cloneElement","callAll","handleKeyDown","event","handleClickOutside","useEffect","htmlElement","jsxs","Fragment","jsx","cn","DialogPanel","AnimatePresence","motion","DialogBackdrop","props","createPortal","DialogHeader","DialogTitle","Tag","DialogDescription","DefaultCloseButton","X","DialogCloseButton","DialogBody","DialogFooter","renderChildren"],"mappings":"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"}