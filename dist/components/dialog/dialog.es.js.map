{"version":3,"file":"dialog.es.js","sources":["../../../src/components/dialog/dialog.tsx"],"sourcesContent":["import {\n\tcloneElement,\n\tcreateContext,\n\ttype ElementType,\n\tFragment,\n\tisValidElement,\n\tuseCallback,\n\tuseContext,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n\ttype ReactNode,\n} from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { callAll, cn } from '@/utilities/functions';\nimport { X } from 'lucide-react';\nimport { createPortal } from 'react-dom';\nimport {\n\tuseFloating,\n\tuseClick,\n\tuseDismiss,\n\tuseRole,\n\tuseInteractions,\n\tFloatingFocusManager,\n\tFloatingOverlay,\n\tFloatingPortal,\n\ttype UseFloatingReturn,\n} from '@floating-ui/react';\n\nexport interface DialogState {\n\topen: boolean;\n\tsetOpen: ( open: boolean ) => void;\n\thandleClose: () => void;\n\tdesign: 'simple' | 'footer-divided';\n\tcontext: UseFloatingReturn['context'];\n\tgetFloatingProps: () => Record<string, unknown>;\n\t// Keep these refs for backward compatibility\n\tdialogContainerRef: React.RefObject<HTMLDivElement | null>;\n\tdialogRef: React.MutableRefObject<HTMLDivElement | null>;\n\tscrollLock: boolean;\n\tclassName: string,\n\trefs: UseFloatingReturn['refs']\n}\n\nconst DialogContext = createContext<Partial<DialogState>>( {} );\nconst useDialogState = () => useContext( DialogContext );\n\nconst animationVariants = {\n\topen: {\n\t\topacity: 1,\n\t},\n\texit: {\n\t\topacity: 0,\n\t},\n};\nconst TRANSITION_DURATION = { duration: 0.2 };\n\nexport interface CommonProps {\n\t/** Additional class name. */\n\tclassName?: string;\n\t/** Additional inline styles. */\n\tstyle?: React.CSSProperties;\n}\n\nexport interface DialogProps extends CommonProps {\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\topen?: boolean;\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\tsetOpen?: ( open: boolean ) => void;\n\t/** Children of the dialog. */\n\tchildren: ReactNode;\n\t/** Trigger element for the dialog. */\n\ttrigger?:\n\t\t| ReactNode\n\t\t| ( ( props: { onClick: () => void } ) => React.ReactElement );\n\t/** Close the dialog on clicking outside the dialog. */\n\texitOnClickOutside?: boolean;\n\t/** Close the dialog on pressing the escape key. */\n\texitOnEsc?: boolean;\n\t/** Design of the dialog. */\n\tdesign?: 'simple' | 'footer-divided';\n\t/** Lock the scroll when the dialog is open. */\n\tscrollLock?: boolean;\n}\n\n// Dialog component.\nconst Dialog = ( {\n\topen,\n\tsetOpen,\n\tchildren,\n\ttrigger = null,\n\tclassName,\n\texitOnClickOutside = false,\n\texitOnEsc = true,\n\tdesign = 'simple',\n\tscrollLock = true,\n}: DialogProps ): JSX.Element => {\n\tconst isControlled = open !== undefined && setOpen !== undefined;\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst dialogRef = useRef<HTMLDivElement | null>( null );\n\tconst dialogContainerRef = useRef( null );\n\n\tconst openState = useMemo(\n\t\t() => ( isControlled ? open : isOpen ),\n\t\t[ open, isOpen ]\n\t);\n\tconst setOpenState = useMemo(\n\t\t() => ( isControlled ? setOpen : setIsOpen ),\n\t\t[ setIsOpen, setOpen ]\n\t);\n\n\t// Floating UI setup\n\tconst { refs, context } = useFloating( {\n\t\topen: openState,\n\t\tonOpenChange: setOpenState,\n\t} );\n\n\tconst click = useClick( context );\n\tconst dismiss = useDismiss( context, {\n\t\toutsidePressEvent: 'mousedown',\n\t\tenabled: exitOnClickOutside || exitOnEsc,\n\t\tescapeKey: exitOnEsc,\n\t\toutsidePress: exitOnClickOutside,\n\t} );\n\tconst role = useRole( context, { role: 'dialog' } );\n\n\tconst { getFloatingProps } = useInteractions( [ click, dismiss, role ] );\n\n\tconst handleOpen = () => {\n\t\tif ( openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( true );\n\t};\n\n\tconst handleClose = () => {\n\t\tif ( ! openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( false );\n\t};\n\n\tconst renderTrigger = useCallback( () => {\n\t\tif ( isValidElement( trigger ) ) {\n\t\t\treturn cloneElement( trigger as React.ReactElement, {\n\t\t\t\tonClick: callAll( handleOpen, trigger?.props?.onClick ),\n\t\t\t\tref: refs.setReference,\n\t\t\t\t'aria-haspopup': 'dialog', // Added for accessibility\n\t\t\t\t'aria-expanded': openState, // Added for accessibility\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof trigger === 'function' ) {\n\t\t\treturn trigger( { onClick: handleOpen } );\n\t\t}\n\n\t\treturn null;\n\t}, [ trigger, handleOpen, refs.setReference, openState ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ renderTrigger() }\n\t\t\t<DialogContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\topen: openState,\n\t\t\t\t\tsetOpen: setOpenState,\n\t\t\t\t\thandleClose,\n\t\t\t\t\tdesign,\n\t\t\t\t\tcontext,\n\t\t\t\t\tgetFloatingProps,\n\t\t\t\t\trefs,\n\t\t\t\t\tdialogContainerRef,\n\t\t\t\t\tdialogRef,\n\t\t\t\t\tscrollLock,\n\t\t\t\t\tclassName,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</DialogContext.Provider>\n\t\t</>\n\t);\n};\nDialog.displayName = 'Dialog';\n\nexport interface DialogPanelProps extends CommonProps {\n\t/** Children of the dialog panel. */\n\tchildren: ReactNode | ( ( param: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogPanel = ( {\n\tchildren,\n\tclassName,\n}: DialogPanelProps ): JSX.Element => {\n\tconst {\n\t\topen,\n\t\thandleClose,\n\t\tcontext,\n\t\tgetFloatingProps,\n\t\tdialogRef,\n\t\tscrollLock,\n\t\tdialogContainerRef,\n\t\tclassName: rootClassName,\n\t\trefs,\n\t} = useDialogState();\n\n\tconst dialogContent = (\n\t\t<AnimatePresence>\n\t\t\t{ open && (\n\t\t\t\t<FloatingOverlay\n\t\t\t\t\tref={ dialogContainerRef as React.RefObject<HTMLDivElement> }\n\t\t\t\t\tlockScroll={ scrollLock }\n\t\t\t\t\tclassName={ cn( 'z-999999', rootClassName ) }\n\t\t\t\t\taria-modal=\"true\"\n\t\t\t\t>\n\t\t\t\t\t<FloatingFocusManager\n\t\t\t\t\t\tcontext={ context as UseFloatingReturn['context'] }\n\t\t\t\t\t\t{ ...( refs?.reference && { returnFocus: refs.reference as React.MutableRefObject<HTMLElement> } ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tclassName=\"fixed inset-0 overflow-y-auto\"\n\t\t\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\t\texit=\"exit\"\n\t\t\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\t\t\taria-modal=\"true\"\n\t\t\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"flex items-center justify-center min-h-full\">\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tref={ ( node ) => {\n\t\t\t\t\t\t\t\t\t\tif ( node ) {\n\t\t\t\t\t\t\t\t\t\t\t// Set both refs\n\t\t\t\t\t\t\t\t\t\t\tdialogRef!.current = node;\n\t\t\t\t\t\t\t\t\t\t\tif ( context ) {\n\t\t\t\t\t\t\t\t\t\t\t\tcontext.refs.setFloating( node );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t{ ...getFloatingProps?.() }\n\t\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t\t'flex flex-col gap-5 w-120 h-fit bg-background-primary border border-solid border-border-subtle rounded-xl shadow-soft-shadow-2xl my-5 overflow-hidden',\n\t\t\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ typeof children === 'function'\n\t\t\t\t\t\t\t\t\t\t? children( { close: handleClose! } )\n\t\t\t\t\t\t\t\t\t\t: children }\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t\t</FloatingFocusManager>\n\t\t\t\t</FloatingOverlay>\n\t\t\t) }\n\t\t</AnimatePresence>\n\t);\n\n\t// If in portal context, don't wrap in portal again\n\treturn dialogContent;\n};\nDialogPanel.displayName = 'Dialog.Panel';\n\n// New Portal component\nexport interface DialogPortalProps {\n\t/** Children of the dialog portal. */\n\tchildren: ReactNode;\n\t/** Id of the dialog portal where the element will be rendered. If not provided, the dialog will be rendered in the body. */\n\tid?: string;\n\t/** Root element of the dialog portal. If not provided, the dialog will be rendered in the body. */\n\troot?: HTMLElement;\n}\n\nexport const DialogPortal = ( {\n\tchildren,\n\t...props\n}: DialogPortalProps ): JSX.Element => {\n\treturn <FloatingPortal { ...props }>{ children }</FloatingPortal>;\n};\nDialogPortal.displayName = 'Dialog.Portal';\n\nexport const DialogBackdrop = ( {\n\tclassName,\n\t...props\n}: CommonProps ): JSX.Element | null => {\n\tconst { open, dialogContainerRef } = useDialogState();\n\n\tif ( ! dialogContainerRef?.current ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ createPortal(\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{ open && (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'fixed inset-0 -z-10 bg-background-inverse/90',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\t\texit=\"exit\"\n\t\t\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</AnimatePresence>,\n\t\t\t\tdialogContainerRef.current\n\t\t\t) }\n\t\t</>\n\t);\n};\nDialogBackdrop.displayName = 'Dialog.Backdrop';\n\nexport interface DialogHeaderProps extends CommonProps {\n\t/** Children of the dialog header. */\n\tchildren: ReactNode;\n}\n\n// Dialog header wrapper.\nexport const DialogHeader = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogHeaderProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'space-y-2 px-5 pt-5 pb-1', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogHeader.displayName = 'Dialog.Header';\n\nexport interface DialogTitleProp extends CommonProps {\n\t/** Children of the dialog title. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog title. */\n\tas?: ElementType;\n}\n\n// Dialog title.\nexport const DialogTitle = ( {\n\tchildren,\n\tas: Tag = 'h3',\n\tclassName,\n\t...props\n}: DialogTitleProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-base font-semibold text-text-primary m-0 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogTitle.displayName = 'Dialog.Title';\n\nexport interface DialogDescriptionProp extends CommonProps {\n\t/** Children of the dialog description. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog description. */\n\tas?: ElementType;\n}\n\n// Dialog description.\nexport const DialogDescription = ( {\n\tchildren,\n\tas: Tag = 'p',\n\tclassName,\n\t...props\n}: DialogDescriptionProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-sm font-normal text-text-secondary my-0 ml-0 mr-1 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogDescription.displayName = 'Dialog.Description';\n\nexport interface DialogCloseButtonProps extends CommonProps {\n\t/** Children of the dialog close button. */\n\tchildren?: ReactNode;\n\t/** Additional class name for the dialog close button. */\n\tas?: ElementType;\n\t/** Additional class name for the dialog close button. */\n\tclassName?: string;\n\t/** Additional props based on the as value. */\n\t[key: string]: unknown;\n}\n\nexport interface DialogDefaultCloseButtonProps extends CommonProps {\n\t/** On click event for the close button. */\n\tonClick?: () => void;\n}\n\n// Default close button for the dialog.\nexport const DefaultCloseButton = ( {\n\tclassName,\n\t...props\n}: DialogDefaultCloseButtonProps ): JSX.Element => {\n\treturn (\n\t\t<button\n\t\t\tclassName={ cn(\n\t\t\t\t'bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label=\"Close dialog\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<X className=\"size-4 text-text-primary shrink-0\" />\n\t\t</button>\n\t);\n};\n\n// Close button for the dialog.\nexport const DialogCloseButton = ( {\n\tchildren,\n\tas: Tag = Fragment,\n\t...props\n}: DialogCloseButtonProps ): JSX.Element | ReactNode => {\n\tconst { handleClose } = useDialogState();\n\n\tif ( ! children ) {\n\t\treturn <DefaultCloseButton onClick={ handleClose } { ...props } />;\n\t}\n\n\tif ( Tag === Fragment ) {\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn ( children as ( args: { close: () => void } ) => ReactNode )( {\n\t\t\t\tclose: handleClose!,\n\t\t\t} );\n\t\t}\n\n\t\treturn cloneElement( children as React.ReactElement, {\n\t\t\tonClick: handleClose,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Tag { ...props } onClick={ handleClose } aria-label=\"Close dialog\">\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogCloseButton.displayName = 'Dialog.CloseButton';\n\nexport interface DialogBodyProps extends CommonProps {\n\t/** Children of the dialog body. */\n\tchildren: ReactNode;\n}\n\n// Dialog body.\nexport const DialogBody = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogBodyProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'px-5', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogBody.displayName = 'Dialog.Body';\n\n// Dialog footer.\nexport interface DialogFooterProps extends CommonProps {\n\t/** Children of the dialog footer. */\n\tchildren?: ReactNode | ( ( props: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogFooter = ( {\n\tchildren,\n\tclassName,\n}: DialogFooterProps ): JSX.Element => {\n\tconst { design, handleClose } = useDialogState();\n\n\tconst renderChildren = () => {\n\t\tif ( ! children ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn children( { close: handleClose! } );\n\t\t}\n\n\t\treturn children;\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'p-4 flex justify-end gap-3',\n\t\t\t\t{\n\t\t\t\t\t'bg-background-secondary': design === 'footer-divided',\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ renderChildren() }\n\t\t</div>\n\t);\n};\nDialogFooter.displayName = 'Dialog.Footer';\n\nDialog.Panel = DialogPanel;\nDialog.Portal = DialogPortal;\nDialog.Title = DialogTitle;\nDialog.Description = DialogDescription;\nDialog.CloseButton = DialogCloseButton;\nDialog.Header = DialogHeader;\nDialog.Body = DialogBody;\nDialog.Footer = DialogFooter;\nDialog.Backdrop = DialogBackdrop;\n\nexport default Dialog;\n"],"names":["DialogContext","createContext","useDialogState","useContext","animationVariants","TRANSITION_DURATION","Dialog","open","setOpen","children","trigger","className","exitOnClickOutside","exitOnEsc","design","scrollLock","isControlled","isOpen","setIsOpen","useState","dialogRef","useRef","dialogContainerRef","openState","useMemo","setOpenState","refs","context","useFloating","click","useClick","dismiss","useDismiss","role","useRole","getFloatingProps","useInteractions","handleOpen","handleClose","renderTrigger","useCallback","isValidElement","cloneElement","callAll","jsxs","Fragment","jsx","DialogPanel","rootClassName","AnimatePresence","FloatingOverlay","cn","FloatingFocusManager","motion","node","DialogPortal","props","FloatingPortal","DialogBackdrop","createPortal","DialogHeader","DialogTitle","Tag","DialogDescription","DefaultCloseButton","X","DialogCloseButton","DialogBody","DialogFooter","renderChildren"],"mappings":"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"}