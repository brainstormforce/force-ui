{"version":3,"file":"dialog.cjs.js","sources":["../../../src/components/dialog/dialog.tsx"],"sourcesContent":["import {\n\tcloneElement,\n\tcreateContext,\n\ttype ElementType,\n\tFragment,\n\tisValidElement,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n\ttype ReactNode,\n} from 'react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport { callAll, cn } from '@/utilities/functions';\nimport { X } from 'lucide-react';\nimport { createPortal } from 'react-dom';\n\nexport interface DialogState {\n\topen: boolean;\n\tsetOpen: ( open: boolean ) => void;\n\thandleClose: () => void;\n\tdesign: 'simple' | 'footer-divided';\n\tdialogContainerRef: React.RefObject<HTMLDivElement | null>;\n\tdialogRef: React.RefObject<HTMLDivElement>;\n}\n\nconst DialogContext = createContext<Partial<DialogState>>( {} );\nconst useDialogState = () => useContext( DialogContext );\n\nconst animationVariants = {\n\topen: {\n\t\topacity: 1,\n\t},\n\texit: {\n\t\topacity: 0,\n\t},\n};\nconst TRANSITION_DURATION = { duration: 0.2 };\n\nexport interface CommonProps {\n\t/** Additional class name. */\n\tclassName?: string;\n\t/** Additional inline styles. */\n\tstyle?: React.CSSProperties;\n}\n\nexport interface DialogProps extends CommonProps {\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\topen?: boolean;\n\t/** Control the dialog open state. If not provided, the dialog will be controlled internally. */\n\tsetOpen?: ( open: boolean ) => void;\n\t/** Children of the dialog. */\n\tchildren: ReactNode;\n\t/** Trigger element for the dialog. */\n\ttrigger?:\n\t\t| ReactNode\n\t\t| ( ( props: { onClick: () => void } ) => React.ReactElement );\n\t/** Close the dialog on clicking outside the dialog. */\n\texitOnClickOutside?: boolean;\n\t/** Close the dialog on pressing the escape key. */\n\texitOnEsc?: boolean;\n\t/** Design of the dialog. */\n\tdesign?: 'simple' | 'footer-divided';\n\t/** Lock the scroll when the dialog is open. */\n\tscrollLock?: boolean;\n}\n\n// Dialog component.\nconst Dialog = ( {\n\topen,\n\tsetOpen,\n\tchildren,\n\ttrigger = null,\n\tclassName,\n\texitOnClickOutside = false,\n\texitOnEsc = true,\n\tdesign = 'simple',\n\tscrollLock = true,\n}: DialogProps ): JSX.Element => {\n\tconst isControlled = open !== undefined && setOpen !== undefined;\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\tconst dialogRef = useRef<HTMLDivElement | null>( null );\n\tconst dialogContainerRef = useRef( null );\n\n\tconst openState = useMemo(\n\t\t() => ( isControlled ? open : isOpen ),\n\t\t[ open, isOpen ]\n\t);\n\tconst setOpenState = useMemo(\n\t\t() => ( isControlled ? setOpen : setIsOpen ),\n\t\t[ setIsOpen, setIsOpen ]\n\t);\n\n\tconst handleOpen = () => {\n\t\tif ( openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( true );\n\t};\n\n\tconst handleClose = () => {\n\t\tif ( ! openState ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenState( false );\n\t};\n\n\tconst renderTrigger = useCallback( () => {\n\t\tif ( isValidElement( trigger ) ) {\n\t\t\treturn cloneElement( trigger as React.ReactElement, {\n\t\t\t\tonClick: callAll( handleOpen, trigger?.props?.onClick ),\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof trigger === 'function' ) {\n\t\t\treturn trigger( { onClick: handleOpen } );\n\t\t}\n\n\t\treturn null;\n\t}, [ trigger, handleOpen, handleClose ] );\n\n\tconst handleKeyDown = ( event: KeyboardEvent ) => {\n\t\tswitch ( event.key ) {\n\t\t\tcase 'Escape':\n\t\t\t\tif ( exitOnEsc ) {\n\t\t\t\t\thandleClose();\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst handleClickOutside = ( event: MouseEvent ) => {\n\t\tif (\n\t\t\texitOnClickOutside &&\n\t\t\tdialogRef.current &&\n\t\t\t! dialogRef.current.contains( event.target as Node )\n\t\t) {\n\t\t\thandleClose();\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\twindow.addEventListener( 'keydown', handleKeyDown );\n\t\tdocument.addEventListener( 'mousedown', handleClickOutside );\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener( 'keydown', handleKeyDown );\n\t\t\tdocument.removeEventListener( 'mousedown', handleClickOutside );\n\t\t};\n\t}, [ openState ] );\n\n\t// Prevent scrolling when dialog is open.\n\tuseEffect( () => {\n\t\tif ( ! scrollLock ) {\n\t\t\treturn;\n\t\t}\n\t\tconst htmlElement: HTMLElement | null = document.querySelector( 'html' );\n\t\tif ( openState && htmlElement ) {\n\t\t\thtmlElement.style.overflow = 'hidden';\n\t\t}\n\n\t\treturn () => {\n\t\t\tif ( ! htmlElement ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thtmlElement.style.overflow = '';\n\t\t};\n\t}, [ openState ] );\n\n\treturn (\n\t\t<>\n\t\t\t{ renderTrigger() }\n\t\t\t<DialogContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\topen: openState,\n\t\t\t\t\tsetOpen: setOpenState,\n\t\t\t\t\thandleClose,\n\t\t\t\t\tdesign,\n\t\t\t\t\tdialogContainerRef,\n\t\t\t\t\tdialogRef,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={ dialogContainerRef }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'fixed z-999999 w-0 h-0 overflow-visible',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t</DialogContext.Provider>\n\t\t</>\n\t);\n};\nDialog.displayName = 'Dialog';\n\nexport interface DialogPanelProps extends CommonProps {\n\t/** Children of the dialog panel. */\n\tchildren: ReactNode | ( ( param: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogPanel = ( {\n\tchildren,\n\tclassName,\n}: DialogPanelProps ): JSX.Element => {\n\tconst { open, handleClose, dialogRef } = useDialogState();\n\n\treturn (\n\t\t<AnimatePresence>\n\t\t\t{ open && (\n\t\t\t\t<motion.div\n\t\t\t\t\tclassName=\"fixed inset-0 overflow-y-auto\"\n\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\texit=\"exit\"\n\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\trole=\"dialog\"\n\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t>\n\t\t\t\t\t<div className=\"flex items-center justify-center min-h-full\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tref={ dialogRef }\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'flex flex-col gap-5 w-120 h-fit bg-background-primary border border-solid border-border-subtle rounded-xl shadow-soft-shadow-2xl my-5 overflow-hidden',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ typeof children === 'function'\n\t\t\t\t\t\t\t\t? children( { close: handleClose! } )\n\t\t\t\t\t\t\t\t: children }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</motion.div>\n\t\t\t) }\n\t\t</AnimatePresence>\n\t);\n};\nDialogPanel.displayName = 'Dialog.Panel';\n\nexport const DialogBackdrop = ( {\n\tclassName,\n\t...props\n}: CommonProps ): JSX.Element | null => {\n\tconst { open, dialogContainerRef } = useDialogState();\n\n\tif ( ! dialogContainerRef?.current ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ createPortal(\n\t\t\t\t<AnimatePresence>\n\t\t\t\t\t{ open && (\n\t\t\t\t\t\t<motion.div\n\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t'fixed inset-0 -z-10 bg-background-inverse/90',\n\t\t\t\t\t\t\t\tclassName\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\tinitial=\"exit\"\n\t\t\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\t\t\texit=\"exit\"\n\t\t\t\t\t\t\tvariants={ animationVariants }\n\t\t\t\t\t\t\ttransition={ TRANSITION_DURATION }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</AnimatePresence>,\n\t\t\t\tdialogContainerRef.current\n\t\t\t) }\n\t\t</>\n\t);\n};\nDialogBackdrop.displayName = 'Dialog.Backdrop';\n\nexport interface DialogHeaderProps extends CommonProps {\n\t/** Children of the dialog header. */\n\tchildren: ReactNode;\n}\n\n// Dialog header wrapper.\nexport const DialogHeader = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogHeaderProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'space-y-2 px-5 pt-5 pb-1', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogHeader.displayName = 'Dialog.Header';\n\nexport interface DialogTitleProp extends CommonProps {\n\t/** Children of the dialog title. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog title. */\n\tas?: ElementType;\n}\n\n// Dialog title.\nexport const DialogTitle = ( {\n\tchildren,\n\tas: Tag = 'h3',\n\tclassName,\n\t...props\n}: DialogTitleProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-base font-semibold text-text-primary m-0 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogTitle.displayName = 'Dialog.Title';\n\nexport interface DialogDescriptionProp extends CommonProps {\n\t/** Children of the dialog description. */\n\tchildren: ReactNode;\n\t/** Additional class name for the dialog description. */\n\tas?: ElementType;\n}\n\n// Dialog description.\nexport const DialogDescription = ( {\n\tchildren,\n\tas: Tag = 'p',\n\tclassName,\n\t...props\n}: DialogDescriptionProp ): JSX.Element => {\n\treturn (\n\t\t<Tag\n\t\t\tclassName={ cn(\n\t\t\t\t'text-sm font-normal text-text-secondary my-0 ml-0 mr-1 p-0',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogDescription.displayName = 'Dialog.Description';\n\nexport interface DialogCloseButtonProps extends CommonProps {\n\t/** Children of the dialog close button. */\n\tchildren?: ReactNode;\n\t/** Additional class name for the dialog close button. */\n\tas?: ElementType;\n\t/** Additional class name for the dialog close button. */\n\tclassName?: string;\n\t/** Additional props based on the as value. */\n\t[key: string]: unknown;\n}\n\nexport interface DialogDefaultCloseButtonProps extends CommonProps {\n\t/** On click event for the close button. */\n\tonClick?: () => void;\n}\n\n// Default close button for the dialog.\nexport const DefaultCloseButton = ( {\n\tclassName,\n\t...props\n}: DialogDefaultCloseButtonProps ): JSX.Element => {\n\treturn (\n\t\t<button\n\t\t\tclassName={ cn(\n\t\t\t\t'bg-transparent inline-flex justify-center items-center border-0 p-1 m-0 cursor-pointer focus:outline-none outline-none shadow-none',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\taria-label=\"Close dialog\"\n\t\t\t{ ...props }\n\t\t>\n\t\t\t<X className=\"size-4 text-text-primary shrink-0\" />\n\t\t</button>\n\t);\n};\n\n// Close button for the dialog.\nexport const DialogCloseButton = ( {\n\tchildren,\n\tas: Tag = Fragment,\n\t...props\n}: DialogCloseButtonProps ): JSX.Element | ReactNode => {\n\tconst { handleClose } = useDialogState();\n\n\tif ( ! children ) {\n\t\treturn <DefaultCloseButton onClick={ handleClose } { ...props } />;\n\t}\n\n\tif ( Tag === Fragment ) {\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn ( children as ( args: { close: () => void } ) => ReactNode )( {\n\t\t\t\tclose: handleClose!,\n\t\t\t} );\n\t\t}\n\n\t\treturn cloneElement( children as React.ReactElement, {\n\t\t\tonClick: handleClose,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Tag { ...props } onClick={ handleClose }>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\nDialogCloseButton.displayName = 'Dialog.CloseButton';\n\nexport interface DialogBodyProps extends CommonProps {\n\t/** Children of the dialog body. */\n\tchildren: ReactNode;\n}\n\n// Dialog body.\nexport const DialogBody = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DialogBodyProps ): JSX.Element => {\n\treturn (\n\t\t<div className={ cn( 'px-5', className ) } { ...props }>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nDialogBody.displayName = 'Dialog.Body';\n\n// Dialog footer.\nexport interface DialogFooterProps extends CommonProps {\n\t/** Children of the dialog footer. */\n\tchildren?: ReactNode | ( ( props: { close: () => void } ) => ReactNode );\n}\n\nexport const DialogFooter = ( {\n\tchildren,\n\tclassName,\n}: DialogFooterProps ): JSX.Element => {\n\tconst { design, handleClose } = useDialogState();\n\n\tconst renderChildren = () => {\n\t\tif ( ! children ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( typeof children === 'function' ) {\n\t\t\treturn children( { close: handleClose! } );\n\t\t}\n\n\t\treturn children;\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'p-4 flex justify-end gap-3',\n\t\t\t\t{\n\t\t\t\t\t'bg-background-secondary': design === 'footer-divided',\n\t\t\t\t},\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t{ renderChildren() }\n\t\t</div>\n\t);\n};\nDialogFooter.displayName = 'Dialog.Footer';\n\nDialog.Panel = DialogPanel;\nDialog.Title = DialogTitle;\nDialog.Description = DialogDescription;\nDialog.CloseButton = DialogCloseButton;\nDialog.Header = DialogHeader;\nDialog.Body = DialogBody;\nDialog.Footer = DialogFooter;\nDialog.Backdrop = DialogBackdrop;\n\nexport default Dialog;\n"],"names":["DialogContext","createContext","useDialogState","useContext","animationVariants","TRANSITION_DURATION","Dialog","open","setOpen","children","trigger","className","exitOnClickOutside","exitOnEsc","design","scrollLock","isControlled","isOpen","setIsOpen","useState","dialogRef","useRef","dialogContainerRef","openState","useMemo","setOpenState","handleOpen","handleClose","renderTrigger","useCallback","isValidElement","cloneElement","callAll","handleKeyDown","event","handleClickOutside","useEffect","htmlElement","jsxs","Fragment","jsx","cn","DialogPanel","AnimatePresence","motion","DialogBackdrop","props","createPortal","DialogHeader","DialogTitle","Tag","DialogDescription","DefaultCloseButton","X","DialogCloseButton","DialogBody","DialogFooter","renderChildren"],"mappings":"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"}