{"version":3,"file":"dropdown-menu.cjs.js","sources":["../../../src/components/dropdown-menu/dropdown-menu.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\tcreateContext,\n\tuseContext,\n\tcloneElement,\n\tFragment,\n\tisValidElement,\n\ttype ReactElement,\n} from 'react';\nimport {\n\tuseFloating,\n\tautoUpdate,\n\toffset,\n\tflip,\n\tshift,\n\tuseClick,\n\tuseDismiss,\n\tuseRole,\n\tFloatingPortal,\n\tuseInteractions,\n\tuseTransitionStyles,\n\ttype UseFloatingReturn,\n\ttype UseInteractionsReturn,\n} from '@floating-ui/react';\nimport { callAll, cn } from '@/utilities/functions';\nimport Menu from '../menu-item/menu-item';\nimport {\n\tAdditionalProps,\n\tDropdownCommonProps,\n\tDropdownMenuContentWrapperProps,\n\tDropdownMenuItemProps,\n\tDropdownMenuListProps,\n\tDropdownMenuProps,\n\tDropdownMenuSeparatorProps,\n\tDropdownPortalProps,\n\tHandleClose,\n} from './dropdown-types';\n\nconst DropdownMenuContext = createContext<Record<string, unknown>>( {} );\nconst useDropdownMenuContext = () => useContext( DropdownMenuContext );\n\nexport const DropdownMenu = ( {\n\tplacement = 'bottom',\n\toffset: offsetValue = 10,\n\tboundary = 'clippingAncestors',\n\tchildren,\n\tclassName,\n}: DropdownMenuProps ) => {\n\tconst [ isOpen, setIsOpen ] = useState( false );\n\n\tconst { refs, floatingStyles, context } = useFloating( {\n\t\topen: isOpen,\n\t\tonOpenChange: setIsOpen,\n\t\tplacement,\n\t\tstrategy: 'fixed',\n\t\tmiddleware: [\n\t\t\toffset( offsetValue ),\n\t\t\tflip( { boundary } ),\n\t\t\tshift( { boundary } ),\n\t\t],\n\t\twhileElementsMounted: autoUpdate,\n\t} );\n\n\tconst click = useClick( context );\n\tconst dismiss = useDismiss( context );\n\tconst role = useRole( context, { role: 'menu' } );\n\n\tconst { getReferenceProps, getFloatingProps } = useInteractions( [\n\t\tclick,\n\t\tdismiss,\n\t\trole,\n\t] );\n\n\tconst { isMounted, styles } = useTransitionStyles( context, {\n\t\tduration: 150,\n\t\tinitial: { opacity: 0, scale: 0.95 },\n\t\topen: { opacity: 1, scale: 1 },\n\t\tclose: { opacity: 0, scale: 0.95 },\n\t} );\n\n\tconst toggleMenu = () => setIsOpen( ( prev ) => ! prev );\n\n\tconst handleClose = () => setIsOpen( false );\n\n\treturn (\n\t\t<DropdownMenuContext.Provider\n\t\t\tvalue={ {\n\t\t\t\trefs,\n\t\t\t\thandleClose,\n\t\t\t\tisMounted,\n\t\t\t\tstyles,\n\t\t\t\tfloatingStyles,\n\t\t\t\tgetFloatingProps,\n\t\t\t} }\n\t\t>\n\t\t\t<div className={ cn( 'relative inline-block', className ) }>\n\t\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tReact.isValidElement( child ) &&\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tchild as ReactElement & {\n\t\t\t\t\t\t\t\ttype: { displayName: string };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)?.type?.displayName === 'DropdownMenu.Trigger'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn cloneElement( child as ReactElement, {\n\t\t\t\t\t\t\tref: refs.setReference,\n\t\t\t\t\t\t\tonClick: toggleMenu,\n\t\t\t\t\t\t\t...getReferenceProps(),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t} ) }\n\n\t\t\t\t{ React.Children.toArray( children )\n\t\t\t\t\t.filter(\n\t\t\t\t\t\t( child ): child is React.ReactElement =>\n\t\t\t\t\t\t\tReact.isValidElement( child ) &&\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t'DropdownMenu.Portal',\n\t\t\t\t\t\t\t\t'DropdownMenu.ContentWrapper',\n\t\t\t\t\t\t\t].includes(\n\t\t\t\t\t\t\t\t( child.type as { displayName?: string } )\n\t\t\t\t\t\t\t\t\t.displayName || ''\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t.map( ( child ) => child ) }\n\t\t\t</div>\n\t\t</DropdownMenuContext.Provider>\n\t);\n};\n\nDropdownMenu.displayName = 'DropdownMenu';\n\nexport const DropdownMenuContentWrapper = ( {\n\tchildren,\n\tclassName,\n}: DropdownMenuContentWrapperProps ) => {\n\tconst { refs, floatingStyles, getFloatingProps, isMounted, styles } =\n\t\tuseDropdownMenuContext() as {\n\t\t\trefs: UseFloatingReturn['refs'];\n\t\t\tfloatingStyles: UseFloatingReturn['floatingStyles'];\n\t\t\tgetFloatingProps: UseInteractionsReturn['getFloatingProps'];\n\t\t\tisMounted: boolean;\n\t\t\tstyles: React.CSSProperties;\n\t\t};\n\n\treturn (\n\t\tisMounted && (\n\t\t\t<div\n\t\t\t\tref={ refs.setFloating }\n\t\t\t\tclassName={ className }\n\t\t\t\tstyle={ {\n\t\t\t\t\t...floatingStyles!,\n\t\t\t\t\t...styles!,\n\t\t\t\t} }\n\t\t\t\t{ ...getFloatingProps() }\n\t\t\t>\n\t\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tchild as ReactElement & {\n\t\t\t\t\t\t\t\ttype?: { displayName: string };\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)?.type?.displayName === 'DropdownMenu.Content'\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t} ) }\n\t\t\t</div>\n\t\t)\n\t);\n};\n\nDropdownMenuContentWrapper.displayName = 'DropdownMenu.ContentWrapper';\n\nexport const DropdownMenuPortal = ( {\n\tchildren,\n\troot,\n\tid,\n}: DropdownPortalProps ) => {\n\treturn (\n\t\t<FloatingPortal id={ id } root={ root }>\n\t\t\t{ children }\n\t\t</FloatingPortal>\n\t);\n};\n\nDropdownMenuPortal.displayName = 'DropdownMenu.Portal';\n\nexport const DropdownMenuTrigger = React.forwardRef<\n\tHTMLDivElement,\n\tDropdownCommonProps\n>( ( { children, className, ...props }: DropdownCommonProps, ref ) => {\n\tif ( isValidElement( children ) ) {\n\t\treturn React.cloneElement( children as React.ReactElement, {\n\t\t\tclassName: cn( className, children.props.className ),\n\t\t\tref,\n\t\t\t...props,\n\t\t} );\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tref={ ref }\n\t\t\tclassName={ cn( 'cursor-pointer', className ) }\n\t\t\trole=\"button\"\n\t\t\ttabIndex={ 0 }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</div>\n\t);\n} );\n\nDropdownMenuTrigger.displayName = 'DropdownMenu.Trigger';\n\nexport const DropdownMenuContent = ( {\n\tchildren,\n\tclassName,\n\t...props\n}: DropdownCommonProps & AdditionalProps ) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'border border-solid border-border-subtle rounded-md shadow-lg overflow-hidden',\n\t\t\t\tclassName\n\t\t\t) }\n\t\t>\n\t\t\t<Menu { ...props }>{ children }</Menu>\n\t\t</div>\n\t);\n};\nDropdownMenuContent.displayName = 'DropdownMenu.Content';\n\nexport const DropdownMenuList = ( props: DropdownMenuListProps ) => {\n\treturn <Menu.List { ...props } />;\n};\n\nDropdownMenuList.displayName = 'DropdownMenu.List';\n\nexport const DropdownMenuItem = ( {\n\tchildren,\n\tas: Tag = Menu.Item,\n\t...props\n}: DropdownMenuItemProps ) => {\n\tconst { handleClose } = useDropdownMenuContext();\n\n\tif ( ! children ) {\n\t\treturn null;\n\t}\n\n\tif ( Tag === Fragment && isValidElement( children ) ) {\n\t\treturn cloneElement( children as React.ReactElement, {\n\t\t\tonClick: callAll(\n\t\t\t\t( children as React.ReactElement ).props?.onClick,\n\t\t\t\thandleClose as HandleClose\n\t\t\t),\n\t\t} );\n\t}\n\n\treturn (\n\t\t<Tag\n\t\t\t{ ...props }\n\t\t\tclassName={ cn( 'px-2', props.className ) }\n\t\t\tonClick={ callAll( props.onClick!, handleClose as HandleClose ) }\n\t\t>\n\t\t\t{ children }\n\t\t</Tag>\n\t);\n};\n\nDropdownMenuItem.displayName = 'DropdownMenu.Item';\n\nexport const DropdownMenuSeparator = ( props: DropdownMenuSeparatorProps ) => {\n\treturn <Menu.Separator { ...props } />;\n};\n\nDropdownMenuSeparator.displayName = 'DropdownMenu.Separator';\n\nDropdownMenu.Trigger = DropdownMenuTrigger;\nDropdownMenu.Content = DropdownMenuContent;\nDropdownMenu.List = DropdownMenuList;\nDropdownMenu.Item = DropdownMenuItem;\nDropdownMenu.Separator = DropdownMenuSeparator;\nDropdownMenu.Portal = DropdownMenuPortal;\nDropdownMenu.ContentWrapper = DropdownMenuContentWrapper;\n\nexport default DropdownMenu;\n"],"names":["DropdownMenuContext","createContext","useDropdownMenuContext","useContext","DropdownMenu","placement","offsetValue","boundary","children","className","isOpen","setIsOpen","useState","refs","floatingStyles","context","useFloating","offset","flip","shift","autoUpdate","click","useClick","dismiss","useDismiss","role","useRole","getReferenceProps","getFloatingProps","useInteractions","isMounted","styles","useTransitionStyles","toggleMenu","prev","handleClose","jsx","cn","React","child","cloneElement","DropdownMenuContentWrapper","DropdownMenuPortal","root","id","FloatingPortal","DropdownMenuTrigger","props","ref","isValidElement","DropdownMenuContent","Menu","DropdownMenuList","DropdownMenuItem","Tag","Fragment","callAll","DropdownMenuSeparator"],"mappings":"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"}