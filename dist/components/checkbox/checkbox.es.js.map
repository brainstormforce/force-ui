{"version":3,"file":"checkbox.es.js","sources":["../../../src/components/checkbox/checkbox.tsx"],"sourcesContent":["import {\n\tuseState,\n\tuseCallback,\n\tuseMemo,\n\tforwardRef,\n\tisValidElement,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport { cn } from '@/utilities/functions';\nimport { Check, Minus } from 'lucide-react';\nimport Label from '../label/label';\n\n// Types for Component Props\nexport declare interface CheckboxProps {\n\t/** Defines the content associated with the checkbox. */\n\tlabel?: { heading?: string; description?: string } | undefined;\n\t/** ID of the checkbox input. */\n\tid?: string;\n\t/** Default checked state (uncontrolled). */\n\tdefaultChecked?: boolean;\n\t/** Controlled checked state. */\n\tchecked?: boolean;\n\t/** Change event handler. */\n\tonChange?: ( checked: boolean ) => void;\n\t/** If true, renders indeterminate state. */\n\tindeterminate?: boolean;\n\t/** If true, disables the checkbox. */\n\tdisabled?: boolean;\n\t/** Size of the checkbox (sm or md). */\n\tsize?: 'sm' | 'md';\n\t/** Custom className for the checkbox. */\n\tclassName?: string;\n}\n\nexport const CheckboxComponent = (\n\t{\n\t\tid,\n\t\tlabel,\n\t\tdefaultChecked = false,\n\t\tchecked,\n\t\tonChange,\n\t\tindeterminate,\n\t\tdisabled,\n\t\tsize = 'md',\n\t\tclassName,\n\t\t...props\n\t}: CheckboxProps,\n\tref: React.ForwardedRef<HTMLInputElement>\n) => {\n\tconst checkboxId = useMemo( () => id || `checkbox-${ nanoid() }`, [ id ] );\n\tconst isControlled = useMemo(\n\t\t() => typeof checked !== 'undefined',\n\t\t[ checked ]\n\t);\n\tconst [ isChecked, setIsChecked ] = useState( defaultChecked || false );\n\tconst color = 'primary';\n\n\tconst sizeClassNames = {\n\t\tsm: {\n\t\t\tcheckbox: 'size-4 rounded gap-1',\n\t\t\ticon: 'size-3',\n\t\t\ttext: 'text-sm', // text class for sm\n\t\t\tdescription: 'text-sm',\n\t\t\tgap: 'gap-0.5',\n\t\t},\n\t\tmd: {\n\t\t\tcheckbox: 'size-5 rounded gap-1',\n\t\t\ticon: 'size-4',\n\t\t\ttext: 'text-base', // text class for md\n\t\t\tdescription: 'text-sm',\n\t\t\tgap: 'gap-1',\n\t\t},\n\t};\n\tconst colorClassNames = {\n\t\tprimary: {\n\t\t\tcheckbox:\n\t\t\t\t'border-border-strong hover:border-border-interactive checked:border-border-interactive bg-white checked:bg-toggle-on checked:hover:bg-toggle-on-hover checked:hover:border-toggle-on-hover focus:ring-2 focus:ring-offset-2 focus:ring-focus',\n\t\t\ticon: 'text-white',\n\t\t},\n\t};\n\tconst disabledClassNames = {\n\t\tcheckbox:\n\t\t\t'cursor-not-allowed disabled:bg-white checked:disabled:bg-white disabled:border-border-disabled checked:disabled:border-border-disabled',\n\t\ticon: 'cursor-not-allowed peer-disabled:text-border-disabled',\n\t};\n\n\tconst getValue = useCallback(\n\t\t() => ( isControlled ? checked : isChecked ),\n\t\t[ isControlled, checked, isChecked ]\n\t);\n\n\tconst handleChange = ( event: React.ChangeEvent<HTMLInputElement> ) => {\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = event.target.checked;\n\t\tif ( ! isControlled ) {\n\t\t\tsetIsChecked( newValue );\n\t\t}\n\n\t\tif ( typeof onChange !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tonChange( newValue );\n\t};\n\n\tconst renderLabel = useCallback( () => {\n\t\tif ( isValidElement( label ) ) {\n\t\t\treturn label;\n\t\t}\n\n\t\tif ( ! label?.heading && ! label?.description ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className={ sizeClassNames[ size ].gap }>\n\t\t\t\t{ label?.heading && (\n\t\t\t\t\t<Label\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t'text-text-primary font-medium leading-4 m-0',\n\t\t\t\t\t\t\tsizeClassNames[ size ].text,\n\t\t\t\t\t\t\tsizeClassNames[ size ].gap,\n\t\t\t\t\t\t\tdisabled && 'text-text-disabled'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\thtmlFor={ checkboxId }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label?.heading }\n\t\t\t\t\t</Label>\n\t\t\t\t) }\n\t\t\t\t{ label?.description && (\n\t\t\t\t\t<Label\n\t\t\t\t\t\ttag=\"p\"\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t'font-normal leading-5 m-0',\n\t\t\t\t\t\t\tsizeClassNames[ size ].description,\n\t\t\t\t\t\t\tdisabled && 'text-text-disabled'\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tvariant=\"help\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ label?.description }\n\t\t\t\t\t</Label>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t}, [ label, size, disabled ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'inline-flex items-center justify-center gap-2',\n\t\t\t\t!! label && 'items-start',\n\t\t\t\tdisabled && 'cursor-not-allowed'\n\t\t\t) }\n\t\t>\n\t\t\t<label\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'relative flex items-center justify-center rounded-full p-0.5',\n\t\t\t\t\t! disabled && 'cursor-pointer'\n\t\t\t\t) }\n\t\t\t\thtmlFor={ checkboxId }\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tid={ checkboxId }\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\"peer relative cursor-pointer appearance-none transition-all m-0 before:content-[''] checked:before:content-[''] checked:before:hidden before:hidden !border-1.5 border-solid\",\n\t\t\t\t\t\tcolorClassNames[ color ].checkbox,\n\t\t\t\t\t\tsizeClassNames[ size ].checkbox,\n\t\t\t\t\t\tdisabled && disabledClassNames.checkbox,\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ getValue() }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\t{ ...props }\n\t\t\t\t/>\n\t\t\t\t<span\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'pointer-events-none inline-flex items-center absolute top-2/4 not-rtl:left-2/4 rtl:right-2/4 -translate-y-2/4 -translate-x-2/4 text-white opacity-0 transition-opacity peer-checked:opacity-100',\n\t\t\t\t\t\tcolorClassNames[ color ].icon,\n\t\t\t\t\t\tdisabled && disabledClassNames.icon\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ indeterminate ? (\n\t\t\t\t\t\t<Minus className={ cn( sizeClassNames[ size ]?.icon ) } />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Check className={ cn( sizeClassNames[ size ]?.icon ) } />\n\t\t\t\t\t) }\n\t\t\t\t</span>\n\t\t\t</label>\n\t\t\t{ !! label && renderLabel() }\n\t\t</div>\n\t);\n};\n\nconst Checkbox = forwardRef<HTMLInputElement, CheckboxProps>( CheckboxComponent );\n\nCheckbox.displayName = 'Checkbox';\n\nexport default Checkbox;\n"],"names":["CheckboxComponent","id","label","defaultChecked","checked","onChange","indeterminate","disabled","size","className","props","ref","checkboxId","useMemo","nanoid","isControlled","isChecked","setIsChecked","useState","color","sizeClassNames","colorClassNames","disabledClassNames","getValue","useCallback","handleChange","event","newValue","renderLabel","isValidElement","jsx","Label","cn","jsxs","Minus","Check","Checkbox","forwardRef"],"mappings":"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"}