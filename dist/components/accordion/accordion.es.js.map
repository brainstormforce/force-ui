{"version":3,"file":"accordion.es.js","sources":["../../../src/components/accordion/accordion.tsx"],"sourcesContent":["import React, {\n\ttype ReactNode,\n\ttype ElementType,\n\ttype MouseEventHandler,\n\tuseState,\n} from 'react';\nimport { Plus, Minus, ChevronDown } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { callAll, cn } from '@/utilities/functions';\n\n// Define common props to be shared by all components\nexport interface CommonProps {\n\t/** Custom class names for additional styling */\n\tclassName?: string;\n\t/** Disables the component */\n\tdisabled?: boolean;\n\t/** Children components */\n\tchildren: ReactNode;\n}\n\n// Define Accordion-specific props\nexport interface AccordionProps extends CommonProps {\n\t/** Type of accordion: 'simple', 'separator', or 'boxed' */\n\ttype?: 'simple' | 'separator' | 'boxed';\n\t/** Initial active item(s) */\n\tdefaultValue?: string | string[];\n\t/** Automatically close other items when one is opened */\n\tautoClose?: boolean;\n}\n\nexport const Accordion = ( {\n\ttype = 'simple',\n\tdefaultValue = [],\n\tautoClose = false,\n\tdisabled = false,\n\tchildren,\n\tclassName,\n}: AccordionProps ) => {\n\tconst [ activeItems, setActiveItems ] = useState(\n\t\tArray.isArray( defaultValue ) ? defaultValue : [ defaultValue ]\n\t);\n\n\tconst handleToggle = ( value: string ) => {\n\t\tsetActiveItems( ( prev ) => {\n\t\t\tif ( autoClose ) {\n\t\t\t\treturn prev.includes( value ) ? [] : [ value ];\n\t\t\t}\n\t\t\treturn prev.includes( value )\n\t\t\t\t? prev.filter( ( item ) => item !== value )\n\t\t\t\t: [ ...prev, value ];\n\t\t} );\n\t};\n\n\tconst typeClasses = type === 'boxed' ? 'space-y-3' : '';\n\n\treturn (\n\t\t<div className={ cn( typeClasses, className ) }>\n\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\tif ( React.isValidElement( child ) && 'value' in child.props ) {\n\t\t\t\t\tconst isCollapsible = child.props.collapsible !== false; // default true\n\t\t\t\t\tconst open = isCollapsible\n\t\t\t\t\t\t? activeItems.includes( child.props.value )\n\t\t\t\t\t\t: true;\n\n\t\t\t\t\treturn React.cloneElement(\n\t\t\t\t\t\tchild as React.ReactElement<AccordionItemProps>,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tisOpen: open,\n\t\t\t\t\t\t\tonToggle: isCollapsible\n\t\t\t\t\t\t\t\t? () => handleToggle( child.props.value )\n\t\t\t\t\t\t\t\t: undefined,\n\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\tdisabled: disabled || child.props.disabled,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn child;\n\t\t\t} ) }\n\t\t</div>\n\t);\n};\n\nAccordion.displayName = 'Accordion';\n\n// Define AccordionItem-specific props\n/**\n * Props for an AccordionItem component.\n */\nexport interface AccordionItemProps extends CommonProps {\n\t/** Determines if the item is open */\n\tisOpen?: boolean;\n\t/** Callback to toggle the item's state */\n\tonToggle?: () => void;\n\t/** Accordion type (same as parent) */\n\ttype?: 'simple' | 'separator' | 'boxed';\n\t/** The value associated with the accordion item */\n\tvalue?: string;\n}\n\nexport const AccordionItem = ( {\n\tisOpen,\n\tonToggle,\n\ttype = 'simple',\n\tdisabled = false,\n\tchildren,\n\tclassName,\n}: AccordionItemProps ) => {\n\tconst typeClasses = {\n\t\tsimple: 'border-0',\n\t\tseparator: 'border-0 border-b border-solid border-border-subtle',\n\t\tboxed: 'border border-solid border-border-subtle rounded-md',\n\t}?.[ type ];\n\n\treturn (\n\t\t<div className={ cn( typeClasses, className ) }>\n\t\t\t{ React.Children.map( children, ( child ) =>\n\t\t\t\tReact.isValidElement<AccordionItemProps>( child )\n\t\t\t\t\t? React.cloneElement( child, {\n\t\t\t\t\t\tisOpen,\n\t\t\t\t\t\tonToggle,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tdisabled,\n\t\t\t\t\t} )\n\t\t\t\t\t: child\n\t\t\t) }\n\t\t</div>\n\t);\n};\n\nAccordionItem.displayName = 'Accordion.Item';\n\n// Define AccordionTrigger-specific props\nexport interface AccordionTriggerProps extends CommonProps {\n\t/** OnClick handler for the accordion trigger. This works only when collapsible is set to `false`. */\n\tonClick?: () => void;\n\t/** Callback for toggling item state */\n\tonToggle?: () => void;\n\t/** Indicates if the item is open */\n\tisOpen?: boolean;\n\t/** Type of icon to display */\n\ticonType?: 'arrow' | 'plus-minus' | 'none';\n\t/** Element to render trigger as */\n\ttag?: ElementType;\n\t/** Accordion type (same as parent) */\n\ttype?: 'simple' | 'separator' | 'boxed';\n\t/** Specifies whether the accordion item can be collapsed. */\n\tcollapsible?: boolean;\n}\n\nexport const AccordionTrigger = ( {\n\tonClick,\n\tonToggle,\n\tisOpen,\n\ticonType = 'arrow',\n\tcollapsible = true,\n\tdisabled = false,\n\ttag = 'h3',\n\ttype = 'simple',\n\tchildren,\n\tclassName,\n\t...props\n}: AccordionTriggerProps ) => {\n\tconst paddingClasses = {\n\t\tsimple: 'px-2 py-3',\n\t\tseparator: 'px-2 py-4',\n\t\tboxed: 'px-3 py-4',\n\t}?.[ type ];\n\n\tconst renderIcon = () => {\n\t\tif ( ! collapsible ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( iconType === 'arrow' ) {\n\t\t\treturn (\n\t\t\t\t<ChevronDown\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex-shrink-0 text-icon-secondary size-5 transition-transform duration-300 ease-in-out',\n\t\t\t\t\t\tisOpen ? 'rotate-180' : 'rotate-0'\n\t\t\t\t\t) }\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\tif ( iconType === 'plus-minus' ) {\n\t\t\treturn (\n\t\t\t\t<motion.span\n\t\t\t\t\tkey={ isOpen ? 'minus' : 'plus' }\n\t\t\t\t\tinitial={ { opacity: 0, rotate: isOpen ? -180 : 0 } }\n\t\t\t\t\tanimate={ { opacity: 1, rotate: isOpen ? 0 : 180 } }\n\t\t\t\t\texit={ { opacity: 0 } }\n\t\t\t\t\ttransition={ { duration: 0.3, ease: 'easeInOut' } }\n\t\t\t\t\tclassName=\"flex items-center flex-shrink-0 text-icon-secondary\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t>\n\t\t\t\t\t{ isOpen ? <Minus /> : <Plus /> }\n\t\t\t\t</motion.span>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst Tag = tag;\n\treturn (\n\t\t<Tag className=\"flex m-0 hover:bg-background-secondary transition duration-150 ease-in-out\">\n\t\t\t<button\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'flex w-full items-center justify-between text-sm font-medium transition-all appearance-none bg-transparent border-0 cursor-pointer gap-3',\n\t\t\t\t\tpaddingClasses,\n\t\t\t\t\tdisabled && 'cursor-not-allowed opacity-40',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\tonClick={ callAll(\n\t\t\t\t\tonClick,\n\t\t\t\t\t! disabled && collapsible ? onToggle : undefined\n\t\t\t\t) as MouseEventHandler<HTMLButtonElement> }\n\t\t\t\taria-expanded={ isOpen }\n\t\t\t\taria-disabled={ disabled }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t<div className=\"flex items-center gap-2 text-text-primary font-semibold text-left\">\n\t\t\t\t\t{ children }\n\t\t\t\t</div>\n\t\t\t\t{ renderIcon() }\n\t\t\t</button>\n\t\t</Tag>\n\t);\n};\n\nAccordionTrigger.displayName = 'Accordion.Trigger';\n\n// Define AccordionContent-specific props\nexport interface AccordionContentProps extends CommonProps {\n\t/** Determines if the content is open */\n\tisOpen?: boolean;\n\t/** Accordion type (same as parent) */\n\ttype?: 'simple' | 'separator' | 'boxed';\n}\n\nexport const AccordionContent = ( {\n\tisOpen,\n\tdisabled = false,\n\ttype = 'simple',\n\tchildren,\n\tclassName,\n}: AccordionContentProps ) => {\n\tconst contentVariants = {\n\t\topen: {\n\t\t\theight: 'auto',\n\t\t\topacity: 1,\n\t\t\toverflow: 'unset',\n\t\t\ttransition: {\n\t\t\t\toverflow: {\n\t\t\t\t\tdelay: 1,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tclosed: {\n\t\t\theight: 0,\n\t\t\topacity: 0,\n\t\t\toverflow: 'hidden',\n\t\t},\n\t};\n\n\tconst contentPaddingClasses = {\n\t\tsimple: 'px-2 pb-3',\n\t\tseparator: 'px-2 pb-4',\n\t\tboxed: 'px-3 pb-4',\n\t}?.[ type ];\n\n\treturn (\n\t\t<AnimatePresence initial={ false }>\n\t\t\t{ isOpen && (\n\t\t\t\t<motion.div\n\t\t\t\t\tkey=\"content\"\n\t\t\t\t\tvariants={ contentVariants }\n\t\t\t\t\tinitial=\"closed\"\n\t\t\t\t\tanimate=\"open\"\n\t\t\t\t\texit=\"closed\"\n\t\t\t\t\ttransition={ { duration: 0.3, ease: 'easeInOut' } }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'text-text-secondary w-full text-sm transition-[height, opacity, transform] ease-in box-border',\n\t\t\t\t\t\tdisabled && 'opacity-40',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\taria-hidden={ ! isOpen }\n\t\t\t\t\trole=\"region\"\n\t\t\t\t>\n\t\t\t\t\t<div className={ cn( contentPaddingClasses ) }>{ children }</div>\n\t\t\t\t</motion.div>\n\t\t\t) }\n\t\t</AnimatePresence>\n\t);\n};\n\nAccordionContent.displayName = 'Accordion.Content';\n\nexport default Object.assign( Accordion, {\n\tItem: AccordionItem,\n\tTrigger: AccordionTrigger,\n\tContent: AccordionContent,\n} );\n"],"names":["Accordion","type","defaultValue","autoClose","disabled","children","className","activeItems","setActiveItems","useState","handleToggle","value","prev","item","jsx","cn","React","child","isCollapsible","open","AccordionItem","isOpen","onToggle","typeClasses","AccordionTrigger","onClick","iconType","collapsible","tag","props","paddingClasses","renderIcon","ChevronDown","motion","Minus","Plus","jsxs","callAll","AccordionContent","contentVariants","contentPaddingClasses","AnimatePresence","accordion"],"mappings":"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"}