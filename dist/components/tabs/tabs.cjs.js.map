{"version":3,"file":"tabs.cjs.js","sources":["../../../src/components/tabs/tabs.tsx"],"sourcesContent":["import React, {\n\tuseCallback,\n\tforwardRef,\n\tisValidElement,\n\tcreateContext,\n\tuseContext,\n\ttype ReactNode,\n} from 'react';\nimport { cn } from '@/utilities/functions';\nimport { LayoutGroup, motion } from 'framer-motion';\nimport { nanoid } from 'nanoid';\n\ndeclare type Ref = HTMLButtonElement;\ndeclare type OnChangeValue = { slug: string; text: string };\ndeclare type InternalOnChange = (\n\tevent: React.MouseEvent<HTMLButtonElement>,\n\tvalue: OnChangeValue\n) => void;\n\nexport interface TabsGroupProps {\n\t/** Controls the active tab. */\n\tactiveItem?: string | null;\n\t/** Callback when the active item changes. */\n\tonChange?: ( {\n\t\tevent,\n\t\tvalue,\n\t}: {\n\t\tevent: React.MouseEvent<HTMLButtonElement>;\n\t\tvalue: OnChangeValue;\n\t} ) => void;\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\t/** Defines the size of the tabs. */\n\tsize?: 'xs' | 'sm' | 'md' | 'lg';\n\t/** Defines the orientation of the tabs. */\n\torientation?: 'horizontal' | 'vertical';\n\t/** Defines the style variant of the tabs. */\n\tvariant?: 'pill' | 'rounded' | 'underline';\n\t/** Defines the position of the icon. */\n\ticonPosition?: 'left' | 'right';\n\t/** Defines the width of the tabs. */\n\twidth?: 'auto' | 'full';\n\t/** Tabs to display in the group. */\n\tchildren: ReactNode;\n}\n\nexport interface TabProps {\n\t/** Unique identifier for the tab. */\n\tslug: string;\n\t/** Text to display in the tab. */\n\ttext: string;\n\t/** Icon to display in the tab. */\n\ticon?: ReactNode;\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\t/** Disables the tab. */\n\tdisabled?: boolean;\n\t/** Badge to display in the tab. */\n\tbadge?: ReactNode;\n}\n\n// Context for Tab Panels.\nconst TabsContext = createContext<Partial<Record<string, unknown>>>( {} );\nconst useTabs = () => useContext( TabsContext );\n\n// Context for managing the TabsGroup state.\nconst TabsGroupContext = createContext<{\n\tactiveItem: string | null;\n\tonChange: InternalOnChange;\n\tsize: 'xs' | 'sm' | 'md' | 'lg';\n\tvariant: 'pill' | 'rounded' | 'underline';\n\torientation: 'horizontal' | 'vertical';\n\ticonPosition: 'left' | 'right';\n\twidth: 'auto' | 'full';\n} | null>( null );\n\n// Hook to use the TabsGroup context.\nconst useTabsGroup = () => useContext( TabsGroupContext );\n\n// TabsGroup component to wrap Tab components.\nexport const TabsGroup = ( {\n\tchildren,\n\tactiveItem: activeTabSlug = null, // The currently active item in the group.\n\tonChange, // Callback when the active item changes.\n\tclassName, // Additional class names for styling.\n\tsize = 'sm', // Size of the tabs in the group ('xs', 'sm', 'md', 'lg').\n\torientation = 'horizontal', // Orientation of the tabs ('horizontal', 'vertical').\n\tvariant = 'pill', // Style variant of the tabs ('pill', 'rounded', 'underline').\n\ticonPosition = 'left', // Position of the icon in the tab ('left' or 'right').\n\twidth = 'full', // Width of the tabs ('auto' or 'full').\n}: TabsGroupProps ) => {\n\tconst tabGroupId = nanoid();\n\tconst tabsState = useTabs();\n\n\t// Determine the active item based on the activeTabSlug prop.\n\tconst activeItem =\n\t\t( tabsState?.activeItem as string | null ) || activeTabSlug;\n\n\t// Handle change event.\n\tconst handleChange: InternalOnChange = useCallback(\n\t\t( event, value ) => {\n\t\t\tif ( onChange ) {\n\t\t\t\tonChange( { event, value } );\n\t\t\t}\n\t\t},\n\t\t[ onChange ]\n\t);\n\n\t// Determine styles based on the variant and orientation.\n\tlet borderRadius = 'rounded-full',\n\t\tpadding = 'p-1',\n\t\tgap,\n\t\tborder = 'ring-1 ring-tab-border';\n\n\tif ( orientation === 'vertical' ) {\n\t\tgap = 'gap-0.5';\n\t} else if ( variant === 'rounded' || variant === 'pill' ) {\n\t\tif ( size === 'xs' || size === 'sm' ) {\n\t\t\tgap = 'gap-0.5';\n\t\t} else if ( size === 'md' || size === 'lg' ) {\n\t\t\tgap = 'gap-1';\n\t\t}\n\t}\n\n\tif ( variant === 'rounded' || orientation === 'vertical' ) {\n\t\tborderRadius = 'rounded-md';\n\t} else if ( variant === 'underline' ) {\n\t\tborderRadius = 'rounded-none';\n\t\tpadding = 'p-0';\n\t\tborder =\n\t\t\t'border-t-0 border-r-0 border-l-0 border-b border-solid border-tab-border';\n\t\tif ( size === 'xs' ) {\n\t\t\tgap = 'gap-0';\n\t\t} else if ( size === 'sm' ) {\n\t\t\tgap = 'gap-2.5';\n\t\t} else if ( size === 'md' || size === 'lg' ) {\n\t\t\tgap = 'gap-3';\n\t\t}\n\t}\n\n\t// Determine width classes.\n\tconst widthClasses = width === 'full' ? 'w-full' : '';\n\t// Determine orientation classes.\n\tconst orientationClasses = orientation === 'vertical' ? 'flex-col' : '';\n\n\t// Base classes for the TabsGroup.\n\tconst baseClasses = `box-border [&>*]:box-border flex items-center ${ widthClasses } ${ orientationClasses }`;\n\n\t// Container background color.\n\tconst backgroundColorClass =\n\t\tvariant !== 'underline' ? 'bg-tab-background' : '';\n\n\t// Merge classes.\n\tconst groupClassName = cn(\n\t\tbaseClasses,\n\t\tborderRadius,\n\t\tpadding,\n\t\tgap,\n\t\tborder,\n\t\tbackgroundColorClass,\n\t\tclassName\n\t);\n\n\treturn (\n\t\t<div className={ groupClassName }>\n\t\t\t<TabsGroupContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\tactiveItem,\n\t\t\t\t\tonChange: handleChange,\n\t\t\t\t\tsize,\n\t\t\t\t\tvariant,\n\t\t\t\t\torientation,\n\t\t\t\t\ticonPosition,\n\t\t\t\t\twidth,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<LayoutGroup id={ tabGroupId }>\n\t\t\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn React.cloneElement( child );\n\t\t\t\t\t} ) }\n\t\t\t\t</LayoutGroup>\n\t\t\t</TabsGroupContext.Provider>\n\t\t</div>\n\t);\n};\nTabsGroup.displayName = 'Tabs.Group';\n\n// Tab component to be used within a TabsGroup.\nexport const Tab = forwardRef<Ref, TabProps>(\n\t(\n\t\t{\n\t\t\tslug,\n\t\t\ttext,\n\t\t\ticon,\n\t\t\tclassName,\n\t\t\tdisabled = false,\n\t\t\tbadge = null,\n\t\t\t...rest\n\t\t},\n\t\tref\n\t) => {\n\t\tconst providerValue = useTabsGroup();\n\n\t\tif ( ! providerValue ) {\n\t\t\tthrow new Error( 'Tab should be used inside Tabs Group' );\n\t\t}\n\n\t\tconst {\n\t\t\tactiveItem,\n\t\t\tonChange,\n\t\t\tsize,\n\t\t\tvariant,\n\t\t\torientation,\n\t\t\ticonPosition,\n\t\t\twidth,\n\t\t} = providerValue;\n\n\t\t// Determine size classes.\n\t\tconst sizes = {\n\t\t\txs: 'px-1.5 py-0.5 text-xs [&_svg]:size-3',\n\t\t\tsm:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'py-1.5 text-sm [&_svg]:size-4'\n\t\t\t\t\t: 'px-3 py-1.5 text-sm [&_svg]:size-4',\n\t\t\tmd:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'py-2 text-base [&_svg]:size-5'\n\t\t\t\t\t: 'px-3.5 py-1.5 text-base [&_svg]:size-5',\n\t\t\tlg:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'p-2.5 text-lg [&_svg]:size-6'\n\t\t\t\t\t: 'px-3.5 py-1.5 text-lg [&_svg]:size-6',\n\t\t}[ size ];\n\n\t\t// Determine width and orientation classes for tabs.\n\t\tconst fullWidth = width === 'full' ? 'flex-1' : '';\n\t\tconst orientationClasses =\n\t\t\torientation === 'vertical' ? 'w-full justify-between' : '';\n\n\t\t// Base classes for the Tab.\n\t\tconst baseClasses = cn(\n\t\t\t'relative border-none bg-transparent text-text-secondary cursor-pointer flex items-center justify-center transition-[box-shadow,color,background-color] duration-200',\n\t\t\tfullWidth,\n\t\t\torientationClasses\n\t\t);\n\n\t\tconst borderClasses = 'border-none';\n\n\t\tlet variantClasses = 'rounded-full';\n\t\tif ( variant === 'rounded' ) {\n\t\t\tvariantClasses = 'rounded-md';\n\t\t} else if ( variant === 'underline' ) {\n\t\t\tvariantClasses = 'rounded-none';\n\t\t}\n\n\t\t// Additional classes.\n\t\tconst hoverClasses = 'hover:text-text-primary group';\n\t\tconst focusClasses = 'focus:outline-none';\n\t\tconst disabledClasses = disabled\n\t\t\t? 'text-text-disabled cursor-not-allowed hover:text-text-disabled'\n\t\t\t: '';\n\t\tconst activeClasses =\n\t\t\tactiveItem === slug\n\t\t\t\t? 'bg-background-primary text-text-primary shadow-sm'\n\t\t\t\t: '';\n\n\t\t// Merge classes.\n\t\tconst tabClassName = cn(\n\t\t\tbaseClasses,\n\t\t\tborderClasses,\n\t\t\tvariantClasses,\n\t\t\thoverClasses,\n\t\t\tfocusClasses,\n\t\t\tsizes,\n\t\t\tactiveClasses,\n\t\t\tdisabledClasses,\n\t\t\tclassName\n\t\t);\n\n\t\tconst iconParentClasses = cn(\n\t\t\t'flex items-center gap-1 group-hover:text-text-primary',\n\t\t\tdisabled && 'group-hover:text-text-disabled'\n\t\t);\n\n\t\t// Handle click event.\n\t\tconst handleClick = ( event: React.MouseEvent<HTMLButtonElement> ) => {\n\t\t\tonChange( event, { slug, text } );\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.button\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ tabClassName }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonClick={ handleClick }\n\t\t\t\t{ ...rest }\n\t\t\t\tlayoutRoot\n\t\t\t>\n\t\t\t\t{ activeItem === slug && variant === 'underline' && (\n\t\t\t\t\t<motion.span\n\t\t\t\t\t\tlayoutId=\"underline\"\n\t\t\t\t\t\tlayoutDependency={ activeItem }\n\t\t\t\t\t\tclassName=\"absolute right-0 left-0 -bottom-px h-px bg-border-interactive\"\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<span className={ iconParentClasses }>\n\t\t\t\t\t{ iconPosition === 'left' && icon && (\n\t\t\t\t\t\t<span className=\"mr-1 contents center-center transition duration-150\">\n\t\t\t\t\t\t\t{ icon }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t\t{ text }\n\t\t\t\t\t{ iconPosition === 'right' && icon && (\n\t\t\t\t\t\t<span className=\"ml-1 contents center-center transition duration-150\">\n\t\t\t\t\t\t\t{ icon }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t</span>\n\t\t\t\t{ badge && isValidElement( badge ) && badge }\n\t\t\t</motion.button>\n\t\t);\n\t}\n);\nTab.displayName = 'Tabs.Tab';\n\nexport interface TabsProps {\n\t/** The active tab value to identify active tab. */\n\tactiveItem: string | null;\n\t/** Tabs and their content to display. */\n\tchildren: ReactNode;\n}\n\nconst Tabs = ( { activeItem, children }: TabsProps ) => {\n\treturn (\n\t\t<TabsContext.Provider value={ { activeItem } }>\n\t\t\t{ children }\n\t\t</TabsContext.Provider>\n\t);\n};\n\nexport interface TabPanelProps {\n\t/** Unique identifier for the tab panel that is used for the tab. */\n\tslug: string;\n\t/** Content to display in the tab panel. */\n\tchildren: ReactNode;\n}\n\nexport const TabPanel = ( { slug, children }: TabPanelProps ) => {\n\tconst providerValue = useTabs();\n\n\tif ( ! providerValue ) {\n\t\tthrow new Error( 'TabPanel should be used inside Tabs' );\n\t}\n\n\treturn slug === providerValue.activeItem ? <>{ children }</> : null;\n};\nTabPanel.displayName = 'Tabs.Panel';\n\nTabs.Group = TabsGroup;\nTabs.Tab = Tab;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n"],"names":["TabsContext","createContext","useTabs","useContext","TabsGroupContext","useTabsGroup","TabsGroup","children","activeTabSlug","onChange","className","size","orientation","variant","iconPosition","width","tabGroupId","nanoid","activeItem","handleChange","useCallback","event","value","borderRadius","padding","gap","border","baseClasses","backgroundColorClass","groupClassName","cn","jsx","LayoutGroup","child","isValidElement","React","Tab","forwardRef","slug","text","icon","disabled","badge","rest","ref","providerValue","sizes","fullWidth","orientationClasses","borderClasses","variantClasses","hoverClasses","focusClasses","disabledClasses","activeClasses","tabClassName","iconParentClasses","handleClick","jsxs","motion","Tabs","TabPanel","Fragment"],"mappings":"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"}