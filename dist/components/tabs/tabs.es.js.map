{"version":3,"file":"tabs.es.js","sources":["../../../src/components/tabs/tabs.tsx"],"sourcesContent":["import React, {\n\tuseCallback,\n\tforwardRef,\n\tisValidElement,\n\tcreateContext,\n\tuseContext,\n\ttype ReactNode,\n} from 'react';\nimport { cn } from '@/utilities/functions';\nimport { LayoutGroup, motion } from 'framer-motion';\nimport { nanoid } from 'nanoid';\n\ndeclare type Ref = HTMLButtonElement;\ndeclare type OnChangeValue = { slug: string; text: string };\ndeclare type InternalOnChange = (\n\tevent: React.MouseEvent<HTMLButtonElement>,\n\tvalue: OnChangeValue\n) => void;\n\nexport interface TabsGroupProps {\n\t/** Controls the active tab. */\n\tactiveItem?: string | null;\n\t/** Callback when the active item changes. */\n\tonChange?: ( {\n\t\tevent,\n\t\tvalue,\n\t}: {\n\t\tevent: React.MouseEvent<HTMLButtonElement>;\n\t\tvalue: OnChangeValue;\n\t} ) => void;\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\t/** Defines the size of the tabs. */\n\tsize?: 'xs' | 'sm' | 'md' | 'lg';\n\t/** Defines the orientation of the tabs. */\n\torientation?: 'horizontal' | 'vertical';\n\t/** Defines the style variant of the tabs. */\n\tvariant?: 'pill' | 'rounded' | 'underline';\n\t/** Defines the position of the icon. */\n\ticonPosition?: 'left' | 'right';\n\t/** Defines the width of the tabs. */\n\twidth?: 'auto' | 'full';\n\t/** Tabs to display in the group. */\n\tchildren: ReactNode;\n}\n\nexport interface TabProps {\n\t/** Unique identifier for the tab. */\n\tslug: string;\n\t/** Text to display in the tab. */\n\ttext: string;\n\t/** Icon to display in the tab. */\n\ticon?: ReactNode;\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\t/** Disables the tab. */\n\tdisabled?: boolean;\n\t/** Badge to display in the tab. */\n\tbadge?: ReactNode;\n}\n\n// Context for Tab Panels.\nconst TabsContext = createContext<Partial<Record<string, unknown>>>( {} );\nconst useTabs = () => useContext( TabsContext );\n\n// Context for managing the TabsGroup state.\nconst TabsGroupContext = createContext<{\n\tactiveItem: string | null;\n\tonChange: InternalOnChange;\n\tsize: 'xs' | 'sm' | 'md' | 'lg';\n\tvariant: 'pill' | 'rounded' | 'underline';\n\torientation: 'horizontal' | 'vertical';\n\ticonPosition: 'left' | 'right';\n\twidth: 'auto' | 'full';\n} | null>( null );\n\n// Hook to use the TabsGroup context.\nconst useTabsGroup = () => useContext( TabsGroupContext );\n\n// TabsGroup component to wrap Tab components.\nexport const TabsGroup = ( {\n\tchildren,\n\tactiveItem: activeTabSlug = null, // The currently active item in the group.\n\tonChange, // Callback when the active item changes.\n\tclassName, // Additional class names for styling.\n\tsize = 'sm', // Size of the tabs in the group ('xs', 'sm', 'md', 'lg').\n\torientation = 'horizontal', // Orientation of the tabs ('horizontal', 'vertical').\n\tvariant = 'pill', // Style variant of the tabs ('pill', 'rounded', 'underline').\n\ticonPosition = 'left', // Position of the icon in the tab ('left' or 'right').\n\twidth = 'full', // Width of the tabs ('auto' or 'full').\n}: TabsGroupProps ) => {\n\tconst tabGroupId = nanoid();\n\tconst tabsState = useTabs();\n\n\t// Determine the active item based on the activeTabSlug prop.\n\tconst activeItem =\n\t\t( tabsState?.activeItem as string | null ) || activeTabSlug;\n\n\t// Handle change event.\n\tconst handleChange: InternalOnChange = useCallback(\n\t\t( event, value ) => {\n\t\t\tif ( onChange ) {\n\t\t\t\tonChange( { event, value } );\n\t\t\t}\n\t\t},\n\t\t[ onChange ]\n\t);\n\n\t// Determine styles based on the variant and orientation.\n\tlet borderRadius = 'rounded-full',\n\t\tpadding = 'p-1',\n\t\tgap,\n\t\tborder = 'ring-1 ring-tab-border';\n\n\tif ( orientation === 'vertical' ) {\n\t\tgap = 'gap-0.5';\n\t} else if ( variant === 'rounded' || variant === 'pill' ) {\n\t\tif ( size === 'xs' || size === 'sm' ) {\n\t\t\tgap = 'gap-0.5';\n\t\t} else if ( size === 'md' || size === 'lg' ) {\n\t\t\tgap = 'gap-1';\n\t\t}\n\t}\n\n\tif ( variant === 'rounded' || orientation === 'vertical' ) {\n\t\tborderRadius = 'rounded-md';\n\t} else if ( variant === 'underline' ) {\n\t\tborderRadius = 'rounded-none';\n\t\tpadding = 'p-0';\n\t\tborder =\n\t\t\t'border-t-0 border-r-0 border-l-0 border-b border-solid border-tab-border';\n\t\tif ( size === 'xs' ) {\n\t\t\tgap = 'gap-0';\n\t\t} else if ( size === 'sm' ) {\n\t\t\tgap = 'gap-2.5';\n\t\t} else if ( size === 'md' || size === 'lg' ) {\n\t\t\tgap = 'gap-3';\n\t\t}\n\t}\n\n\t// Determine width classes.\n\tconst widthClasses = width === 'full' ? 'w-full' : '';\n\t// Determine orientation classes.\n\tconst orientationClasses = orientation === 'vertical' ? 'flex-col' : '';\n\n\t// Base classes for the TabsGroup.\n\tconst baseClasses = `box-border [&>*]:box-border flex items-center ${ widthClasses } ${ orientationClasses }`;\n\n\t// Container background color.\n\tconst backgroundColorClass =\n\t\tvariant !== 'underline' ? 'bg-tab-background' : '';\n\n\t// Merge classes.\n\tconst groupClassName = cn(\n\t\tbaseClasses,\n\t\tborderRadius,\n\t\tpadding,\n\t\tgap,\n\t\tborder,\n\t\tbackgroundColorClass,\n\t\tclassName\n\t);\n\n\treturn (\n\t\t<div className={ groupClassName }>\n\t\t\t<TabsGroupContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\tactiveItem,\n\t\t\t\t\tonChange: handleChange,\n\t\t\t\t\tsize,\n\t\t\t\t\tvariant,\n\t\t\t\t\torientation,\n\t\t\t\t\ticonPosition,\n\t\t\t\t\twidth,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<LayoutGroup id={ tabGroupId }>\n\t\t\t\t\t{ React.Children.map( children, ( child ) => {\n\t\t\t\t\t\tif ( ! isValidElement( child ) ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn React.cloneElement( child );\n\t\t\t\t\t} ) }\n\t\t\t\t</LayoutGroup>\n\t\t\t</TabsGroupContext.Provider>\n\t\t</div>\n\t);\n};\nTabsGroup.displayName = 'Tabs.Group';\n\n// Tab component to be used within a TabsGroup.\nexport const Tab = forwardRef<Ref, TabProps>(\n\t(\n\t\t{\n\t\t\tslug,\n\t\t\ttext,\n\t\t\ticon,\n\t\t\tclassName,\n\t\t\tdisabled = false,\n\t\t\tbadge = null,\n\t\t\t...rest\n\t\t},\n\t\tref\n\t) => {\n\t\tconst providerValue = useTabsGroup();\n\n\t\tif ( ! providerValue ) {\n\t\t\tthrow new Error( 'Tab should be used inside Tabs Group' );\n\t\t}\n\n\t\tconst {\n\t\t\tactiveItem,\n\t\t\tonChange,\n\t\t\tsize,\n\t\t\tvariant,\n\t\t\torientation,\n\t\t\ticonPosition,\n\t\t\twidth,\n\t\t} = providerValue;\n\n\t\t// Determine size classes.\n\t\tconst sizes = {\n\t\t\txs: 'px-1.5 py-0.5 text-xs [&_svg]:size-3',\n\t\t\tsm:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'py-1.5 text-sm [&_svg]:size-4'\n\t\t\t\t\t: 'px-3 py-1.5 text-sm [&_svg]:size-4',\n\t\t\tmd:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'py-2 text-base [&_svg]:size-5'\n\t\t\t\t\t: 'px-3.5 py-1.5 text-base [&_svg]:size-5',\n\t\t\tlg:\n\t\t\t\tvariant === 'underline'\n\t\t\t\t\t? 'p-2.5 text-lg [&_svg]:size-6'\n\t\t\t\t\t: 'px-3.5 py-1.5 text-lg [&_svg]:size-6',\n\t\t}[ size ];\n\n\t\t// Determine width and orientation classes for tabs.\n\t\tconst fullWidth = width === 'full' ? 'flex-1' : '';\n\t\tconst orientationClasses =\n\t\t\torientation === 'vertical' ? 'w-full justify-between' : '';\n\n\t\t// Base classes for the Tab.\n\t\tconst baseClasses = cn(\n\t\t\t'relative border-none bg-transparent text-text-secondary cursor-pointer flex items-center justify-center transition-[box-shadow,color,background-color] duration-200',\n\t\t\tfullWidth,\n\t\t\torientationClasses\n\t\t);\n\n\t\tconst borderClasses = 'border-none';\n\n\t\tlet variantClasses = 'rounded-full';\n\t\tif ( variant === 'rounded' ) {\n\t\t\tvariantClasses = 'rounded-md';\n\t\t} else if ( variant === 'underline' ) {\n\t\t\tvariantClasses = 'rounded-none';\n\t\t}\n\n\t\t// Additional classes.\n\t\tconst hoverClasses = 'hover:text-text-primary group';\n\t\tconst focusClasses = 'focus:outline-none';\n\t\tconst disabledClasses = disabled\n\t\t\t? 'text-text-disabled cursor-not-allowed hover:text-text-disabled'\n\t\t\t: '';\n\t\tconst activeClasses =\n\t\t\tactiveItem === slug\n\t\t\t\t? 'bg-background-primary text-text-primary shadow-sm'\n\t\t\t\t: '';\n\n\t\t// Merge classes.\n\t\tconst tabClassName = cn(\n\t\t\tbaseClasses,\n\t\t\tborderClasses,\n\t\t\tvariantClasses,\n\t\t\thoverClasses,\n\t\t\tfocusClasses,\n\t\t\tsizes,\n\t\t\tactiveClasses,\n\t\t\tdisabledClasses,\n\t\t\tclassName\n\t\t);\n\n\t\tconst iconParentClasses = cn(\n\t\t\t'flex items-center gap-1 group-hover:text-text-primary',\n\t\t\tdisabled && 'group-hover:text-text-disabled'\n\t\t);\n\n\t\t// Handle click event.\n\t\tconst handleClick = ( event: React.MouseEvent<HTMLButtonElement> ) => {\n\t\t\tonChange( event, { slug, text } );\n\t\t};\n\n\t\treturn (\n\t\t\t<motion.button\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ tabClassName }\n\t\t\t\tdisabled={ disabled }\n\t\t\t\tonClick={ handleClick }\n\t\t\t\t{ ...rest }\n\t\t\t\tlayoutRoot\n\t\t\t>\n\t\t\t\t{ activeItem === slug && variant === 'underline' && (\n\t\t\t\t\t<motion.span\n\t\t\t\t\t\tlayoutId=\"underline\"\n\t\t\t\t\t\tlayoutDependency={ activeItem }\n\t\t\t\t\t\tclassName=\"absolute right-0 left-0 -bottom-px h-px bg-border-interactive\"\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<span className={ iconParentClasses }>\n\t\t\t\t\t{ iconPosition === 'left' && icon && (\n\t\t\t\t\t\t<span className=\"mr-1 contents center-center transition duration-150\">\n\t\t\t\t\t\t\t{ icon }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t\t{ text }\n\t\t\t\t\t{ iconPosition === 'right' && icon && (\n\t\t\t\t\t\t<span className=\"ml-1 contents center-center transition duration-150\">\n\t\t\t\t\t\t\t{ icon }\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) }\n\t\t\t\t</span>\n\t\t\t\t{ badge && isValidElement( badge ) && badge }\n\t\t\t</motion.button>\n\t\t);\n\t}\n);\nTab.displayName = 'Tabs.Tab';\n\nexport interface TabsProps {\n\t/** The active tab value to identify active tab. */\n\tactiveItem: string | null;\n\t/** Tabs and their content to display. */\n\tchildren: ReactNode;\n}\n\nconst Tabs = ( { activeItem, children }: TabsProps ) => {\n\treturn (\n\t\t<TabsContext.Provider value={ { activeItem } }>\n\t\t\t{ children }\n\t\t</TabsContext.Provider>\n\t);\n};\n\nexport interface TabPanelProps {\n\t/** Unique identifier for the tab panel that is used for the tab. */\n\tslug: string;\n\t/** Content to display in the tab panel. */\n\tchildren: ReactNode;\n}\n\nexport const TabPanel = ( { slug, children }: TabPanelProps ) => {\n\tconst providerValue = useTabs();\n\n\tif ( ! providerValue ) {\n\t\tthrow new Error( 'TabPanel should be used inside Tabs' );\n\t}\n\n\treturn slug === providerValue.activeItem ? <>{ children }</> : null;\n};\nTabPanel.displayName = 'Tabs.Panel';\n\nTabs.Group = TabsGroup;\nTabs.Tab = Tab;\nTabs.Panel = TabPanel;\n\nexport default Tabs;\n"],"names":["TabsContext","createContext","useTabs","useContext","TabsGroupContext","useTabsGroup","TabsGroup","children","activeTabSlug","onChange","className","size","orientation","variant","iconPosition","width","tabGroupId","nanoid","activeItem","handleChange","useCallback","event","value","borderRadius","padding","gap","border","groupClassName","cn","jsx","LayoutGroup","child","isValidElement","React","Tab","forwardRef","slug","text","icon","disabled","badge","rest","ref","providerValue","sizes","baseClasses","borderClasses","variantClasses","tabClassName","iconParentClasses","handleClick","jsxs","motion","Tabs","TabPanel","Fragment"],"mappings":";;;;;AA8DA,MAAMA,IAAcC,EAAiD,EAAG,GAClEC,IAAU,MAAMC,EAAYH,CAAY,GAGxCI,IAAmBH,EAQd,IAAK,GAGVI,IAAe,MAAMF,EAAYC,CAAiB,GAG3CE,IAAY,CAAE;AAAA,EAC1B,UAAAC;AAAA,EACA,YAAYC,IAAgB;AAAA;AAAA,EAC5B,UAAAC;AAAA;AAAA,EACA,WAAAC;AAAA;AAAA,EACA,MAAAC,IAAO;AAAA;AAAA,EACP,aAAAC,IAAc;AAAA;AAAA,EACd,SAAAC,IAAU;AAAA;AAAA,EACV,cAAAC,IAAe;AAAA;AAAA,EACf,OAAAC,IAAQ;AAAA;AACT,MAAuB;AACtB,QAAMC,IAAaC,EAAO,GAIpBC,IAHYhB,EAAQ,GAIZ,cAAiCM,GAGzCW,IAAiCC;AAAA,IACtC,CAAEC,GAAOC,MAAW;AACnB,MAAKb,KACMA,EAAA,EAAE,OAAAY,GAAO,OAAAC,GAAQ;AAAA,IAE7B;AAAA,IACA,CAAEb,CAAS;AAAA,EACZ;AAGA,MAAIc,IAAe,gBAClBC,IAAU,OACVC,GACAC,IAAS;AAEV,EAAKd,MAAgB,aACda,IAAA,aACKZ,MAAY,aAAaA,MAAY,YAC3CF,MAAS,QAAQA,MAAS,OACxBc,IAAA,aACKd,MAAS,QAAQA,MAAS,UAC/Bc,IAAA,WAIHZ,MAAY,aAAaD,MAAgB,aAC9BW,IAAA,eACJV,MAAY,gBACRU,IAAA,gBACLC,IAAA,OAETE,IAAA,4EACIf,MAAS,OACPc,IAAA,UACKd,MAAS,OACdc,IAAA,aACKd,MAAS,QAAQA,MAAS,UAC/Bc,IAAA;AAiBR,QAAME,IAAiBC;AAAA,IAPH,iDALCb,MAAU,SAAS,WAAW,EAKgC,IAHxDH,MAAgB,aAAa,aAAa,EAGsC;AAAA,IAS1GW;AAAA,IACAC;AAAA,IACAC;AAAA,IACAC;AAAA,IARAb,MAAY,cAAc,sBAAsB;AAAA,IAUhDH;AAAA,EACD;AAGC,SAAA,gBAAAmB,EAAC,OAAI,EAAA,WAAYF,GAChB,UAAA,gBAAAE;AAAA,IAACzB,EAAiB;AAAA,IAAjB;AAAA,MACA,OAAQ;AAAA,QACP,YAAAc;AAAA,QACA,UAAUC;AAAA,QACV,MAAAR;AAAA,QACA,SAAAE;AAAA,QACA,aAAAD;AAAA,QACA,cAAAE;AAAA,QACA,OAAAC;AAAA,MACD;AAAA,MAEA,UAAA,gBAAAc,EAACC,KAAY,IAAKd,GACf,YAAM,SAAS,IAAKT,GAAU,CAAEwB,MAC1BC,EAAgBD,CAAM,IAGtBE,EAAM,aAAcF,CAAM,IAFzB,IAGP,EACH,CAAA;AAAA,IAAA;AAAA,EAAA,GAEF;AAEF;AACAzB,EAAU,cAAc;AAGjB,MAAM4B,IAAMC;AAAA,EAClB,CACC;AAAA,IACC,MAAAC;AAAA,IACA,MAAAC;AAAA,IACA,MAAAC;AAAA,IACA,WAAA5B;AAAA,IACA,UAAA6B,IAAW;AAAA,IACX,OAAAC,IAAQ;AAAA,IACR,GAAGC;AAAA,KAEJC,MACI;AACJ,UAAMC,IAAgBtC,EAAa;AAEnC,QAAK,CAAEsC;AACA,YAAA,IAAI,MAAO,sCAAuC;AAGnD,UAAA;AAAA,MACL,YAAAzB;AAAA,MACA,UAAAT;AAAA,MACA,MAAAE;AAAA,MACA,SAAAE;AAAA,MACA,aAAAD;AAAA,MACA,cAAAE;AAAA,MACA,OAAAC;AAAA,IAAA,IACG4B,GAGEC,IAAQ;AAAA,MACb,IAAI;AAAA,MACJ,IACC/B,MAAY,cACT,kCACA;AAAA,MACJ,IACCA,MAAY,cACT,kCACA;AAAA,MACJ,IACCA,MAAY,cACT,iCACA;AAAA,MACFF,CAAK,GAQFkC,IAAcjB;AAAA,MACnB;AAAA,MANiBb,MAAU,SAAS,WAAW;AAAA,MAE/CH,MAAgB,aAAa,2BAA2B;AAAA,IAOzD,GAEMkC,IAAgB;AAEtB,QAAIC,IAAiB;AACrB,IAAKlC,MAAY,YACCkC,IAAA,eACNlC,MAAY,gBACNkC,IAAA;AAelB,UAAMC,IAAepB;AAAA,MACpBiB;AAAA,MACAC;AAAA,MACAC;AAAA,MAdoB;AAAA,MACA;AAAA,MAgBpBH;AAAA,MAXA1B,MAAekB,IACZ,sDACA;AAAA,MANoBG,IACrB,mEACA;AAAA,MAgBF7B;AAAA,IACD,GAEMuC,IAAoBrB;AAAA,MACzB;AAAA,MACAW,KAAY;AAAA,IACb,GAGMW,IAAc,CAAE7B,MAAgD;AACrE,MAAAZ,EAAUY,GAAO,EAAE,MAAAe,GAAM,MAAAC,EAAA,CAAO;AAAA,IACjC;AAGC,WAAA,gBAAAc;AAAA,MAACC,EAAO;AAAA,MAAP;AAAA,QACA,KAAAV;AAAA,QACA,WAAYM;AAAA,QACZ,UAAAT;AAAA,QACA,SAAUW;AAAA,QACR,GAAGT;AAAA,QACL,YAAU;AAAA,QAER,UAAA;AAAA,UAAevB,MAAAkB,KAAQvB,MAAY,eACpC,gBAAAgB;AAAA,YAACuB,EAAO;AAAA,YAAP;AAAA,cACA,UAAS;AAAA,cACT,kBAAmBlC;AAAA,cACnB,WAAU;AAAA,YAAA;AAAA,UACX;AAAA,UAED,gBAAAiC,EAAC,QAAK,EAAA,WAAYF,GACf,UAAA;AAAA,YAAAnC,MAAiB,UAAUwB,KAC5B,gBAAAT,EAAC,QAAK,EAAA,WAAU,uDACb,UACHS,GAAA;AAAA,YAECD;AAAA,YACAvB,MAAiB,WAAWwB,uBAC5B,QAAK,EAAA,WAAU,uDACb,UACHA,EAAA,CAAA;AAAA,UAAA,GAEF;AAAA,UACEE,KAASR,EAAgBQ,CAAM,KAAKA;AAAA,QAAA;AAAA,MAAA;AAAA,IACvC;AAAA,EAAA;AAGH;AACAN,EAAI,cAAc;AASlB,MAAMmB,IAAO,CAAE,EAAE,YAAAnC,GAAY,UAAAX,QAE3B,gBAAAsB,EAAC7B,EAAY,UAAZ,EAAqB,OAAQ,EAAE,YAAAkB,EAAA,GAC7B,UAAAX,GACH,GAWW+C,IAAW,CAAE,EAAE,MAAAlB,GAAM,UAAA7B,QAA+B;AAChE,QAAMoC,IAAgBzC,EAAQ;AAE9B,MAAK,CAAEyC;AACA,UAAA,IAAI,MAAO,qCAAsC;AAGxD,SAAOP,MAASO,EAAc,aAAa,gBAAAd,EAAA0B,GAAA,EAAI,UAAAhD,EAAU,CAAA,IAAM;AAChE;AACA+C,EAAS,cAAc;AAEvBD,EAAK,QAAQ/C;AACb+C,EAAK,MAAMnB;AACXmB,EAAK,QAAQC;"}