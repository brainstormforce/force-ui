{"version":3,"file":"utils.es.js","sources":["../../../src/components/progress-steps/utils.tsx"],"sourcesContent":["import { cn } from '@/utilities/functions';\n\n/**\n * Helper function to generate classes for different step variants.\n *\n * @param {'dot' | 'number' | 'icon'} variant     - The type of step indicator.\n * @param {boolean}                   isCurrent   - Whether the step is the current step.\n * @param {Object}                    sizeClasses - The size classes for different step sizes.\n * @param {'sm' | 'md' | 'lg'}        size        - The size of the step indicator.\n * @return {string} The combined class names.\n */\nexport const getVariantClasses = (\n\tvariant: 'dot' | 'number' | 'icon',\n\tisCurrent: boolean,\n\tsizeClasses: { [key: string]: { dot: string; ring: string } },\n\tsize: 'sm' | 'md' | 'lg'\n): string => {\n\tconst baseClass = `absolute rounded-full transition-colors duration-500 ${ sizeClasses[ size ].dot }`;\n\n\tif ( variant === 'dot' ) {\n\t\treturn cn(\n\t\t\tbaseClass,\n\t\t\tsizeClasses[ size ].dot,\n\t\t\tisCurrent ? 'bg-brand-primary-600' : 'bg-text-tertiary'\n\t\t);\n\t}\n\n\tif ( variant === 'number' ) {\n\t\treturn cn(\n\t\t\tbaseClass,\n\t\t\tsizeClasses[ size ].dot,\n\t\t\tisCurrent ? 'text-brand-primary-600' : 'text-text-tertiary',\n\t\t\t'flex items-center justify-center'\n\t\t);\n\t}\n\n\tif ( variant === 'icon' ) {\n\t\treturn cn(\n\t\t\tbaseClass,\n\t\t\tisCurrent ? 'text-brand-primary-600' : 'text-text-tertiary',\n\t\t\t'flex items-center justify-center'\n\t\t);\n\t}\n\n\treturn '';\n};\n\n/**\n * Helper function to generate common classes for step indicators.\n *\n * @param {boolean}            isCurrent   - Whether the step is the current step.\n * @param {Object}             sizeClasses - The size classes for different step sizes.\n * @param {'sm' | 'md' | 'lg'} size        - The size of the step indicator.\n * @return {string} The combined class names.\n */\nexport const stepWrapperClasses = (\n\tisCurrent: boolean,\n\tsizeClasses: { [key: string]: { dot: string; ring: string } },\n\tsize: 'sm' | 'md' | 'lg'\n): string => {\n\treturn cn(\n\t\t'relative flex items-center rounded-full justify-center transition-colors z-10 duration-500 ring-1',\n\t\tisCurrent ? 'ring-brand-primary-600' : 'ring-border-subtle',\n\t\tsizeClasses[ size ].ring\n\t);\n};\n\n/**\n * Helper function to generate common classes for completed steps.\n *\n * @param {Object}             sizeClasses - The size classes for different step sizes.\n * @param {'sm' | 'md' | 'lg'} size        - The size of the step indicator.\n * @return {string} The combined class names.\n */\nexport const completedStepCommonClasses = (\n\tsizeClasses: { [key: string]: { dot: string; ring: string } },\n\tsize: 'sm' | 'md' | 'lg'\n) => {\n\treturn cn(\n\t\t'rounded-full text-brand-primary-600 transition-colors duration-300',\n\t\tsizeClasses[ size ].dot,\n\t\tsizeClasses[ size ].ring\n\t);\n};\n"],"names":["getVariantClasses","variant","isCurrent","sizeClasses","size","baseClass","cn","stepWrapperClasses","completedStepCommonClasses"],"mappings":";AAWO,MAAMA,IAAoB,CAChCC,GACAC,GACAC,GACAC,MACY;AACZ,QAAMC,IAAY,wDAAyDF,EAAaC,CAAK,EAAE,GAAI;AAEnG,SAAKH,MAAY,QACTK;AAAA,IACND;AAAA,IACAF,EAAaC,CAAK,EAAE;AAAA,IACpBF,IAAY,yBAAyB;AAAA,EACtC,IAGID,MAAY,WACTK;AAAA,IACND;AAAA,IACAF,EAAaC,CAAK,EAAE;AAAA,IACpBF,IAAY,2BAA2B;AAAA,IACvC;AAAA,EACD,IAGID,MAAY,SACTK;AAAA,IACND;AAAA,IACAH,IAAY,2BAA2B;AAAA,IACvC;AAAA,EACD,IAGM;AACR,GAUaK,IAAqB,CACjCL,GACAC,GACAC,MAEOE;AAAA,EACN;AAAA,EACAJ,IAAY,2BAA2B;AAAA,EACvCC,EAAaC,CAAK,EAAE;AACrB,GAUYI,IAA6B,CACzCL,GACAC,MAEOE;AAAA,EACN;AAAA,EACAH,EAAaC,CAAK,EAAE;AAAA,EACpBD,EAAaC,CAAK,EAAE;AACrB;"}