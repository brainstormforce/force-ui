{"version":3,"file":"chart-tooltip-content.es.js","sources":["../../../src/components/bar-chart/chart-tooltip-content.tsx"],"sourcesContent":["import React from 'react';\nimport { cn } from '@/utilities/functions';\n\ntype IndicatorType = 'dot' | 'line' | 'dashed';\n\ninterface PayloadItem {\n\tcolor?: string;\n\tdataKey?: string;\n\tname?: string;\n\tvalue?: number | string;\n\t[key: string]: string | number | undefined; // Allow additional properties in each payload item\n}\n\ninterface ChartTooltipContentProps {\n\tactive?: boolean;\n\tpayload?: PayloadItem[];\n\tclassName?: string;\n\tindicator?: IndicatorType; // dot, line, dashed\n\thideLabel?: boolean;\n\thideIndicator?: boolean;\n\tlabel?: string;\n\tlabelFormatter?: ( label: string ) => string;\n\tlabelClassName?: string;\n\tformatter?: ( value: number | string ) => string | number;\n\tcolor?: string;\n\tnameKey?: string;\n\tlabelKey?: string;\n}\n\nconst ChartTooltipContent = React.forwardRef<\n\tHTMLDivElement,\n\tChartTooltipContentProps\n>(\n\t(\n\t\t{\n\t\t\tactive,\n\t\t\tpayload,\n\t\t\tclassName,\n\t\t\tindicator = 'dot', //dot, line, dashed\n\t\t\thideLabel = false,\n\t\t\thideIndicator = false,\n\t\t\tlabel,\n\t\t\tlabelFormatter,\n\t\t\tlabelClassName,\n\t\t\tformatter,\n\t\t\tcolor,\n\t\t\tnameKey = 'name',\n\t\t\tlabelKey,\n\t\t},\n\t\tref\n\t) => {\n\t\tconst tooltipLabel = () => {\n\t\t\tif ( hideLabel || ! payload?.length ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst [ item ] = payload;\n\t\t\tconst value = labelFormatter\n\t\t\t\t? labelFormatter( label || '' )\n\t\t\t\t: item[ labelKey as keyof PayloadItem ] || label;\n\n\t\t\treturn value ? (\n\t\t\t\t<div className={ cn( 'font-medium', labelClassName ) }>{ value }</div>\n\t\t\t) : null;\n\t\t};\n\n\t\tif ( ! active || ! payload?.length ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst isSinglePayload = payload.length === 1 && indicator !== 'dot';\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'grid min-w-[8rem] items-start gap-1.5 rounded-lg border bg-tooltip-background-light px-3 py-2 text-xs shadow-xl',\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t{ ! isSinglePayload ? tooltipLabel() : null }\n\t\t\t\t<div className=\"grid gap-1.5\">\n\t\t\t\t\t{ payload.map( ( item, index ) => {\n\t\t\t\t\t\tconst indicatorColor = color || item.color || '#000';\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={ item.dataKey || index }\n\t\t\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t\t\t'flex w-full items-stretch gap-2',\n\t\t\t\t\t\t\t\t\tindicator === 'dot' && 'items-center'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ! hideIndicator && (\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={ cn( {\n\t\t\t\t\t\t\t\t\t\t\t'size-2.5': indicator === 'dot',\n\t\t\t\t\t\t\t\t\t\t\t'w-1 h-full': indicator === 'line',\n\t\t\t\t\t\t\t\t\t\t\t'w-0 border-[0.5px] border-dashed':\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dashed',\n\t\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t\t\t\t\tbackgroundColor:\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dot' ||\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'line'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? indicatorColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t\tborderColor:\n\t\t\t\t\t\t\t\t\t\t\t\tindicator === 'dashed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t? indicatorColor\n\t\t\t\t\t\t\t\t\t\t\t\t\t: '',\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t<div className=\"flex-1 flex justify-between items-center\">\n\t\t\t\t\t\t\t\t\t<span>{ item[ nameKey ] || item.dataKey }</span>\n\t\t\t\t\t\t\t\t\t<span className=\"font-mono font-medium\">\n\t\t\t\t\t\t\t\t\t\t{ formatter\n\t\t\t\t\t\t\t\t\t\t\t? formatter( item.value ?? '' )\n\t\t\t\t\t\t\t\t\t\t\t: ( item.value ?? '' ) }\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n);\n\nChartTooltipContent.displayName = 'ChartTooltipContent';\n\nexport default ChartTooltipContent;\n"],"names":["ChartTooltipContent","React","active","payload","className","indicator","hideLabel","hideIndicator","label","labelFormatter","labelClassName","formatter","color","nameKey","labelKey","ref","tooltipLabel","item","value","cn","isSinglePayload","jsxs","jsx","index","indicatorColor"],"mappings":";;;AA6BA,MAAMA,IAAsBC,EAAM;AAAA,EAIjC,CACC;AAAA,IACC,QAAAC;AAAA,IACA,SAAAC;AAAA,IACA,WAAAC;AAAA,IACA,WAAAC,IAAY;AAAA;AAAA,IACZ,WAAAC,IAAY;AAAA,IACZ,eAAAC,IAAgB;AAAA,IAChB,OAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,gBAAAC;AAAA,IACA,WAAAC;AAAA,IACA,OAAAC;AAAA,IACA,SAAAC,IAAU;AAAA,IACV,UAAAC;AAAA,KAEDC,MACI;AACJ,UAAMC,IAAe,MAAM;AACrB,UAAAV,KAAa,CAAEH,GAAS;AACrB,eAAA;AAGF,YAAA,CAAEc,CAAK,IAAId,GACXe,IAAQT,IACXA,EAAgBD,KAAS,EAAG,IAC5BS,EAAMH,CAA8B,KAAKN;AAErC,aAAAU,sBACL,OAAI,EAAA,WAAYC,EAAI,eAAeT,CAAe,GAAM,UAAAQ,EAAA,CAAO,IAC7D;AAAA,IACL;AAEA,QAAK,CAAEhB,KAAU,CAAEC,GAAS;AACpB,aAAA;AAGR,UAAMiB,IAAkBjB,EAAQ,WAAW,KAAKE,MAAc;AAG7D,WAAA,gBAAAgB;AAAA,MAAC;AAAA,MAAA;AAAA,QACA,KAAAN;AAAA,QACA,WAAYI;AAAA,UACX;AAAA,UACAf;AAAA,QACD;AAAA,QAEE,UAAA;AAAA,UAAEgB,IAAmC,OAAjBJ;UACtB,gBAAAM,EAAC,SAAI,WAAU,gBACZ,YAAQ,IAAK,CAAEL,GAAMM,MAAW;AAC3B,kBAAAC,IAAiBZ,KAASK,EAAK,SAAS;AAG7C,mBAAA,gBAAAI;AAAA,cAAC;AAAA,cAAA;AAAA,gBAEA,WAAYF;AAAA,kBACX;AAAA,kBACAd,MAAc,SAAS;AAAA,gBACxB;AAAA,gBAEE,UAAA;AAAA,kBAAA,CAAEE,KACH,gBAAAe;AAAA,oBAAC;AAAA,oBAAA;AAAA,sBACA,WAAYH,EAAI;AAAA,wBACf,YAAYd,MAAc;AAAA,wBAC1B,cAAcA,MAAc;AAAA,wBAC5B,oCACCA,MAAc;AAAA,sBAAA,CACd;AAAA,sBACF,OAAQ;AAAA,wBACP,iBACCA,MAAc,SACdA,MAAc,SACXmB,IACA;AAAA,wBACJ,aACCnB,MAAc,WACXmB,IACA;AAAA,sBAAA;AAAA,oBACL;AAAA,kBACD;AAAA,kBAED,gBAAAH,EAAC,OAAI,EAAA,WAAU,4CACd,UAAA;AAAA,oBAAA,gBAAAC,EAAC,QAAO,EAAA,UAAAL,EAAMJ,CAAQ,KAAKI,EAAK,SAAS;AAAA,oBACxC,gBAAAK,EAAA,QAAA,EAAK,WAAU,yBACb,UACCX,IAAAA,EAAWM,EAAK,SAAS,EAAG,IAC1BA,EAAK,SAAS,GACpB,CAAA;AAAA,kBAAA,EACD,CAAA;AAAA,gBAAA;AAAA,cAAA;AAAA,cAlCMA,EAAK,WAAWM;AAAA,YAmCvB;AAAA,UAAA,CAEA,EACH,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACD;AAAA,EAAA;AAGH;AAEAvB,EAAoB,cAAc;"}