{"version":3,"file":"switch.es.js","sources":["../../../src/components/switch/switch.tsx"],"sourcesContent":["import {\n\tuseState,\n\tuseMemo,\n\tuseCallback,\n\tforwardRef,\n\tisValidElement,\n\ttype ReactNode,\n} from 'react';\nimport { nanoid } from 'nanoid';\nimport { cn } from '@/utilities/functions';\nimport Label from '@/components/label';\n\nexport interface SwitchProps {\n\t/** Unique identifier for the switch component. */\n\tid?: string;\n\n\t/** Callback function triggered when the switch value changes. */\n\tonChange?: ( checked: boolean ) => void;\n\n\t/** Controlled value of the switch (checked or unchecked). */\n\tvalue?: boolean;\n\n\t/** Initial value of the switch (checked or unchecked) when used as an uncontrolled component. */\n\tdefaultValue?: boolean;\n\n\t/**\n\t *  Defines the size of the switch (e.g., 'xs', 'sm', 'md').\n\t *  @default 'sm'\n\t */\n\tsize?: 'xs' | 'sm' | 'md';\n\n\t/** Disables the switch if true. */\n\tdisabled?: boolean;\n\n\t/** Defines the label for the switch, can include heading and description. */\n\tlabel?: {\n\t\t/** Heading for the label. */\n\t\theading?: string;\n\n\t\t/** Description for the label. */\n\t\tdescription?: string;\n\t};\n\n\t/** Name attribute for the switch input. */\n\tname?: string;\n\n\t/** Additional CSS classes for the switch component. */\n\tclassName?: string;\n}\n\nexport const SwitchLabel = ( {\n\tlabel,\n\tswitchId,\n\tdisabled = false,\n\tchildren,\n\tsize,\n}: {\n\tlabel: SwitchProps['label'];\n\tswitchId: string;\n\tdisabled?: boolean;\n\tchildren: ReactNode;\n\tsize: SwitchProps['size'];\n} ) => {\n\tconst headingClasses = {\n\t\txs: 'text-xs leading-4 font-medium',\n\t\tsm: 'text-sm leading-5 font-medium',\n\t\tmd: 'text-base leading-6 font-medium',\n\t};\n\tconst descriptionClasses = {\n\t\txs: 'text-xs leading-4 font-normal',\n\t\tsm: 'text-sm leading-5 font-normal',\n\t\tmd: 'text-sm leading-5 font-normal',\n\t};\n\tconst gapClassNames = {\n\t\txs: 'space-y-0.5',\n\t\tsm: 'space-y-0.5',\n\t\tmd: 'space-y-1',\n\t};\n\tconst isLabelAComponent = isValidElement( label );\n\tif ( isLabelAComponent ) {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={ cn( 'inline-flex items-center gap-3', 'items-start' ) }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t\t{ label }\n\t\t\t</div>\n\t\t);\n\t}\n\tconst renderLabel = () => {\n\t\tconst { heading = '', description = '' } = label || {};\n\t\treturn (\n\t\t\t<div className={ cn( 'space-y-0.5', gapClassNames[ size! ] ) }>\n\t\t\t\t{ heading && (\n\t\t\t\t\t<Label\n\t\t\t\t\t\thtmlFor={ switchId }\n\t\t\t\t\t\tclassName={ cn( 'm-0', headingClasses[ size! ] ) }\n\t\t\t\t\t\t{ ...( disabled && { variant: 'disabled' } ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ heading }\n\t\t\t\t\t</Label>\n\t\t\t\t) }\n\t\t\t\t{ description && (\n\t\t\t\t\t<Label\n\t\t\t\t\t\ttag=\"p\"\n\t\t\t\t\t\tvariant=\"help\"\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\t'text-sm font-normal leading-5 m-0',\n\t\t\t\t\t\t\tdescriptionClasses[ size! ]\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ ...( disabled && { variant: 'disabled' } ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ description }\n\t\t\t\t\t</Label>\n\t\t\t\t) }\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst isEmptyLabel = ! label?.heading && ! label?.description;\n\tconst alignmentClass =\n\t\t! label?.heading || ! label?.description ? 'items-center' : 'items-start';\n\n\tif ( isEmptyLabel ) {\n\t\treturn children;\n\t}\n\n\treturn (\n\t\t<div className={ cn( 'inline-flex', alignmentClass, 'gap-3' ) }>\n\t\t\t{ children }\n\t\t\t{ renderLabel() }\n\t\t</div>\n\t);\n};\n\nexport const SwitchComponent = (\n\t{\n\t\tid,\n\t\tonChange,\n\t\tvalue,\n\t\tdefaultValue = false,\n\t\tsize = 'sm',\n\t\tdisabled = false,\n\t\tlabel = { heading: '', description: '' },\n\t\tname,\n\t\tclassName,\n\t\t...props\n\t}: SwitchProps,\n\tref: React.ForwardedRef<HTMLInputElement>\n) => {\n\t// For backwards compatibility.\n\tconst normalSize = ( size as SwitchProps['size'] & 'lg' ) === 'lg' ? 'md' : size;\n\n\tconst isControlled = useMemo( () => typeof value !== 'undefined', [ value ] );\n\tconst switchId = useMemo( () => ( id ? id : `switch-${ nanoid() }` ), [] );\n\tconst [ checked, setChecked ] = useState( defaultValue );\n\tconst color = 'primary';\n\n\tconst getValue = useCallback(\n\t\t() => ( isControlled ? value : checked ),\n\t\t[ isControlled, value, checked ]\n\t);\n\n\tconst handleChange = ( event: React.ChangeEvent<HTMLInputElement> ) => {\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newValue = event.target.checked;\n\t\tif ( ! isControlled ) {\n\t\t\tsetChecked( newValue );\n\t\t}\n\n\t\tif ( typeof onChange !== 'function' ) {\n\t\t\treturn;\n\t\t}\n\t\tonChange( newValue );\n\t};\n\n\tconst colorClassNames = {\n\t\tprimary: {\n\t\t\tinput: 'bg-toggle-off checked:bg-toggle-on focus:ring focus:ring-toggle-on focus:ring-offset-2 border border-solid border-toggle-off-border checked:border-toggle-on-border shadow-toggleContainer focus:outline-none checked:focus:border-toggle-on-border focus:border-toggle-off-border',\n\t\t\ttoggleDial: 'bg-toggle-dial-background shadow-toggleDial',\n\t\t},\n\t};\n\tconst colorHoverClassNames = {\n\t\tprimary: {\n\t\t\tinput: 'group-hover/switch:bg-toggle-off-hover checked:group-hover/switch:bg-toggle-on-hover checked:group-hover/switch:border-toggle-on-border',\n\t\t},\n\t};\n\n\tconst sizeClassNames = {\n\t\tmd: {\n\t\t\tcontainer: 'w-11 h-6',\n\t\t\ttoggleDial: 'size-4 peer-checked:translate-x-5',\n\t\t},\n\t\tsm: {\n\t\t\tcontainer: 'w-10 h-5',\n\t\t\ttoggleDial: 'size-3 peer-checked:translate-x-5',\n\t\t},\n\t\txs: {\n\t\t\tcontainer: 'w-8 h-4',\n\t\t\ttoggleDial: 'size-2.5 peer-checked:translate-x-3.75',\n\t\t},\n\t};\n\tconst toggleDialHoverClassNames = {\n\t\tmd: 'group-hover/switch:size-5 group-focus-within/switch:size-5 group-focus-within/switch:left-0.5 group-hover/switch:left-0.5',\n\t\tsm: 'group-hover/switch:size-4 group-focus-within/switch:size-4 group-focus-within/switch:left-0.5 group-hover/switch:left-0.5',\n\t\txs: 'group-hover/switch:size-3.25 group-focus-within/switch:size-3.25 group-focus-within/switch:left-0.5 group-hover/switch:left-0.5',\n\t};\n\n\tconst disabledClassNames = {\n\t\tinput: 'bg-toggle-off-disabled disabled:border-transparent disabled:cursor-not-allowed checked:disabled:bg-toggle-on-disabled disabled:shadow-toggle-disabled',\n\t\ttoggleDial: 'peer-disabled:cursor-not-allowed',\n\t};\n\n\treturn (\n\t\t<SwitchLabel\n\t\t\tlabel={ label }\n\t\t\tswitchId={ switchId }\n\t\t\tdisabled={ disabled }\n\t\t\tsize={ normalSize }\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'relative group/switch inline-block cursor-pointer rounded-full shrink-0',\n\t\t\t\t\tsizeClassNames[ normalSize ].container,\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tid={ switchId }\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\"peer appearance-none absolute rounded-full cursor-pointer transition-colors duration-300 h-full w-full  before:content-[''] checked:before:content-[''] m-0 checked:[background-image:none]\",\n\t\t\t\t\t\tcolorClassNames[ color ].input,\n\t\t\t\t\t\tdisabled && disabledClassNames.input,\n\t\t\t\t\t\t! disabled && colorHoverClassNames[ color ].input\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ getValue() }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\tname={ name }\n\t\t\t\t\t{ ...props }\n\t\t\t\t/>\n\t\t\t\t<label\n\t\t\t\t\thtmlFor={ switchId }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\"peer/toggle-dial bg-white border rounded-full absolute cursor-pointer shadow-md before:content[''] before:transition-opacity before:opacity-0 hover:before:opacity-10 before:hidden border-none transition-all duration-300 top-2/4 left-1 -translate-y-2/4 before:w-10 before:h-10 before:rounded-full before:absolute before:top-2/4 before:left-2/4 before:-translate-y-2/4 before:-translate-x-2/4\",\n\t\t\t\t\t\tsizeClassNames[ normalSize ].toggleDial,\n\t\t\t\t\t\tcolorClassNames[ color ].toggleDial,\n\t\t\t\t\t\tdisabled && disabledClassNames.toggleDial,\n\t\t\t\t\t\t! disabled && toggleDialHoverClassNames[ normalSize ]\n\t\t\t\t\t) }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</SwitchLabel>\n\t);\n};\nconst Switch = forwardRef( SwitchComponent );\nSwitch.displayName = 'Switch';\n\nexport default Switch;\n"],"names":["SwitchLabel","label","switchId","disabled","children","size","headingClasses","descriptionClasses","gapClassNames","isValidElement","jsxs","cn","renderLabel","heading","description","jsx","Label","isEmptyLabel","alignmentClass","SwitchComponent","id","onChange","value","defaultValue","name","className","props","ref","normalSize","isControlled","useMemo","nanoid","checked","setChecked","useState","color","getValue","useCallback","handleChange","event","newValue","colorClassNames","colorHoverClassNames","sizeClassNames","toggleDialHoverClassNames","disabledClassNames","Switch","forwardRef"],"mappings":"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"}