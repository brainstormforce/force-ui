{"version":3,"file":"mention-component.es.js","sources":["../../../../src/components/editor-input/mention-plugin/mention-component.tsx"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport {\n\t$getNodeByKey,\n\tCOMMAND_PRIORITY_LOW,\n\tKEY_ARROW_LEFT_COMMAND,\n\tKEY_ARROW_RIGHT_COMMAND,\n\t$isDecoratorNode,\n\t$isElementNode,\n\t$isTextNode,\n\tCommandListener,\n} from 'lexical';\nimport { mergeRegister } from '@lexical/utils';\nimport { Badge } from '@/components';\nimport type { TOptionItem } from '../editor-input';\n\nconst mapSizeToBadgeSize = ( size: string ) => {\n\tswitch ( size ) {\n\t\tcase 'sm':\n\t\t\treturn 'xs';\n\t\tcase 'md':\n\t\t\treturn 'sm';\n\t\tcase 'lg':\n\t\t\treturn 'md';\n\t\tdefault:\n\t\t\treturn 'sm';\n\t}\n};\n\nconst MentionComponent = ( {\n\tdata,\n\tby,\n\tsize,\n\tnodeKey,\n}: {\n\tdata: TOptionItem;\n\tby: keyof TOptionItem;\n\tsize: string;\n\tnodeKey: string;\n} ) => {\n\tconst [ editor ] = useLexicalComposerContext();\n\tconst disabled = ! editor.isEditable();\n\n\tconst removeMention = ( event: React.MouseEvent ) => {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\n\t\tif ( disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\teditor.update( () => {\n\t\t\tconst node = $getNodeByKey( nodeKey );\n\t\t\tif ( ! node ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnode.remove();\n\t\t} );\n\t};\n\n\tlet renderLabel = data as unknown as string;\n\tif ( typeof data === 'object' ) {\n\t\trenderLabel = data[ by ] as string;\n\t}\n\n\tconst onArrowLeftPress = useCallback<CommandListener<KeyboardEvent>>(\n\t\t( event ) => {\n\t\t\tconst node = $getNodeByKey( nodeKey );\n\t\t\tif ( ! node || ! node.isSelected() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet handled = false;\n\t\t\tconst nodeToSelect = node.getPreviousSibling();\n\t\t\tif ( $isElementNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.selectEnd();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( $isTextNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.select();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( $isDecoratorNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.selectNext();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( nodeToSelect === null ) {\n\t\t\t\tnode.selectPrevious();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( handled ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\treturn handled;\n\t\t},\n\t\t[ nodeKey ]\n\t);\n\n\tconst onArrowRightPress = useCallback<CommandListener<KeyboardEvent>>(\n\t\t( event ) => {\n\t\t\tconst node = $getNodeByKey( nodeKey );\n\t\t\tif ( ! node || ! node.isSelected() ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tlet handled = false;\n\t\t\tconst nodeToSelect = node.getNextSibling();\n\t\t\tif ( $isElementNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.selectStart();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( $isTextNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.select( 0, 0 );\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( $isDecoratorNode( nodeToSelect ) ) {\n\t\t\t\tnodeToSelect.selectPrevious();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( nodeToSelect === null ) {\n\t\t\t\tnode.selectNext();\n\t\t\t\thandled = true;\n\t\t\t}\n\t\t\tif ( handled ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\treturn handled;\n\t\t},\n\t\t[ nodeKey ]\n\t);\n\n\tuseEffect( () => {\n\t\tconst unregister = mergeRegister(\n\t\t\teditor.registerCommand(\n\t\t\t\tKEY_ARROW_LEFT_COMMAND,\n\t\t\t\tonArrowLeftPress,\n\t\t\t\tCOMMAND_PRIORITY_LOW\n\t\t\t),\n\t\t\teditor.registerCommand(\n\t\t\t\tKEY_ARROW_RIGHT_COMMAND,\n\t\t\t\tonArrowRightPress,\n\t\t\t\tCOMMAND_PRIORITY_LOW\n\t\t\t)\n\t\t);\n\t\treturn () => {\n\t\t\tunregister();\n\t\t};\n\t}, [ editor, onArrowLeftPress, onArrowRightPress ] );\n\n\treturn (\n\t\t<Badge\n\t\t\tclassName=\"inline-flex\"\n\t\t\ttype=\"rounded\"\n\t\t\tsize={ mapSizeToBadgeSize( size ) }\n\t\t\tlabel={ renderLabel }\n\t\t\ticon={ null }\n\t\t\tclosable={ true }\n\t\t\tonClose={ removeMention }\n\t\t\tdisabled={ disabled }\n\t\t/>\n\t);\n};\n\nexport default MentionComponent;\n"],"names":["mapSizeToBadgeSize","size","MentionComponent","data","by","nodeKey","editor","useLexicalComposerContext","disabled","removeMention","event","node","$getNodeByKey","renderLabel","onArrowLeftPress","useCallback","handled","nodeToSelect","$isElementNode","$isTextNode","$isDecoratorNode","onArrowRightPress","useEffect","unregister","mergeRegister","KEY_ARROW_LEFT_COMMAND","COMMAND_PRIORITY_LOW","KEY_ARROW_RIGHT_COMMAND","jsx","Badge"],"mappings":";;;;;;AAgBA,MAAMA,IAAqB,CAAEC,MAAkB;AAC9C,UAASA,GAAO;AAAA,IACf,KAAK;AACG,aAAA;AAAA,IACR,KAAK;AACG,aAAA;AAAA,IACR,KAAK;AACG,aAAA;AAAA,IACR;AACQ,aAAA;AAAA,EAAA;AAEV,GAEMC,IAAmB,CAAE;AAAA,EAC1B,MAAAC;AAAA,EACA,IAAAC;AAAA,EACA,MAAAH;AAAA,EACA,SAAAI;AACD,MAKO;AACA,QAAA,CAAEC,CAAO,IAAIC,EAA0B,GACvCC,IAAW,CAAEF,EAAO,WAAW,GAE/BG,IAAgB,CAAEC,MAA6B;AAIpD,IAHAA,EAAM,gBAAgB,GACtBA,EAAM,eAAe,GAEhB,CAAAF,KAILF,EAAO,OAAQ,MAAM;AACd,YAAAK,IAAOC,EAAeP,CAAQ;AACpC,MAAOM,KAGPA,EAAK,OAAO;AAAA,IAAA,CACX;AAAA,EACH;AAEA,MAAIE,IAAcV;AACb,EAAA,OAAOA,KAAS,aACpBU,IAAcV,EAAMC,CAAG;AAGxB,QAAMU,IAAmBC;AAAA,IACxB,CAAEL,MAAW;AACN,YAAAC,IAAOC,EAAeP,CAAQ;AACpC,UAAK,CAAEM,KAAQ,CAAEA,EAAK;AACd,eAAA;AAER,UAAIK,IAAU;AACR,YAAAC,IAAeN,EAAK,mBAAmB;AACxC,aAAAO,EAAgBD,CAAa,MACjCA,EAAa,UAAU,GACbD,IAAA,KAENG,EAAaF,CAAa,MAC9BA,EAAa,OAAO,GACVD,IAAA,KAENI,EAAkBH,CAAa,MACnCA,EAAa,WAAW,GACdD,IAAA,KAENC,MAAiB,SACrBN,EAAK,eAAe,GACVK,IAAA,KAENA,KACJN,EAAM,eAAe,GAEfM;AAAA,IACR;AAAA,IACA,CAAEX,CAAQ;AAAA,EACX,GAEMgB,IAAoBN;AAAA,IACzB,CAAEL,MAAW;AACN,YAAAC,IAAOC,EAAeP,CAAQ;AACpC,UAAK,CAAEM,KAAQ,CAAEA,EAAK;AACd,eAAA;AAER,UAAIK,IAAU;AACR,YAAAC,IAAeN,EAAK,eAAe;AACpC,aAAAO,EAAgBD,CAAa,MACjCA,EAAa,YAAY,GACfD,IAAA,KAENG,EAAaF,CAAa,MACjBA,EAAA,OAAQ,GAAG,CAAE,GAChBD,IAAA,KAENI,EAAkBH,CAAa,MACnCA,EAAa,eAAe,GAClBD,IAAA,KAENC,MAAiB,SACrBN,EAAK,WAAW,GACNK,IAAA,KAENA,KACJN,EAAM,eAAe,GAEfM;AAAA,IACR;AAAA,IACA,CAAEX,CAAQ;AAAA,EACX;AAEA,SAAAiB,EAAW,MAAM;AAChB,UAAMC,IAAaC;AAAA,MAClBlB,EAAO;AAAA,QACNmB;AAAA,QACAX;AAAA,QACAY;AAAA,MACD;AAAA,MACApB,EAAO;AAAA,QACNqB;AAAA,QACAN;AAAA,QACAK;AAAA,MAAA;AAAA,IAEF;AACA,WAAO,MAAM;AACD,MAAAH,EAAA;AAAA,IACZ;AAAA,EACE,GAAA,CAAEjB,GAAQQ,GAAkBO,CAAkB,CAAE,GAGlD,gBAAAO;AAAA,IAACC;AAAA,IAAA;AAAA,MACA,WAAU;AAAA,MACV,MAAK;AAAA,MACL,MAAO7B,EAAoBC,CAAK;AAAA,MAChC,OAAQY;AAAA,MACR,MAAO;AAAA,MACP,UAAW;AAAA,MACX,SAAUJ;AAAA,MACV,UAAAD;AAAA,IAAA;AAAA,EACD;AAEF;"}