{"version":3,"file":"mention-plugin.es.js","sources":["../../../../src/components/editor-input/mention-plugin/mention-plugin.tsx"],"sourcesContent":["import React, {\n\tuseCallback,\n\tuseState,\n\tuseMemo,\n\tuseEffect,\n\tuseRef,\n} from 'react';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport {\n\tLexicalTypeaheadMenuPlugin,\n\ttype TypeaheadMenuPluginProps,\n\ttype MenuOption,\n} from '@lexical/react/LexicalTypeaheadMenuPlugin';\nimport { $createMentionNode, $isMentionNode } from './mention-node';\nimport OptionItem from './mention-option-item';\nimport useMentionLookupService from './mention-hooks';\nimport EditorCombobox from './mention-combobox';\nimport {\n\t$createTextNode,\n\t$getSelection,\n\tCOMMAND_PRIORITY_LOW,\n\tKEY_DOWN_COMMAND,\n\tKEY_BACKSPACE_COMMAND,\n\ttype RangeSelection,\n\ttype CommandListener,\n\tFOCUS_COMMAND,\n} from 'lexical';\nimport { mergeRegister } from '@lexical/utils';\nimport { type TOptionItem } from '../editor-input';\nimport {\n\tuseFloating,\n\tautoPlacement,\n\toffset,\n\tflip,\n\tshift,\n\tautoUpdate,\n} from '@floating-ui/react';\n\nexport type Trigger = '@' | '#' | ( string & {} );\nexport type TSizes = 'lg' | 'md' | 'sm';\nexport type OptionsArray = Array<TOptionItem>;\nexport type TMenuComponent = React.ComponentType<\n\tReact.ComponentProps<typeof EditorCombobox>\n>;\nexport type TMenuItemComponent = React.ComponentType<\n\tReact.ComponentProps<typeof EditorCombobox.Item>\n>;\n\nexport interface MentionPluginProps<T = OptionsArray> {\n\toptionsArray: T;\n\tby: T extends Array<infer U>\n\t\t? U extends Record<string, unknown>\n\t\t\t? keyof U\n\t\t\t: string\n\t\t: string;\n\tsize: TSizes;\n\ttrigger: Trigger;\n\tmenuComponent?: TMenuComponent;\n\tmenuItemComponent?: TMenuItemComponent;\n\tautoSpace: boolean;\n}\n\nconst MentionPlugin = ( {\n\toptionsArray,\n\tby = 'name',\n\tsize = 'md',\n\ttrigger = '@', // Default trigger value\n\tmenuComponent: MenuComponent = EditorCombobox,\n\tmenuItemComponent: MenuItemComponent = EditorCombobox.Item,\n\tautoSpace = true,\n}: MentionPluginProps ) => {\n\tconst { y, refs, strategy } = useFloating( {\n\t\tplacement: 'bottom',\n\t\tstrategy: 'absolute',\n\t\tmiddleware: [ offset( 8 ), autoPlacement(), shift(), flip() ],\n\t\twhileElementsMounted: autoUpdate,\n\t} );\n\n\tconst autoSpaceTempOff = useRef( false );\n\tconst menuRef = useRef<HTMLElement | null>( null );\n\t// Define PUNCTUATION and other necessary variables inside the component\n\tconst PUNCTUATION =\n\t\t'\\\\.,\\\\+\\\\*\\\\?\\\\$\\\\@\\\\|#{}\\\\(\\\\)\\\\^\\\\-\\\\[\\\\]\\\\\\\\/!%\\'\"~=<>_:;';\n\n\tconst TRIGGERS = [ trigger ].join( '' ); // Use the trigger prop dynamically\n\n\tconst VALID_CHARS = '[^' + TRIGGERS + PUNCTUATION + '\\\\s]';\n\n\tconst VALID_JOINS =\n\t\t'(?:' +\n\t\t'\\\\.[ |$]|' + // E.g. \"r. \" in \"Mr. Smith\"\n\t\t' |' + // E.g. \" \" in \"Josh Duck\"\n\t\t'[' +\n\t\tPUNCTUATION +\n\t\t']|' + // E.g. \"-' in \"Salier-Hellendag\"\n\t\t')';\n\n\tconst LENGTH_LIMIT = 75;\n\n\tconst AtSignMentionsRegex = new RegExp(\n\t\t`(^|\\\\s|\\\\()([${ TRIGGERS }]((?:${ VALID_CHARS }${ VALID_JOINS }){0,${ LENGTH_LIMIT }}))$`\n\t);\n\n\t// 50 is the longest alias length limit\n\tconst ALIAS_LENGTH_LIMIT = 50;\n\n\t// Regex used to match alias\n\tconst AtSignMentionsRegexAliasRegex = new RegExp(\n\t\t`(^|\\\\s|\\\\()([${ TRIGGERS }]((?:${ VALID_CHARS }){0,${ ALIAS_LENGTH_LIMIT }}))$`\n\t);\n\n\t// Define checkForAtSignMentions function inside the component where it has access to the regex\n\tconst checkForAtSignMentions = ( text: string ) => {\n\t\tlet match = AtSignMentionsRegex.exec( text );\n\n\t\tif ( match === null ) {\n\t\t\tmatch = AtSignMentionsRegexAliasRegex.exec( text );\n\t\t}\n\t\tif ( match !== null ) {\n\t\t\t// The strategy ignores leading whitespace but we need to know its\n\t\t\t// length to add it to the leadOffset\n\t\t\tconst maybeLeadingWhitespace = match[ 1 ];\n\n\t\t\tconst matchingString = match[ 3 ];\n\t\t\tif ( matchingString.length >= 0 ) {\n\t\t\t\treturn {\n\t\t\t\t\tleadOffset: match.index + maybeLeadingWhitespace.length,\n\t\t\t\t\tmatchingString,\n\t\t\t\t\treplaceableString: match[ 2 ],\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\n\tconst [ editor ] = useLexicalComposerContext();\n\tconst [ queryString, setQueryString ] = useState<string | null>( null );\n\tconst [ isMenuOpen, setIsMenuOpen ] = useState<boolean>( false );\n\n\t// Use the hook to get lookup results\n\tconst results = useMentionLookupService( optionsArray, queryString, by );\n\n\tconst onSelectOption = useCallback<\n\t\tTypeaheadMenuPluginProps<\n\t\t\tMenuOption & { data: TOptionItem }\n\t\t>['onSelectOption']\n\t>(\n\t\t( selectedOption, nodeToReplace, closeMenu ) => {\n\t\t\teditor.update( () => {\n\t\t\t\tconst mentionNode = $createMentionNode(\n\t\t\t\t\tselectedOption.data,\n\t\t\t\t\tby as keyof TOptionItem,\n\t\t\t\t\tsize\n\t\t\t\t);\n\t\t\t\tif ( nodeToReplace ) {\n\t\t\t\t\tnodeToReplace.replace( mentionNode );\n\t\t\t\t}\n\t\t\t\tcloseMenu();\n\t\t\t\tsetIsMenuOpen( false );\n\t\t\t} );\n\t\t},\n\t\t[ editor ]\n\t);\n\n\tconst options = useMemo( () => {\n\t\treturn results.map( ( result ) => new OptionItem( result ) );\n\t}, [ editor, results ] );\n\n\tconst handleAutoSpaceAfterMention = useCallback<\n\t\tCommandListener<KeyboardEvent>\n\t>(\n\t\t( event ) => {\n\t\t\tif ( ! autoSpace ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst { key, ctrlKey, metaKey } = event;\n\n\t\t\tif (\n\t\t\t\tctrlKey ||\n\t\t\t\tmetaKey ||\n\t\t\t\tkey === ' ' ||\n\t\t\t\tkey.length > 1 ||\n\t\t\t\tautoSpaceTempOff.current\n\t\t\t) {\n\t\t\t\tif ( autoSpaceTempOff.current ) {\n\t\t\t\t\tautoSpaceTempOff.current = false;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tconst selection = $getSelection();\n\t\t\tconst { focus, anchor } = selection as RangeSelection;\n\t\t\tconst [ node ] = selection!.getNodes();\n\n\t\t\tif (\n\t\t\t\t! anchor ||\n\t\t\t\t! focus ||\n\t\t\t\tanchor?.key !== focus?.key ||\n\t\t\t\tanchor?.offset !== focus?.offset ||\n\t\t\t\t! node\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( $isMentionNode( node ) ) {\n\t\t\t\tconst textNode = $createTextNode( ' ' );\n\t\t\t\tnode.insertAfter( textNode );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t[ editor, trigger, autoSpace ]\n\t);\n\n\tconst turnOffAutoSpaceIfNecessary = useCallback<\n\t\tCommandListener<KeyboardEvent>\n\t>(\n\t\t( event ) => {\n\t\t\tconst { key } = event;\n\t\t\tif ( key === 'Backspace' ) {\n\t\t\t\tautoSpaceTempOff.current = true;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\t[ autoSpaceTempOff ]\n\t);\n\n\tconst handleOpen = useCallback( () => {\n\t\tsetIsMenuOpen( true );\n\t}, [] );\n\n\tconst handleFocus = useCallback( () => {\n\t\thandleOpen();\n\t\treturn false;\n\t}, [] );\n\n\tuseEffect( () => {\n\t\tif ( ! editor ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn mergeRegister(\n\t\t\teditor.registerCommand(\n\t\t\t\tKEY_DOWN_COMMAND,\n\t\t\t\thandleAutoSpaceAfterMention,\n\t\t\t\tCOMMAND_PRIORITY_LOW\n\t\t\t),\n\t\t\teditor.registerCommand(\n\t\t\t\tKEY_BACKSPACE_COMMAND,\n\t\t\t\tturnOffAutoSpaceIfNecessary,\n\t\t\t\tCOMMAND_PRIORITY_LOW\n\t\t\t),\n\t\t\teditor.registerCommand(\n\t\t\t\tFOCUS_COMMAND,\n\t\t\t\thandleFocus,\n\t\t\t\tCOMMAND_PRIORITY_LOW\n\t\t\t)\n\t\t);\n\t}, [ editor, handleAutoSpaceAfterMention ] );\n\n\t// Set the floating reference to the editor input.\n\tuseEffect( () => {\n\t\tif ( ! editor ) {\n\t\t\treturn;\n\t\t}\n\t\tconst reference = editor.getRootElement()?.parentElement?.parentElement;\n\t\tif ( ! reference ) {\n\t\t\treturn;\n\t\t}\n\t\trefs.setReference( reference );\n\t}, [ editor, refs ] );\n\n\t// Update menu open state based on options availability\n\tuseEffect( () => {\n\t\tif ( isMenuOpen ) {\n\t\t\treturn;\n\t\t}\n\t\tsetIsMenuOpen( options.length > 0 );\n\t}, [ options ] );\n\n\t// Handle outside clicks to close the dropdown\n\tuseEffect( () => {\n\t\tif ( ! isMenuOpen ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst handleOutsideClick = ( event: MouseEvent ) => {\n\t\t\tconst target = event.target as Node;\n\t\t\tconst editorRoot = editor.getRootElement();\n\t\t\tconst floatingElement = refs.floating.current;\n\n\t\t\t// Check if click is outside editor and dropdown menu\n\t\t\tif (\n\t\t\t\teditorRoot &&\n\t\t\t\t! editorRoot.contains( target ) &&\n\t\t\t\tfloatingElement &&\n\t\t\t\t! floatingElement.contains( target )\n\t\t\t) {\n\t\t\t\tsetIsMenuOpen( false );\n\t\t\t\tsetQueryString( null );\n\t\t\t}\n\t\t};\n\n\t\t// Handle editor blur\n\t\tconst handleEditorBlur = () => {\n\t\t\t// Small delay to check if focus moved to the dropdown\n\t\t\tsetTimeout( () => {\n\t\t\t\tconst editorRoot = editor.getRootElement();\n\t\t\t\tconst floatingElement = refs.floating.current;\n\n\t\t\t\tif ( editorRoot ) {\n\t\t\t\t\tconst doc = editorRoot.ownerDocument;\n\t\t\t\t\tconst activeElement = doc.activeElement;\n\n\t\t\t\t\tif (\n\t\t\t\t\t\tfloatingElement &&\n\t\t\t\t\t\t( ! activeElement ||\n\t\t\t\t\t\t\t! floatingElement.contains( activeElement ) )\n\t\t\t\t\t) {\n\t\t\t\t\t\tsetIsMenuOpen( false );\n\t\t\t\t\t\tsetQueryString( null );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 100 );\n\t\t};\n\n\t\t// Add event listeners\n\t\tdocument.addEventListener( 'mousedown', handleOutsideClick );\n\n\t\tconst editorRoot = editor.getRootElement();\n\t\tif ( editorRoot ) {\n\t\t\teditorRoot.addEventListener( 'blur', handleEditorBlur, true );\n\t\t}\n\n\t\t// Cleanup\n\t\treturn () => {\n\t\t\tdocument.removeEventListener( 'mousedown', handleOutsideClick );\n\t\t\tif ( editorRoot ) {\n\t\t\t\teditorRoot.removeEventListener( 'blur', handleEditorBlur, true );\n\t\t\t}\n\t\t};\n\t}, [ isMenuOpen, editor, refs.floating ] );\n\n\treturn (\n\t\t<LexicalTypeaheadMenuPlugin\n\t\t\tonOpen={ handleOpen }\n\t\t\tonQueryChange={ setQueryString }\n\t\t\tonSelectOption={ onSelectOption }\n\t\t\ttriggerFn={ checkForAtSignMentions } // Use the locally defined function\n\t\t\toptions={ options }\n\t\t\tmenuRenderFn={ (\n\t\t\t\tanchorElementRef,\n\t\t\t\t{ selectedIndex, selectOptionAndCleanUp, setHighlightedIndex }\n\t\t\t): React.JSX.Element | null => {\n\t\t\t\tif (\n\t\t\t\t\t! isMenuOpen ||\n\t\t\t\t\t! anchorElementRef.current ||\n\t\t\t\t\t! options?.length\n\t\t\t\t) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<MenuComponent\n\t\t\t\t\t\tclassName=\"w-full\"\n\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\tref={ ( node ) => {\n\t\t\t\t\t\t\trefs.setFloating( node );\n\t\t\t\t\t\t\tmenuRef.current = node;\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\tposition: strategy,\n\t\t\t\t\t\t\ttop: y ?? 0,\n\t\t\t\t\t\t\tleft: -2,\n\t\t\t\t\t\t\twidth: 'calc(100% + 4px)',\n\t\t\t\t\t\t} }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ options.map( ( option, index ) => (\n\t\t\t\t\t\t\t<MenuItemComponent\n\t\t\t\t\t\t\t\tkey={ index }\n\t\t\t\t\t\t\t\tref={ option.ref }\n\t\t\t\t\t\t\t\tsize={ size }\n\t\t\t\t\t\t\t\tselected={ index === selectedIndex }\n\t\t\t\t\t\t\t\tonMouseEnter={ () => {\n\t\t\t\t\t\t\t\t\tsetHighlightedIndex( index );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tonClick={ () => selectOptionAndCleanUp( option ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ typeof option.data === 'string'\n\t\t\t\t\t\t\t\t\t? option.data\n\t\t\t\t\t\t\t\t\t: ( option.data?.[ by ] as string ) }\n\t\t\t\t\t\t\t</MenuItemComponent>\n\t\t\t\t\t\t) ) }\n\t\t\t\t\t</MenuComponent>\n\t\t\t\t);\n\t\t\t} }\n\t\t/>\n\t);\n};\n\nexport default MentionPlugin;\n"],"names":["MentionPlugin","optionsArray","by","size","trigger","MenuComponent","EditorCombobox","MenuItemComponent","autoSpace","y","refs","strategy","useFloating","offset","autoPlacement","shift","flip","autoUpdate","autoSpaceTempOff","useRef","menuRef","PUNCTUATION","TRIGGERS","VALID_CHARS","VALID_JOINS","LENGTH_LIMIT","AtSignMentionsRegex","ALIAS_LENGTH_LIMIT","AtSignMentionsRegexAliasRegex","checkForAtSignMentions","text","match","maybeLeadingWhitespace","matchingString","editor","useLexicalComposerContext","queryString","setQueryString","useState","isMenuOpen","setIsMenuOpen","results","useMentionLookupService","onSelectOption","useCallback","selectedOption","nodeToReplace","closeMenu","mentionNode","$createMentionNode","options","useMemo","result","OptionItem","handleAutoSpaceAfterMention","event","key","ctrlKey","metaKey","selection","$getSelection","focus","anchor","node","$isMentionNode","textNode","$createTextNode","turnOffAutoSpaceIfNecessary","handleOpen","handleFocus","useEffect","mergeRegister","KEY_DOWN_COMMAND","COMMAND_PRIORITY_LOW","KEY_BACKSPACE_COMMAND","FOCUS_COMMAND","reference","handleOutsideClick","target","editorRoot","floatingElement","handleEditorBlur","activeElement","jsx","LexicalTypeaheadMenuPlugin","anchorElementRef","selectedIndex","selectOptionAndCleanUp","setHighlightedIndex","option","index"],"mappings":"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"}