{"version":3,"file":"mention-combobox.cjs.js","sources":["../../../../src/components/editor-input/mention-plugin/mention-combobox.tsx"],"sourcesContent":["import { cn } from '@/utilities/functions';\nimport {\n\tcomboboxDropdownClassNames,\n\tcomboboxDropdownCommonClassNames,\n\tcomboboxItemClassNames,\n\tcomboboxItemCommonClassNames,\n\tcomboboxSelectedItemClassNames,\n} from '../editor-input-style';\nimport { ForwardedRef, forwardRef, type ReactNode } from 'react';\n\ntype ComboboxSize = 'sm' | 'md' | 'lg';\n\ninterface EditorComboboxProps {\n\t/** The size of the combobox. */\n\tsize?: ComboboxSize;\n\t/** The class name of the combobox. */\n\tclassName?: string;\n\t/** The children of the combobox. */\n\tchildren?: ReactNode;\n\t/** Additional props to be passed to the combobox. */\n\t[key: string]: unknown;\n}\n\nconst EditorComboboxWithoutRef = (\n\t{ size, className, children, ...props }: EditorComboboxProps,\n\tref?: ForwardedRef<HTMLUListElement>\n) => (\n\t<ul\n\t\trole=\"menu\"\n\t\tref={ ref }\n\t\tclassName={ cn(\n\t\t\tcomboboxDropdownCommonClassNames,\n\t\t\tcomboboxDropdownClassNames[ size as ComboboxSize ],\n\t\t\tclassName\n\t\t) }\n\t\t{ ...props }\n\t>\n\t\t{ children }\n\t</ul>\n);\nconst EditorCombobox = forwardRef<HTMLUListElement, EditorComboboxProps>(\n\tEditorComboboxWithoutRef\n);\n\nEditorCombobox.displayName = 'EditorCombobox';\n\ninterface EditorComboboxItemProps extends React.HTMLAttributes<HTMLLIElement> {\n\t/** The size of the combobox item. */\n\tsize: 'sm' | 'md' | 'lg';\n\t/** The class name of the combobox item. */\n\tclassName?: string;\n\t/** The children of the combobox item. */\n\tchildren: ReactNode;\n\t/** Whether the combobox item is selected. */\n\tselected?: boolean;\n}\n\ntype Ref = HTMLLIElement;\n\nconst EditorComboboxItem = forwardRef<Ref, EditorComboboxItemProps>(\n\t( { size, children, selected = false, className, ...props }, ref ) => (\n\t\t<li\n\t\t\trole=\"option\"\n\t\t\tref={ ref }\n\t\t\tclassName={ cn(\n\t\t\t\tcomboboxItemCommonClassNames,\n\t\t\t\tcomboboxItemClassNames[ size ],\n\t\t\t\tselected && comboboxSelectedItemClassNames,\n\t\t\t\tclassName\n\t\t\t) }\n\t\t\t{ ...props }\n\t\t>\n\t\t\t{ children }\n\t\t</li>\n\t)\n);\nEditorComboboxItem.displayName = 'EditorCombobox.Item';\n\nconst WithItem = Object.assign( EditorCombobox, {\n\tItem: EditorComboboxItem,\n} );\n\nexport { WithItem as default };\n"],"names":["EditorComboboxWithoutRef","size","className","children","props","ref","jsx","cn","comboboxDropdownCommonClassNames","comboboxDropdownClassNames","EditorCombobox","forwardRef","EditorComboboxItem","selected","comboboxItemCommonClassNames","comboboxItemClassNames","comboboxSelectedItemClassNames","WithItem"],"mappings":"+PAuBMA,EAA2B,CAChC,CAAE,KAAAC,EAAM,UAAAC,EAAW,SAAAC,EAAU,GAAGC,CAAM,EACtCC,IAEAC,EAAA,IAAC,KAAA,CACA,KAAK,OACL,IAAAD,EACA,UAAYE,EAAA,GACXC,EAAA,iCACAC,EAAAA,2BAA4BR,CAAqB,EACjDC,CACD,EACE,GAAGE,EAEH,SAAAD,CAAA,CACH,EAEKO,EAAiBC,EAAA,WACtBX,CACD,EAEAU,EAAe,YAAc,iBAe7B,MAAME,EAAqBD,EAAA,WAC1B,CAAE,CAAE,KAAAV,EAAM,SAAAE,EAAU,SAAAU,EAAW,GAAO,UAAAX,EAAW,GAAGE,GAASC,IAC5DC,EAAA,IAAC,KAAA,CACA,KAAK,SACL,IAAAD,EACA,UAAYE,EAAA,GACXO,EAAA,6BACAC,EAAAA,uBAAwBd,CAAK,EAC7BY,GAAYG,EAAA,+BACZd,CACD,EACE,GAAGE,EAEH,SAAAD,CAAA,CAAA,CAGL,EACAS,EAAmB,YAAc,sBAE3B,MAAAK,EAAW,OAAO,OAAQP,EAAgB,CAC/C,KAAME,CACP,CAAE"}