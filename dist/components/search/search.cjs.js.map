{"version":3,"file":"search.cjs.js","sources":["../../../src/components/search/search.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\ttype ReactNode,\n\tuseEffect,\n\tforwardRef,\n\tcreateContext,\n\tuseContext,\n\tChildren,\n\tcloneElement,\n} from 'react';\nimport { omit } from 'lodash'; // or define your own omit function\nimport { cn, getOperatingSystem } from '@/utilities/functions';\nimport { Search } from 'lucide-react';\nimport Loader from '../loader';\nimport Badge from '../badge';\nimport {\n\ttextSizeClassNames,\n\tvariantClassNames,\n\tdisabledClassNames,\n\tsizeClassNames,\n\ticonClasses,\n} from './styles';\nimport {\n\tautoUpdate,\n\tflip,\n\tFloatingPortal,\n\toffset,\n\tsize as floatingSize,\n\tuseDismiss,\n\tuseFloating,\n\tuseInteractions,\n\ttype UseFloatingReturn,\n\ttype UseInteractionsReturn,\n} from '@floating-ui/react';\n\ntype TSearchContentValue = Partial<{\n\tsize: 'sm' | 'md' | 'lg';\n\tsearchTerm: string;\n\tisLoading: boolean;\n\tonOpenChange: ( open: boolean ) => void;\n\trefs: UseFloatingReturn['refs'];\n\tfloatingStyles: UseFloatingReturn['floatingStyles'];\n\tgetReferenceProps: UseInteractionsReturn['getReferenceProps'];\n\tgetFloatingProps: UseInteractionsReturn['getFloatingProps'];\n\tsetSearchTerm: React.Dispatch<React.SetStateAction<string | undefined>>;\n\topen: boolean;\n\tcontext: UseFloatingReturn['context'];\n\tsetIsLoading: ( loading: boolean ) => void;\n}>;\n\n// Define a context for the SearchBox\nconst SearchContext = createContext<TSearchContentValue>( {} );\n\nconst useSearchContext = () => {\n\treturn useContext<TSearchContentValue>( SearchContext );\n};\n\n// Define the Size type\ntype Size = 'sm' | 'md' | 'lg';\n\n// Define a common interface for SearchBox props\nexport interface BaseSearchBoxProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Size of the SearchBox. */\n\tsize?: 'sm' | 'md' | 'lg';\n\n\t/** Whether the dropdown is open. */\n\topen?: boolean;\n\n\t/** Callback when dropdown state changes. */\n\tonOpenChange?: ( open: boolean ) => void;\n\n\t/** Whether to show loading state. */\n\tloading?: boolean;\n\n\t/** Child components to be rendered. */\n\tchildren?: ReactNode;\n}\n\n// Extend the type to allow assigning subcomponents to SearchBox\ntype SearchBoxComponent = React.ForwardRefExoticComponent<\n\tBaseSearchBoxProps & React.RefAttributes<HTMLDivElement>\n> & {\n\tInput: typeof SearchBoxInput;\n\tLoading: typeof SearchBoxLoading;\n\tSeparator: typeof SearchBoxSeparator;\n\tContent: typeof SearchBoxContent;\n\tList: typeof SearchBoxList;\n\tEmpty: typeof SearchBoxEmpty;\n\tGroup: typeof SearchBoxGroup;\n\tItem: typeof SearchBoxItem;\n};\n\nexport const SearchBox = forwardRef<HTMLDivElement, BaseSearchBoxProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tsize = 'sm' as Size,\n\t\t\topen = false,\n\t\t\tonOpenChange = () => {},\n\t\t\tloading = false,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst [ searchTerm, setSearchTerm ] = useState<string | undefined>( '' );\n\t\tconst [ isLoading, setIsLoading ] = useState<boolean>( loading ?? false );\n\n\t\tconst { refs, floatingStyles, context } = useFloating( {\n\t\t\topen,\n\t\t\tonOpenChange,\n\t\t\tplacement: 'bottom-start',\n\t\t\twhileElementsMounted: autoUpdate,\n\t\t\tmiddleware: [\n\t\t\t\toffset( size === 'sm' ? 4 : 6 ),\n\t\t\t\tflip( { padding: 10 } ),\n\t\t\t\tfloatingSize( {\n\t\t\t\t\tapply( { rects, elements, availableHeight } ) {\n\t\t\t\t\t\telements.floating.style.maxHeight = `${ availableHeight }px`;\n\t\t\t\t\t\telements.floating.style.width = `${ rects.reference.width }px`;\n\t\t\t\t\t\telements.floating.style.fontFamily =\n\t\t\t\t\t\t\twindow.getComputedStyle(\n\t\t\t\t\t\t\t\telements.reference as Element\n\t\t\t\t\t\t\t).fontFamily; // Retain parent's font family\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t],\n\t\t} );\n\t\tconst dismiss = useDismiss( context );\n\n\t\tconst { getReferenceProps, getFloatingProps } = useInteractions( [\n\t\t\tdismiss,\n\t\t] );\n\n\t\tuseEffect( () => {\n\t\t\tconst operatingSystem = getOperatingSystem();\n\n\t\t\tconst handleKeyDown = ( event: KeyboardEvent ) => {\n\t\t\t\tconst isMac = operatingSystem === 'Mac OS';\n\t\t\t\tconst metaOrCtrlKey = isMac ? event.metaKey : event.ctrlKey;\n\n\t\t\t\t// Check if the Meta (command/windows) key and '/' are pressed together\n\t\t\t\tif ( event.key === '/' && metaOrCtrlKey ) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif ( refs.reference && refs.reference.current ) {\n\t\t\t\t\t\tconst inputElement =\n\t\t\t\t\t\t\trefs.reference.current instanceof HTMLElement\n\t\t\t\t\t\t\t\t? refs.reference.current.querySelector( 'input' )\n\t\t\t\t\t\t\t\t: null;\n\n\t\t\t\t\t\tif ( inputElement ) {\n\t\t\t\t\t\t\tinputElement.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'keydown', handleKeyDown );\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener( 'keydown', handleKeyDown );\n\t\t\t};\n\t\t}, [ refs.reference ] );\n\n\t\treturn (\n\t\t\t<SearchContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\tsize,\n\t\t\t\t\topen,\n\t\t\t\t\tonOpenChange,\n\t\t\t\t\trefs,\n\t\t\t\t\tfloatingStyles,\n\t\t\t\t\tcontext,\n\t\t\t\t\tgetReferenceProps,\n\t\t\t\t\tgetFloatingProps,\n\t\t\t\t\tsearchTerm,\n\t\t\t\t\tsetSearchTerm,\n\t\t\t\t\tisLoading,\n\t\t\t\t\tsetIsLoading,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'searchbox-wrapper box-border relative w-full',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\t{ ...props }\n\t\t\t\t\tref={ ref }\n\t\t\t\t/>\n\t\t\t</SearchContext.Provider>\n\t\t);\n\t}\n) as SearchBoxComponent;\nSearchBox.displayName = 'SearchBox';\n\n// Define props for SearchBoxInput\nexport interface SearchBoxInputProps extends BaseSearchBoxProps {\n\t/** Type of the input (e.g., text, search). */\n\ttype?: string;\n\n\t/** Placeholder text for the input. */\n\tplaceholder?: string;\n\n\t/** Style variant of the input. */\n\tvariant?: 'primary' | 'secondary' | 'ghost';\n\n\t/** Whether the input is disabled. */\n\tdisabled?: boolean;\n\n\t/** Callback for input changes. */\n\tonChange?: ( value: string ) => void;\n\n\t/** Child components to be rendered. */\n\tchildren?: ReactNode;\n}\n\nexport const SearchBoxInput = forwardRef<HTMLInputElement, SearchBoxInputProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype = 'text',\n\t\t\tplaceholder = 'Search...',\n\t\t\tvariant = 'primary',\n\t\t\tdisabled = false,\n\t\t\tonChange = () => {},\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst {\n\t\t\tsize,\n\t\t\tonOpenChange,\n\t\t\trefs,\n\t\t\tgetReferenceProps,\n\t\t\tsearchTerm,\n\t\t\tsetSearchTerm,\n\t\t} = useSearchContext();\n\t\tconst badgeSize = size === 'lg' ? 'sm' : 'xs';\n\t\tconst handleChange = ( event: React.ChangeEvent<HTMLInputElement> ) => {\n\t\t\tconst newValue = event.target.value;\n\t\t\tsetSearchTerm!( newValue );\n\t\t\tonChange( newValue );\n\n\t\t\tif ( typeof onOpenChange === 'function' ) {\n\t\t\t\tif ( newValue.trim() ) {\n\t\t\t\t\tonOpenChange( true ); // Open the dropdown\n\t\t\t\t} else {\n\t\t\t\t\tonOpenChange( false ); // Close the dropdown\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ refs!.setReference }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full group relative flex justify-center items-center gap-1.5 focus-within:z-10 transition-colors ease-in-out duration-150',\n\t\t\t\t\tvariantClassNames[ variant ],\n\t\t\t\t\tsizeClassNames.input[ size! ],\n\t\t\t\t\tdisabled\n\t\t\t\t\t\t? disabledClassNames[ variant ]\n\t\t\t\t\t\t: 'focus-within:ring-2 focus-within:ring-focus focus-within:ring-offset-2 focus-within:border-focus-border focus-within:hover:border-focus-border'\n\t\t\t\t) }\n\t\t\t\t{ ...getReferenceProps }\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\t\t\tdisabled ? 'text-icon-disabled' : iconClasses,\n\t\t\t\t\t\t'flex justify-center items-center'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t<Search />\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\ttype={ type }\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\t\t\t'flex-grow font-medium bg-transparent border-none outline-none border-transparent focus:ring-0 py-0',\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t? disabledClassNames[ variant ]\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t'text-field-placeholder focus-within:text-field-input group-hover:text-field-input',\n\t\t\t\t\t\t\t\t'placeholder:text-field-placeholder',\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\tvalue={ searchTerm }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\t// Omit custom props that are not valid for input\n\t\t\t\t\t{ ...omit( props, [\n\t\t\t\t\t\t'size',\n\t\t\t\t\t\t'open',\n\t\t\t\t\t\t'onOpenChange',\n\t\t\t\t\t\t'loading',\n\t\t\t\t\t] ) }\n\t\t\t\t/>\n\t\t\t\t<Badge\n\t\t\t\t\tlabel={ `âŒ˜/` }\n\t\t\t\t\tsize={ badgeSize }\n\t\t\t\t\ttype=\"rounded\"\n\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n);\nSearchBoxInput.displayName = 'SearchBox.Input';\n\n// Define props for SearchBoxContent\nexport interface SearchBoxContentProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Root element where the dropdown will be rendered. */\n\tdropdownPortalRoot?: HTMLElement | null;\n\n\t/** Id of the dropdown portal where the dropdown will be rendered. */\n\tdropdownPortalId?: string;\n\n\t/** Child components to be rendered inside the dropdown. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxContent = ( {\n\tclassName,\n\tdropdownPortalRoot = null, // Root element where the dropdown will be rendered.\n\tdropdownPortalId = '', // Id of the dropdown portal where the dropdown will be rendered.\n\tchildren,\n\t...props\n}: SearchBoxContentProps ) => {\n\tconst { size, open, refs, floatingStyles, getFloatingProps } =\n\t\tuseSearchContext();\n\n\tif ( ! open ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<FloatingPortal id={ dropdownPortalId } root={ dropdownPortalRoot }>\n\t\t\t<div\n\t\t\t\tref={ refs!.setFloating }\n\t\t\t\tstyle={ {\n\t\t\t\t\t...floatingStyles,\n\t\t\t\t} }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'bg-background-primary rounded-md border border-solid border-border-subtle shadow-soft-shadow-lg overflow-y-auto text-wrap',\n\t\t\t\t\tsizeClassNames.dialog[ size! ],\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\t{ ...getFloatingProps!() }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t</FloatingPortal>\n\t);\n};\nSearchBoxContent.displayName = 'SearchBox.Content';\n\n// Define props for SearchBoxList\nexport interface SearchBoxListProps {\n\t/** Whether to filter children based on the search term. */\n\tfilter?: boolean;\n\n\t/** Child components to be rendered. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxList = ( {\n\tfilter = true,\n\tchildren,\n}: SearchBoxListProps ) => {\n\tconst { searchTerm, isLoading } = useSearchContext();\n\n\tif ( ! filter ) {\n\t\treturn <div>{ children }</div>;\n\t}\n\tconst filteredChildren = Children.toArray( children )\n\t\t.map( ( child ) => {\n\t\t\tif ( React.isValidElement( child ) && child.type === SearchBoxGroup ) {\n\t\t\t\tconst filteredItems = Children.toArray(\n\t\t\t\t\tchild.props.children\n\t\t\t\t).filter(\n\t\t\t\t\t( item ) =>\n\t\t\t\t\t\tReact.isValidElement( item ) &&\n\t\t\t\t\t\ttypeof item.props.children === 'string' &&\n\t\t\t\t\t\titem.props.children\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes( searchTerm!.toLowerCase() )\n\t\t\t\t);\n\t\t\t\treturn filteredItems.length > 0\n\t\t\t\t\t? cloneElement( child as React.ReactElement, {\n\t\t\t\t\t\tchildren: filteredItems,\n\t\t\t\t\t} )\n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\treturn child;\n\t\t} )\n\t\t.filter( Boolean );\n\n\tif ( isLoading ) {\n\t\treturn <SearchBoxLoading />;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{ filteredChildren.some(\n\t\t\t\t( child ) =>\n\t\t\t\t\tReact.isValidElement( child ) &&\n\t\t\t\t\tchild.type !== SearchBoxSeparator\n\t\t\t) ? (\n\t\t\t\t\tfilteredChildren\n\t\t\t\t) : (\n\t\t\t\t\t<SearchBoxEmpty />\n\t\t\t\t) }\n\t\t</div>\n\t);\n};\nSearchBoxList.displayName = 'SearchBox.List';\n\n// Define props for SearchBoxEmpty\nexport interface SearchBoxEmptyProps {\n\t/** Content to display when there are no results. */\n\tchildren?: ReactNode;\n}\n\nexport const SearchBoxEmpty = ( {\n\tchildren = 'No results found.',\n}: SearchBoxEmptyProps ) => {\n\tconst { size } = useSearchContext();\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'flex justify-center items-center',\n\t\t\t\tsizeClassNames.item[ size! ],\n\t\t\t\t'text-text-tertiary p-4'\n\t\t\t) }\n\t\t>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nSearchBoxEmpty.displayName = 'SearchBox.Empty';\n\n// Define props for SearchBoxGroup\nexport interface SearchBoxGroupProps {\n\t/** Heading for the group. */\n\theading?: string;\n\n\t/** Child components to be rendered in the group. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxGroup = ( { heading, children }: SearchBoxGroupProps ) => {\n\tconst { size } = useSearchContext();\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\tsizeClassNames.content[ size as 'sm' | 'md' | 'lg' ],\n\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t) }\n\t\t>\n\t\t\t{ heading && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tsizeClassNames.title[ size! ],\n\t\t\t\t\t\t'text-text-secondary'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ heading }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nSearchBoxGroup.displayName = 'SearchBox.Group';\n\n// Define props for SearchBoxItem\nexport interface SearchBoxItemProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Icon to display next to the item. */\n\ticon?: ReactNode;\n\n\t/** Child components to be rendered. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxItem = forwardRef<HTMLDivElement, SearchBoxItemProps>(\n\t( { className, icon, children, ...props }, ref ) => {\n\t\tconst { size } = useSearchContext();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'flex items-center justify-start gap-1 p-1 hover:bg-background-secondary focus:bg-background-secondary cursor-pointer',\n\t\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t\t) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ icon && (\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\tsizeClassNames.icon[ size! ],\n\t\t\t\t\t\t\t'flex items-center justify-center'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ icon }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t\t<span\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex-grow p-1 font-normal cursor-pointer',\n\t\t\t\t\t\tsizeClassNames.item[ size! ],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n);\nSearchBoxItem.displayName = 'SearchBox.Item';\n\n// Define props for SearchBoxLoading\nexport interface SearchBoxLoadingProps {\n\t/** Loading icon to display while loading. */\n\tloadingIcon?: ReactNode & { size?: string };\n}\n\nexport const SearchBoxLoading = ( {\n\tloadingIcon = <Loader />,\n}: SearchBoxLoadingProps ) => {\n\tconst { size } = useSearchContext();\n\n\t// Clone the loadingIcon element to pass the size prop\n\tconst loadingIconWithSize = React.isValidElement( loadingIcon )\n\t\t? cloneElement( loadingIcon, { size } )\n\t\t: loadingIcon;\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'flex justify-center p-4',\n\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t) }\n\t\t>\n\t\t\t{ loadingIconWithSize }\n\t\t</div>\n\t);\n};\nSearchBoxLoading.displayName = 'SearchBox.Loading';\n\n// Define props for SearchBoxSeparator\nexport interface SearchBoxSeparatorProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n}\n\nexport const SearchBoxSeparator = forwardRef<\n\tHTMLHRElement,\n\tSearchBoxSeparatorProps\n>( ( { className, ...props }, ref ) => (\n\t<hr\n\t\tref={ ref }\n\t\tclassName={ cn(\n\t\t\t'border-0 border-t border-border-subtle border-solid m-0',\n\t\t\tclassName\n\t\t) }\n\t\t{ ...props }\n\t/>\n) );\nSearchBoxSeparator.displayName = 'SearchBox.Separator';\n\nSearchBox.Input = SearchBoxInput;\nSearchBox.Loading = SearchBoxLoading;\nSearchBox.Separator = SearchBoxSeparator;\nSearchBox.Content = SearchBoxContent;\nSearchBox.List = SearchBoxList;\nSearchBox.Empty = SearchBoxEmpty;\nSearchBox.Group = SearchBoxGroup;\nSearchBox.Item = SearchBoxItem;\n\nexport default SearchBox;\n"],"names":["SearchContext","createContext","useSearchContext","useContext","SearchBox","forwardRef","className","size","open","onOpenChange","loading","props","ref","searchTerm","setSearchTerm","useState","isLoading","setIsLoading","refs","floatingStyles","context","useFloating","autoUpdate","offset","flip","floatingSize","rects","elements","availableHeight","dismiss","useDismiss","getReferenceProps","getFloatingProps","useInteractions","useEffect","operatingSystem","getOperatingSystem","handleKeyDown","event","metaOrCtrlKey","inputElement","jsx","cn","SearchBoxInput","type","placeholder","variant","disabled","onChange","badgeSize","handleChange","newValue","jsxs","variantClassNames","sizeClassNames","disabledClassNames","textSizeClassNames","iconClasses","Search","omit","Badge","SearchBoxContent","dropdownPortalRoot","dropdownPortalId","children","FloatingPortal","SearchBoxList","filter","filteredChildren","Children","child","React","SearchBoxGroup","filteredItems","item","cloneElement","SearchBoxLoading","SearchBoxSeparator","SearchBoxEmpty","heading","SearchBoxItem","icon","loadingIcon","Loader","loadingIconWithSize"],"mappings":"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"}