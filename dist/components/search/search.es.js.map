{"version":3,"file":"search.es.js","sources":["../../../src/components/search/search.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\ttype ReactNode,\n\tuseEffect,\n\tforwardRef,\n\tcreateContext,\n\tuseContext,\n\tChildren,\n\tcloneElement,\n} from 'react';\nimport { omit } from 'lodash'; // or define your own omit function\nimport { cn, getOperatingSystem } from '@/utilities/functions';\nimport { Search } from 'lucide-react';\nimport Loader from '../loader';\nimport Badge from '../badge';\nimport {\n\ttextSizeClassNames,\n\tvariantClassNames,\n\tdisabledClassNames,\n\tsizeClassNames,\n\ticonClasses,\n} from './styles';\nimport {\n\tautoUpdate,\n\tflip,\n\tFloatingPortal,\n\toffset,\n\tsize as floatingSize,\n\tuseDismiss,\n\tuseFloating,\n\tuseInteractions,\n\ttype UseFloatingReturn,\n\ttype UseInteractionsReturn,\n} from '@floating-ui/react';\n\ntype TSearchContentValue = Partial<{\n\tsize: 'sm' | 'md' | 'lg';\n\tsearchTerm: string;\n\tisLoading: boolean;\n\tonOpenChange: ( open: boolean ) => void;\n\trefs: UseFloatingReturn['refs'];\n\tfloatingStyles: UseFloatingReturn['floatingStyles'];\n\tgetReferenceProps: UseInteractionsReturn['getReferenceProps'];\n\tgetFloatingProps: UseInteractionsReturn['getFloatingProps'];\n\tsetSearchTerm: React.Dispatch<React.SetStateAction<string | undefined>>;\n\topen: boolean;\n\tcontext: UseFloatingReturn['context'];\n\tsetIsLoading: ( loading: boolean ) => void;\n}>;\n\n// Define a context for the SearchBox\nconst SearchContext = createContext<TSearchContentValue>( {} );\n\nconst useSearchContext = () => {\n\treturn useContext<TSearchContentValue>( SearchContext );\n};\n\n// Define the Size type\ntype Size = 'sm' | 'md' | 'lg';\n\n// Define a common interface for SearchBox props\nexport interface BaseSearchBoxProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Size of the SearchBox. */\n\tsize?: 'sm' | 'md' | 'lg';\n\n\t/** Whether the dropdown is open. */\n\topen?: boolean;\n\n\t/** Callback when dropdown state changes. */\n\tonOpenChange?: ( open: boolean ) => void;\n\n\t/** Whether to show loading state. */\n\tloading?: boolean;\n\n\t/** Child components to be rendered. */\n\tchildren?: ReactNode;\n}\n\n// Extend the type to allow assigning subcomponents to SearchBox\ntype SearchBoxComponent = React.ForwardRefExoticComponent<\n\tBaseSearchBoxProps & React.RefAttributes<HTMLDivElement>\n> & {\n\tInput: typeof SearchBoxInput;\n\tLoading: typeof SearchBoxLoading;\n\tSeparator: typeof SearchBoxSeparator;\n\tContent: typeof SearchBoxContent;\n\tList: typeof SearchBoxList;\n\tEmpty: typeof SearchBoxEmpty;\n\tGroup: typeof SearchBoxGroup;\n\tItem: typeof SearchBoxItem;\n};\n\nexport const SearchBox = forwardRef<HTMLDivElement, BaseSearchBoxProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tsize = 'sm' as Size,\n\t\t\topen = false,\n\t\t\tonOpenChange = () => {},\n\t\t\tloading = false,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst [ searchTerm, setSearchTerm ] = useState<string | undefined>( '' );\n\t\tconst [ isLoading, setIsLoading ] = useState<boolean>( loading ?? false );\n\n\t\tconst { refs, floatingStyles, context } = useFloating( {\n\t\t\topen,\n\t\t\tonOpenChange,\n\t\t\tplacement: 'bottom-start',\n\t\t\twhileElementsMounted: autoUpdate,\n\t\t\tmiddleware: [\n\t\t\t\toffset( size === 'sm' ? 4 : 6 ),\n\t\t\t\tflip( { padding: 10 } ),\n\t\t\t\tfloatingSize( {\n\t\t\t\t\tapply( { rects, elements, availableHeight } ) {\n\t\t\t\t\t\telements.floating.style.maxHeight = `${ availableHeight }px`;\n\t\t\t\t\t\telements.floating.style.width = `${ rects.reference.width }px`;\n\t\t\t\t\t\telements.floating.style.fontFamily =\n\t\t\t\t\t\t\twindow.getComputedStyle(\n\t\t\t\t\t\t\t\telements.reference as Element\n\t\t\t\t\t\t\t).fontFamily; // Retain parent's font family\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t\t],\n\t\t} );\n\t\tconst dismiss = useDismiss( context );\n\n\t\tconst { getReferenceProps, getFloatingProps } = useInteractions( [\n\t\t\tdismiss,\n\t\t] );\n\n\t\tuseEffect( () => {\n\t\t\tconst operatingSystem = getOperatingSystem();\n\n\t\t\tconst handleKeyDown = ( event: KeyboardEvent ) => {\n\t\t\t\tconst isMac = operatingSystem === 'Mac OS';\n\t\t\t\tconst metaOrCtrlKey = isMac ? event.metaKey : event.ctrlKey;\n\n\t\t\t\t// Check if the Meta (command/windows) key and '/' are pressed together\n\t\t\t\tif ( event.key === '/' && metaOrCtrlKey ) {\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tif ( refs.reference && refs.reference.current ) {\n\t\t\t\t\t\tconst inputElement =\n\t\t\t\t\t\t\trefs.reference.current instanceof HTMLElement\n\t\t\t\t\t\t\t\t? refs.reference.current.querySelector( 'input' )\n\t\t\t\t\t\t\t\t: null;\n\n\t\t\t\t\t\tif ( inputElement ) {\n\t\t\t\t\t\t\tinputElement.focus();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener( 'keydown', handleKeyDown );\n\n\t\t\treturn () => {\n\t\t\t\twindow.removeEventListener( 'keydown', handleKeyDown );\n\t\t\t};\n\t\t}, [ refs.reference ] );\n\n\t\treturn (\n\t\t\t<SearchContext.Provider\n\t\t\t\tvalue={ {\n\t\t\t\t\tsize,\n\t\t\t\t\topen,\n\t\t\t\t\tonOpenChange,\n\t\t\t\t\trefs,\n\t\t\t\t\tfloatingStyles,\n\t\t\t\t\tcontext,\n\t\t\t\t\tgetReferenceProps,\n\t\t\t\t\tgetFloatingProps,\n\t\t\t\t\tsearchTerm,\n\t\t\t\t\tsetSearchTerm,\n\t\t\t\t\tisLoading,\n\t\t\t\t\tsetIsLoading,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'searchbox-wrapper box-border relative w-full',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\t{ ...props }\n\t\t\t\t\tref={ ref }\n\t\t\t\t/>\n\t\t\t</SearchContext.Provider>\n\t\t);\n\t}\n) as SearchBoxComponent;\nSearchBox.displayName = 'SearchBox';\n\n// Define props for SearchBoxInput\nexport interface SearchBoxInputProps extends BaseSearchBoxProps {\n\t/** Type of the input (e.g., text, search). */\n\ttype?: string;\n\n\t/** Placeholder text for the input. */\n\tplaceholder?: string;\n\n\t/** Style variant of the input. */\n\tvariant?: 'primary' | 'secondary' | 'ghost';\n\n\t/** Whether the input is disabled. */\n\tdisabled?: boolean;\n\n\t/** Callback for input changes. */\n\tonChange?: ( value: string ) => void;\n\n\t/** Child components to be rendered. */\n\tchildren?: ReactNode;\n}\n\nexport const SearchBoxInput = forwardRef<HTMLInputElement, SearchBoxInputProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype = 'text',\n\t\t\tplaceholder = 'Search...',\n\t\t\tvariant = 'primary',\n\t\t\tdisabled = false,\n\t\t\tonChange = () => {},\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst {\n\t\t\tsize,\n\t\t\tonOpenChange,\n\t\t\trefs,\n\t\t\tgetReferenceProps,\n\t\t\tsearchTerm,\n\t\t\tsetSearchTerm,\n\t\t} = useSearchContext();\n\t\tconst badgeSize = size === 'lg' ? 'sm' : 'xs';\n\t\tconst handleChange = ( event: React.ChangeEvent<HTMLInputElement> ) => {\n\t\t\tconst newValue = event.target.value;\n\t\t\tsetSearchTerm!( newValue );\n\t\t\tonChange( newValue );\n\n\t\t\tif ( typeof onOpenChange === 'function' ) {\n\t\t\t\tif ( newValue.trim() ) {\n\t\t\t\t\tonOpenChange( true ); // Open the dropdown\n\t\t\t\t} else {\n\t\t\t\t\tonOpenChange( false ); // Close the dropdown\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ refs!.setReference }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'w-full group relative flex justify-center items-center gap-1.5 focus-within:z-10 transition-colors ease-in-out duration-150',\n\t\t\t\t\tvariantClassNames[ variant ],\n\t\t\t\t\tsizeClassNames.input[ size! ],\n\t\t\t\t\tdisabled\n\t\t\t\t\t\t? disabledClassNames[ variant ]\n\t\t\t\t\t\t: 'focus-within:ring-2 focus-within:ring-focus focus-within:ring-offset-2 focus-within:border-focus-border focus-within:hover:border-focus-border'\n\t\t\t\t) }\n\t\t\t\t{ ...getReferenceProps }\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\t\t\tdisabled ? 'text-icon-disabled' : iconClasses,\n\t\t\t\t\t\t'flex justify-center items-center'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t<Search />\n\t\t\t\t</span>\n\t\t\t\t<input\n\t\t\t\t\ttype={ type }\n\t\t\t\t\tref={ ref }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\t\t\t'flex-grow font-medium bg-transparent border-none outline-none border-transparent focus:ring-0 py-0',\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t? disabledClassNames[ variant ]\n\t\t\t\t\t\t\t: [\n\t\t\t\t\t\t\t\t'text-field-placeholder focus-within:text-field-input group-hover:text-field-input',\n\t\t\t\t\t\t\t\t'placeholder:text-field-placeholder',\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t\tdisabled={ disabled }\n\t\t\t\t\tvalue={ searchTerm }\n\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\tplaceholder={ placeholder }\n\t\t\t\t\t// Omit custom props that are not valid for input\n\t\t\t\t\t{ ...omit( props, [\n\t\t\t\t\t\t'size',\n\t\t\t\t\t\t'open',\n\t\t\t\t\t\t'onOpenChange',\n\t\t\t\t\t\t'loading',\n\t\t\t\t\t] ) }\n\t\t\t\t/>\n\t\t\t\t<Badge\n\t\t\t\t\tlabel={ `âŒ˜/` }\n\t\t\t\t\tsize={ badgeSize }\n\t\t\t\t\ttype=\"rounded\"\n\t\t\t\t\tvariant=\"neutral\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n);\nSearchBoxInput.displayName = 'SearchBox.Input';\n\n// Define props for SearchBoxContent\nexport interface SearchBoxContentProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Root element where the dropdown will be rendered. */\n\tdropdownPortalRoot?: HTMLElement | null;\n\n\t/** Id of the dropdown portal where the dropdown will be rendered. */\n\tdropdownPortalId?: string;\n\n\t/** Child components to be rendered inside the dropdown. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxContent = ( {\n\tclassName,\n\tdropdownPortalRoot = null, // Root element where the dropdown will be rendered.\n\tdropdownPortalId = '', // Id of the dropdown portal where the dropdown will be rendered.\n\tchildren,\n\t...props\n}: SearchBoxContentProps ) => {\n\tconst { size, open, refs, floatingStyles, getFloatingProps } =\n\t\tuseSearchContext();\n\n\tif ( ! open ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<FloatingPortal id={ dropdownPortalId } root={ dropdownPortalRoot }>\n\t\t\t<div\n\t\t\t\tref={ refs!.setFloating }\n\t\t\t\tstyle={ {\n\t\t\t\t\t...floatingStyles,\n\t\t\t\t} }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'bg-background-primary rounded-md border border-solid border-border-subtle shadow-soft-shadow-lg overflow-y-auto text-wrap',\n\t\t\t\t\tsizeClassNames.dialog[ size! ],\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\t{ ...getFloatingProps!() }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t</FloatingPortal>\n\t);\n};\nSearchBoxContent.displayName = 'SearchBox.Content';\n\n// Define props for SearchBoxList\nexport interface SearchBoxListProps {\n\t/** Whether to filter children based on the search term. */\n\tfilter?: boolean;\n\n\t/** Child components to be rendered. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxList = ( {\n\tfilter = true,\n\tchildren,\n}: SearchBoxListProps ) => {\n\tconst { searchTerm, isLoading } = useSearchContext();\n\n\tif ( ! filter ) {\n\t\treturn <div>{ children }</div>;\n\t}\n\tconst filteredChildren = Children.toArray( children )\n\t\t.map( ( child ) => {\n\t\t\tif ( React.isValidElement( child ) && child.type === SearchBoxGroup ) {\n\t\t\t\tconst filteredItems = Children.toArray(\n\t\t\t\t\tchild.props.children\n\t\t\t\t).filter(\n\t\t\t\t\t( item ) =>\n\t\t\t\t\t\tReact.isValidElement( item ) &&\n\t\t\t\t\t\ttypeof item.props.children === 'string' &&\n\t\t\t\t\t\titem.props.children\n\t\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t\t.includes( searchTerm!.toLowerCase() )\n\t\t\t\t);\n\t\t\t\treturn filteredItems.length > 0\n\t\t\t\t\t? cloneElement( child as React.ReactElement, {\n\t\t\t\t\t\tchildren: filteredItems,\n\t\t\t\t\t} )\n\t\t\t\t\t: null;\n\t\t\t}\n\t\t\treturn child;\n\t\t} )\n\t\t.filter( Boolean );\n\n\tif ( isLoading ) {\n\t\treturn <SearchBoxLoading />;\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{ filteredChildren.some(\n\t\t\t\t( child ) =>\n\t\t\t\t\tReact.isValidElement( child ) &&\n\t\t\t\t\tchild.type !== SearchBoxSeparator\n\t\t\t) ? (\n\t\t\t\t\tfilteredChildren\n\t\t\t\t) : (\n\t\t\t\t\t<SearchBoxEmpty />\n\t\t\t\t) }\n\t\t</div>\n\t);\n};\nSearchBoxList.displayName = 'SearchBox.List';\n\n// Define props for SearchBoxEmpty\nexport interface SearchBoxEmptyProps {\n\t/** Content to display when there are no results. */\n\tchildren?: ReactNode;\n}\n\nexport const SearchBoxEmpty = ( {\n\tchildren = 'No results found.',\n}: SearchBoxEmptyProps ) => {\n\tconst { size } = useSearchContext();\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'flex justify-center items-center',\n\t\t\t\tsizeClassNames.item[ size! ],\n\t\t\t\t'text-text-tertiary p-4'\n\t\t\t) }\n\t\t>\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nSearchBoxEmpty.displayName = 'SearchBox.Empty';\n\n// Define props for SearchBoxGroup\nexport interface SearchBoxGroupProps {\n\t/** Heading for the group. */\n\theading?: string;\n\n\t/** Child components to be rendered in the group. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxGroup = ( { heading, children }: SearchBoxGroupProps ) => {\n\tconst { size } = useSearchContext();\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\tsizeClassNames.content[ size as 'sm' | 'md' | 'lg' ],\n\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t) }\n\t\t>\n\t\t\t{ heading && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\tsizeClassNames.title[ size! ],\n\t\t\t\t\t\t'text-text-secondary'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ heading }\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t{ children }\n\t\t</div>\n\t);\n};\nSearchBoxGroup.displayName = 'SearchBox.Group';\n\n// Define props for SearchBoxItem\nexport interface SearchBoxItemProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n\n\t/** Icon to display next to the item. */\n\ticon?: ReactNode;\n\n\t/** Child components to be rendered. */\n\tchildren: ReactNode;\n}\n\nexport const SearchBoxItem = forwardRef<HTMLDivElement, SearchBoxItemProps>(\n\t( { className, icon, children, ...props }, ref ) => {\n\t\tconst { size } = useSearchContext();\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\t'flex items-center justify-start gap-1 p-1 hover:bg-background-secondary focus:bg-background-secondary cursor-pointer',\n\t\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t\t) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ icon && (\n\t\t\t\t\t<span\n\t\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t\tsizeClassNames.icon[ size! ],\n\t\t\t\t\t\t\t'flex items-center justify-center'\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ icon }\n\t\t\t\t\t</span>\n\t\t\t\t) }\n\t\t\t\t<span\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'flex-grow p-1 font-normal cursor-pointer',\n\t\t\t\t\t\tsizeClassNames.item[ size! ],\n\t\t\t\t\t\tclassName\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\t}\n);\nSearchBoxItem.displayName = 'SearchBox.Item';\n\n// Define props for SearchBoxLoading\nexport interface SearchBoxLoadingProps {\n\t/** Loading icon to display while loading. */\n\tloadingIcon?: ReactNode & { size?: string };\n}\n\nexport const SearchBoxLoading = ( {\n\tloadingIcon = <Loader />,\n}: SearchBoxLoadingProps ) => {\n\tconst { size } = useSearchContext();\n\n\t// Clone the loadingIcon element to pass the size prop\n\tconst loadingIconWithSize = React.isValidElement( loadingIcon )\n\t\t? cloneElement( loadingIcon, { size } )\n\t\t: loadingIcon;\n\treturn (\n\t\t<div\n\t\t\tclassName={ cn(\n\t\t\t\t'flex justify-center p-4',\n\t\t\t\ttextSizeClassNames[ size! ],\n\t\t\t\tsizeClassNames.item[ size! ]\n\t\t\t) }\n\t\t>\n\t\t\t{ loadingIconWithSize }\n\t\t</div>\n\t);\n};\nSearchBoxLoading.displayName = 'SearchBox.Loading';\n\n// Define props for SearchBoxSeparator\nexport interface SearchBoxSeparatorProps {\n\t/** Additional class names for styling. */\n\tclassName?: string;\n}\n\nexport const SearchBoxSeparator = forwardRef<\n\tHTMLHRElement,\n\tSearchBoxSeparatorProps\n>( ( { className, ...props }, ref ) => (\n\t<hr\n\t\tref={ ref }\n\t\tclassName={ cn(\n\t\t\t'border-0 border-t border-border-subtle border-solid m-0',\n\t\t\tclassName\n\t\t) }\n\t\t{ ...props }\n\t/>\n) );\nSearchBoxSeparator.displayName = 'SearchBox.Separator';\n\nSearchBox.Input = SearchBoxInput;\nSearchBox.Loading = SearchBoxLoading;\nSearchBox.Separator = SearchBoxSeparator;\nSearchBox.Content = SearchBoxContent;\nSearchBox.List = SearchBoxList;\nSearchBox.Empty = SearchBoxEmpty;\nSearchBox.Group = SearchBoxGroup;\nSearchBox.Item = SearchBoxItem;\n\nexport default SearchBox;\n"],"names":["SearchContext","createContext","useSearchContext","useContext","SearchBox","forwardRef","className","size","open","onOpenChange","loading","props","ref","searchTerm","setSearchTerm","useState","isLoading","setIsLoading","refs","floatingStyles","context","useFloating","autoUpdate","offset","flip","floatingSize","rects","elements","availableHeight","dismiss","useDismiss","getReferenceProps","getFloatingProps","useInteractions","useEffect","operatingSystem","getOperatingSystem","handleKeyDown","event","metaOrCtrlKey","inputElement","jsx","cn","SearchBoxInput","type","placeholder","variant","disabled","onChange","badgeSize","handleChange","newValue","jsxs","variantClassNames","sizeClassNames","disabledClassNames","textSizeClassNames","iconClasses","Search","omit","Badge","SearchBoxContent","dropdownPortalRoot","dropdownPortalId","children","FloatingPortal","SearchBoxList","filter","filteredChildren","Children","child","React","SearchBoxGroup","filteredItems","item","cloneElement","SearchBoxLoading","SearchBoxSeparator","SearchBoxEmpty","heading","SearchBoxItem","icon","loadingIcon","Loader","loadingIconWithSize"],"mappings":"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"}