{"version":3,"file":"utils.es.js","sources":["../../../src/components/toaster/utils.tsx"],"sourcesContent":["import React, { cloneElement, isValidElement } from 'react';\nimport { Check, Info, AlertTriangle, Trash2 } from 'lucide-react';\nimport { cn } from '@/utilities/functions';\nimport Button from '../button';\n\nconst DEFAULT_THEME = 'light';\nconst DEFAULT_VARIANT = 'neutral';\nconst DEFAULT_ACTION_TYPE = 'button';\n\nexport const getIconColor = ( {\n\ttheme = DEFAULT_THEME,\n\tvariant = DEFAULT_VARIANT,\n} ) => {\n\tlet color = theme === 'light' ? 'text-icon-secondary' : 'text-icon-inverse';\n\tconst variantClasses = {\n\t\tinfo:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-info'\n\t\t\t\t: 'text-support-info-inverse',\n\t\tsuccess:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-success'\n\t\t\t\t: 'text-support-success-inverse',\n\t\twarning:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-warning'\n\t\t\t\t: 'text-support-warning-inverse',\n\t\terror:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-error'\n\t\t\t\t: 'text-support-error-inverse',\n\t};\n\tcolor = variantClasses[ variant as keyof typeof variantClasses ] || color;\n\n\treturn color;\n};\n\nexport const getIcon = ( {\n\ticon,\n\ttheme = DEFAULT_THEME,\n\tvariant = DEFAULT_VARIANT,\n}: {\n\ticon?: React.ReactElement | null;\n\ttheme?: string;\n\tvariant?: string;\n} ) => {\n\tconst commonClasses = '[&>svg]:h-5 [&>svg]:w-5';\n\tconst color = getIconColor( { theme, variant } );\n\n\tif ( icon && isValidElement( icon ) ) {\n\t\tconst updatedIcon = cloneElement( icon as React.ReactElement, {\n\t\t\tclassName: cn(\n\t\t\t\tcommonClasses,\n\t\t\t\tcolor,\n\t\t\t\t( icon as React.ReactElement )?.props?.className ?? ''\n\t\t\t),\n\t\t} );\n\t\treturn updatedIcon;\n\t}\n\n\tconst icons = {\n\t\tneutral: <Info className={ cn( commonClasses, color ) } />,\n\t\tinfo: <Info className={ cn( commonClasses, color ) } />,\n\t\tsuccess: <Check className={ cn( commonClasses, color ) } />,\n\t\twarning: <AlertTriangle className={ cn( commonClasses, color ) } />,\n\t\terror: <Trash2 className={ cn( commonClasses, color ) } />,\n\t};\n\n\treturn icons[ variant as keyof typeof icons ] || icons.neutral;\n};\n\nexport const getAction = ( {\n\tactionType = DEFAULT_ACTION_TYPE,\n\tonAction = () => {},\n\tactionLabel = '',\n\ttheme = DEFAULT_THEME,\n} ) => {\n\tconst commonClassNames =\n\t\t'focus:ring-0 focus:ring-offset-0 ring-offset-0 focus:outline-none';\n\tlet classNames =\n\t\t'text-button-primary border-button-primary hover:border-button-primary hover:text-button-primary-hover';\n\tif ( theme === 'dark' ) {\n\t\tclassNames =\n\t\t\t'text-text-inverse border-text-inverse hover:border-text-inverse hover:text-text-inverse';\n\t}\n\tswitch ( actionType ) {\n\t\tcase 'button':\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\tonClick={ onAction }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'rounded',\n\t\t\t\t\t\tcommonClassNames,\n\t\t\t\t\t\tclassNames,\n\t\t\t\t\t\ttheme === 'dark'\n\t\t\t\t\t\t\t? 'bg-transparent hover:bg-transparent'\n\t\t\t\t\t\t\t: 'bg-white hover:bg-white'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ actionLabel }\n\t\t\t\t</Button>\n\t\t\t);\n\t\tcase 'link':\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\tonClick={ onAction }\n\t\t\t\t\tclassName={ cn( commonClassNames, classNames ) }\n\t\t\t\t>\n\t\t\t\t\t{ actionLabel }\n\t\t\t\t</Button>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport const getTitle = ( {\n\ttheme = DEFAULT_THEME,\n\ttitle = '',\n\tinline = false,\n}: {\n\ttheme?: string;\n\ttitle?: string | React.ReactNode;\n\tinline?: boolean;\n} ): React.JSX.Element | null => {\n\tif ( ! title ) {\n\t\treturn null;\n\t}\n\tconst titleClasses = {\n\t\tlight: 'text-text-primary',\n\t\tdark: 'text-text-inverse',\n\t};\n\treturn (\n\t\t<span\n\t\t\tclassName={ cn(\n\t\t\t\t'block',\n\t\t\t\ttitleClasses[ theme as keyof typeof titleClasses ],\n\t\t\t\t'text-sm leading-5 font-semibold',\n\t\t\t\tinline ? 'inline' : 'block'\n\t\t\t) }\n\t\t>\n\t\t\t{ title }\n\t\t</span>\n\t);\n};\n\nexport const getContent = ( {\n\ttheme = DEFAULT_THEME,\n\tcontent = '',\n\tinline = false,\n}: {\n\ttheme?: string;\n\tcontent?: string | React.ReactNode;\n\tinline?: boolean;\n} ): React.JSX.Element | null => {\n\tif ( ! content ) {\n\t\treturn null;\n\t}\n\tconst contentClasses = {\n\t\tlight: 'text-text-primary',\n\t\tdark: 'text-text-inverse',\n\t};\n\treturn (\n\t\t<span\n\t\t\tclassName={ cn(\n\t\t\t\tcontentClasses[ theme as keyof typeof contentClasses ],\n\t\t\t\t'block text-sm [&_*]:text-sm leading-5 [&_*]:leading-5 font-normal [word-break:break-word]',\n\t\t\t\tinline ? 'inline' : 'block'\n\t\t\t) }\n\t\t>\n\t\t\t{ content }\n\t\t</span>\n\t);\n};\n\n/**\n * Merge all refs into a single function.\n * @param {...Function} refs\n *\n * @return {Function} A function that will call all refs with the node.\n */\ninterface MergeRefs {\n\t( node: HTMLElement | null ): void;\n}\n\nexport const mergeRefs = (\n\t...refs: ( React.Ref<HTMLElement> | undefined )[]\n): MergeRefs => {\n\treturn ( node: HTMLElement | null ) => {\n\t\trefs.forEach( ( ref ) => {\n\t\t\tif ( typeof ref === 'function' ) {\n\t\t\t\tref( node );\n\t\t\t} else if ( ref ) {\n\t\t\t\t( ref as React.MutableRefObject<HTMLElement | null> ).current =\n\t\t\t\t\tnode;\n\t\t\t}\n\t\t} );\n\t};\n};\n"],"names":["DEFAULT_THEME","DEFAULT_VARIANT","DEFAULT_ACTION_TYPE","getIconColor","theme","variant","color","getIcon","icon","commonClasses","isValidElement","cloneElement","cn","icons","jsx","Info","Check","AlertTriangle","Trash2","getAction","actionType","onAction","actionLabel","commonClassNames","classNames","Button","getTitle","title","inline","getContent","content","mergeRefs","refs","node","ref"],"mappings":";;;;;AAKA,MAAMA,IAAgB,SAChBC,IAAkB,WAClBC,IAAsB,UAEfC,IAAe,CAAE;AAAA,EAC7B,OAAAC,IAAQJ;AAAA,EACR,SAAAK,IAAUJ;AACX,MAAO;AACF,MAAAK,IAAQF,MAAU,UAAU,wBAAwB;AAmBhD,SAAAE,IAlBe;AAAA,IACtB,MACCF,MAAU,UACP,sBACA;AAAA,IACJ,SACCA,MAAU,UACP,yBACA;AAAA,IACJ,SACCA,MAAU,UACP,yBACA;AAAA,IACJ,OACCA,MAAU,UACP,uBACA;AAAA,EACL,EACwBC,CAAuC,KAAKC,GAE7DA;AACR,GAEaC,IAAU,CAAE;AAAA,EACxB,MAAAC;AAAA,EACA,OAAAJ,IAAQJ;AAAA,EACR,SAAAK,IAAUJ;AACX,MAIO;AACN,QAAMQ,IAAgB,2BAChBH,IAAQH,EAAc,EAAE,OAAAC,GAAO,SAAAC,GAAU;AAE1C,MAAAG,KAAQE,EAAgBF,CAAK;AAQ1B,WAPaG,EAAcH,GAA4B;AAAA,MAC7D,WAAWI;AAAA,QACVH;AAAA,QACAH;AAAA,QACEE,GAA8B,OAAO,aAAa;AAAA,MAAA;AAAA,IACrD,CACC;AAIH,QAAMK,IAAQ;AAAA,IACb,SAAU,gBAAAC,EAAAC,GAAA,EAAK,WAAYH,EAAIH,GAAeH,CAAM,GAAI;AAAA,IACxD,MAAO,gBAAAQ,EAAAC,GAAA,EAAK,WAAYH,EAAIH,GAAeH,CAAM,GAAI;AAAA,IACrD,SAAU,gBAAAQ,EAAAE,GAAA,EAAM,WAAYJ,EAAIH,GAAeH,CAAM,GAAI;AAAA,IACzD,SAAU,gBAAAQ,EAAAG,GAAA,EAAc,WAAYL,EAAIH,GAAeH,CAAM,GAAI;AAAA,IACjE,OAAQ,gBAAAQ,EAAAI,GAAA,EAAO,WAAYN,EAAIH,GAAeH,CAAM,EAAI,CAAA;AAAA,EACzD;AAEO,SAAAO,EAAOR,CAA8B,KAAKQ,EAAM;AACxD,GAEaM,IAAY,CAAE;AAAA,EAC1B,YAAAC,IAAalB;AAAA,EACb,UAAAmB,IAAW,MAAM;AAAA,EAAC;AAAA,EAClB,aAAAC,IAAc;AAAA,EACd,OAAAlB,IAAQJ;AACT,MAAO;AACN,QAAMuB,IACL;AACD,MAAIC,IACH;AAKD,UAJKpB,MAAU,WAEboB,IAAA,4FAEOJ,GAAa;AAAA,IACrB,KAAK;AAEH,aAAA,gBAAAN;AAAA,QAACW;AAAA,QAAA;AAAA,UACA,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAUJ;AAAA,UACV,WAAYT;AAAA,YACX;AAAA,YACAW;AAAA,YACAC;AAAA,YACApB,MAAU,SACP,wCACA;AAAA,UACJ;AAAA,UAEE,UAAAkB;AAAA,QAAA;AAAA,MACH;AAAA,IAEF,KAAK;AAEH,aAAA,gBAAAR;AAAA,QAACW;AAAA,QAAA;AAAA,UACA,SAAQ;AAAA,UACR,MAAK;AAAA,UACL,SAAUJ;AAAA,UACV,WAAYT,EAAIW,GAAkBC,CAAW;AAAA,UAE3C,UAAAF;AAAA,QAAA;AAAA,MACH;AAAA,IAEF;AACQ,aAAA;AAAA,EAAA;AAEV,GAEaI,IAAW,CAAE;AAAA,EACzB,OAAAtB,IAAQJ;AAAA,EACR,OAAA2B,IAAQ;AAAA,EACR,QAAAC,IAAS;AACV,MAKQD,IAQN,gBAAAb;AAAA,EAAC;AAAA,EAAA;AAAA,IACA,WAAYF;AAAA,MACX;AAAA,MAPkB;AAAA,QACpB,OAAO;AAAA,QACP,MAAM;AAAA,MACP,EAKiBR,CAAmC;AAAA,MACjD;AAAA,MACAwB,IAAS,WAAW;AAAA,IACrB;AAAA,IAEE,UAAAD;AAAA,EAAA;AACH,IAhBO,MAoBIE,IAAa,CAAE;AAAA,EAC3B,OAAAzB,IAAQJ;AAAA,EACR,SAAA8B,IAAU;AAAA,EACV,QAAAF,IAAS;AACV,MAKQE,IAQN,gBAAAhB;AAAA,EAAC;AAAA,EAAA;AAAA,IACA,WAAYF;AAAA,MANS;AAAA,QACtB,OAAO;AAAA,QACP,MAAM;AAAA,MACP,EAImBR,CAAqC;AAAA,MACrD;AAAA,MACAwB,IAAS,WAAW;AAAA,IACrB;AAAA,IAEE,UAAAE;AAAA,EAAA;AACH,IAfO,MA6BIC,IAAY,IACrBC,MAEI,CAAEC,MAA8B;AACjC,EAAAD,EAAA,QAAS,CAAEE,MAAS;AACnB,IAAA,OAAOA,KAAQ,aACnBA,EAAKD,CAAK,IACCC,MACTA,EAAoD,UACrDD;AAAA,EACF,CACC;AACH;"}