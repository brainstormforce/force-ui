{"version":3,"file":"utils.cjs.js","sources":["../../../src/components/toaster/utils.tsx"],"sourcesContent":["import React, { cloneElement, isValidElement } from 'react';\nimport { Check, Info, AlertTriangle, Trash2 } from 'lucide-react';\nimport { cn } from '@/utilities/functions';\nimport Button from '../button';\n\nconst DEFAULT_THEME = 'light';\nconst DEFAULT_VARIANT = 'neutral';\nconst DEFAULT_ACTION_TYPE = 'button';\n\nexport const getIconColor = ( {\n\ttheme = DEFAULT_THEME,\n\tvariant = DEFAULT_VARIANT,\n} ) => {\n\tlet color = theme === 'light' ? 'text-icon-secondary' : 'text-icon-inverse';\n\tconst variantClasses = {\n\t\tinfo:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-info'\n\t\t\t\t: 'text-support-info-inverse',\n\t\tsuccess:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-success'\n\t\t\t\t: 'text-support-success-inverse',\n\t\twarning:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-warning'\n\t\t\t\t: 'text-support-warning-inverse',\n\t\terror:\n\t\t\ttheme === 'light'\n\t\t\t\t? 'text-support-error'\n\t\t\t\t: 'text-support-error-inverse',\n\t};\n\tcolor = variantClasses[ variant as keyof typeof variantClasses ] || color;\n\n\treturn color;\n};\n\nexport const getIcon = ( {\n\ticon,\n\ttheme = DEFAULT_THEME,\n\tvariant = DEFAULT_VARIANT,\n}: {\n\ticon?: React.ReactElement | null;\n\ttheme?: string;\n\tvariant?: string;\n} ) => {\n\tconst commonClasses = '[&>svg]:h-5 [&>svg]:w-5';\n\tconst color = getIconColor( { theme, variant } );\n\n\tif ( icon && isValidElement( icon ) ) {\n\t\tconst updatedIcon = cloneElement( icon as React.ReactElement, {\n\t\t\tclassName: cn(\n\t\t\t\tcommonClasses,\n\t\t\t\tcolor,\n\t\t\t\t( icon as React.ReactElement )?.props?.className ?? ''\n\t\t\t),\n\t\t} );\n\t\treturn updatedIcon;\n\t}\n\n\tconst icons = {\n\t\tneutral: <Info className={ cn( commonClasses, color ) } />,\n\t\tinfo: <Info className={ cn( commonClasses, color ) } />,\n\t\tsuccess: <Check className={ cn( commonClasses, color ) } />,\n\t\twarning: <AlertTriangle className={ cn( commonClasses, color ) } />,\n\t\terror: <Trash2 className={ cn( commonClasses, color ) } />,\n\t};\n\n\treturn icons[ variant as keyof typeof icons ] || icons.neutral;\n};\n\nexport const getAction = ( {\n\tactionType = DEFAULT_ACTION_TYPE,\n\tonAction = () => {},\n\tactionLabel = '',\n\ttheme = DEFAULT_THEME,\n} ) => {\n\tconst commonClassNames =\n\t\t'focus:ring-0 focus:ring-offset-0 ring-offset-0 focus:outline-none';\n\tlet classNames =\n\t\t'text-button-primary border-button-primary hover:border-button-primary hover:text-button-primary-hover';\n\tif ( theme === 'dark' ) {\n\t\tclassNames =\n\t\t\t'text-text-inverse border-text-inverse hover:border-text-inverse hover:text-text-inverse';\n\t}\n\tswitch ( actionType ) {\n\t\tcase 'button':\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\tonClick={ onAction }\n\t\t\t\t\tclassName={ cn(\n\t\t\t\t\t\t'rounded',\n\t\t\t\t\t\tcommonClassNames,\n\t\t\t\t\t\tclassNames,\n\t\t\t\t\t\ttheme === 'dark'\n\t\t\t\t\t\t\t? 'bg-transparent hover:bg-transparent'\n\t\t\t\t\t\t\t: 'bg-white hover:bg-white'\n\t\t\t\t\t) }\n\t\t\t\t>\n\t\t\t\t\t{ actionLabel }\n\t\t\t\t</Button>\n\t\t\t);\n\t\tcase 'link':\n\t\t\treturn (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\tsize=\"xs\"\n\t\t\t\t\tonClick={ onAction }\n\t\t\t\t\tclassName={ cn( commonClassNames, classNames ) }\n\t\t\t\t>\n\t\t\t\t\t{ actionLabel }\n\t\t\t\t</Button>\n\t\t\t);\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport const getTitle = ( {\n\ttheme = DEFAULT_THEME,\n\ttitle = '',\n\tinline = false,\n}: {\n\ttheme?: string;\n\ttitle?: string | React.ReactNode;\n\tinline?: boolean;\n} ): React.JSX.Element | null => {\n\tif ( ! title ) {\n\t\treturn null;\n\t}\n\tconst titleClasses = {\n\t\tlight: 'text-text-primary',\n\t\tdark: 'text-text-inverse',\n\t};\n\treturn (\n\t\t<span\n\t\t\tclassName={ cn(\n\t\t\t\t'block',\n\t\t\t\ttitleClasses[ theme as keyof typeof titleClasses ],\n\t\t\t\t'text-sm leading-5 font-semibold',\n\t\t\t\tinline ? 'inline' : 'block'\n\t\t\t) }\n\t\t>\n\t\t\t{ title }\n\t\t</span>\n\t);\n};\n\nexport const getContent = ( {\n\ttheme = DEFAULT_THEME,\n\tcontent = '',\n\tinline = false,\n}: {\n\ttheme?: string;\n\tcontent?: string | React.ReactNode;\n\tinline?: boolean;\n} ): React.JSX.Element | null => {\n\tif ( ! content ) {\n\t\treturn null;\n\t}\n\tconst contentClasses = {\n\t\tlight: 'text-text-primary',\n\t\tdark: 'text-text-inverse',\n\t};\n\treturn (\n\t\t<span\n\t\t\tclassName={ cn(\n\t\t\t\tcontentClasses[ theme as keyof typeof contentClasses ],\n\t\t\t\t'block text-sm [&_*]:text-sm leading-5 [&_*]:leading-5 font-normal',\n\t\t\t\tinline ? 'inline' : 'block'\n\t\t\t) }\n\t\t>\n\t\t\t{ content }\n\t\t</span>\n\t);\n};\n\n/**\n * Merge all refs into a single function.\n * @param {...Function} refs\n *\n * @return {Function} A function that will call all refs with the node.\n */\ninterface MergeRefs {\n\t( node: HTMLElement | null ): void;\n}\n\nexport const mergeRefs = (\n\t...refs: ( React.Ref<HTMLElement> | undefined )[]\n): MergeRefs => {\n\treturn ( node: HTMLElement | null ) => {\n\t\trefs.forEach( ( ref ) => {\n\t\t\tif ( typeof ref === 'function' ) {\n\t\t\t\tref( node );\n\t\t\t} else if ( ref ) {\n\t\t\t\t( ref as React.MutableRefObject<HTMLElement | null> ).current =\n\t\t\t\t\tnode;\n\t\t\t}\n\t\t} );\n\t};\n};\n"],"names":["DEFAULT_THEME","DEFAULT_VARIANT","DEFAULT_ACTION_TYPE","getIconColor","theme","variant","color","getIcon","icon","commonClasses","isValidElement","cloneElement","cn","icons","jsx","Info","Check","AlertTriangle","Trash2","getAction","actionType","onAction","actionLabel","commonClassNames","classNames","Button","getTitle","title","inline","titleClasses","getContent","content","contentClasses","mergeRefs","refs","node","ref"],"mappings":"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"}