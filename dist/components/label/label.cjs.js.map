{"version":3,"file":"label.cjs.js","sources":["../../../src/components/label/label.tsx"],"sourcesContent":["import { cn } from '@/utilities/functions';\nimport React, { type ElementType, forwardRef, type ReactNode } from 'react';\n\nexport interface LabelProps {\n\t/** The content of the label. */\n\tchildren: ReactNode;\n\t/** Defines the HTML tag to use for the label. */\n\ttag?: string | ElementType;\n\t/** Defines the size of the label. */\n\tsize?: 'xs' | 'sm' | 'md';\n\t/** Defines the extra classes. */\n\tclassName?: string;\n\t/** Defines the style variant of the label. */\n\tvariant?: 'neutral' | 'help' | 'error' | 'disabled';\n\t/** Defines if the label is required. */\n\trequired?: boolean;\n}\n\nconst Label = forwardRef(\n\t<T extends object>(\n\t\t{\n\t\t\tchildren = null,\n\t\t\ttag: Tag = 'label',\n\t\t\tsize = 'sm', // xs, sm, md\n\t\t\tclassName = '',\n\t\t\tvariant = 'neutral', // neutral, help, error, disabled\n\t\t\trequired = false,\n\t\t\t...props\n\t\t}: LabelProps & T,\n\t\tref: React.Ref<HTMLElement>\n\t) => {\n\t\t// Base classes. - Mandatory classes.\n\t\tconst baseClasses =\n\t\t\t'font-medium text-field-label flex items-center gap-0.5';\n\n\t\t// Size classes - Based on the size prop.\n\t\tconst sizeClasses = {\n\t\t\txs: 'text-xs [&>*]:text-xs [&>svg]:h-3 [&>svg]:w-3',\n\t\t\tsm: 'text-sm [&>*]:text-sm [&>svg]:h-4 [&>svg]:w-4',\n\t\t\tmd: 'text-base [&>*]:text-base [&>svg]:h-5 [&>svg]:w-5',\n\t\t};\n\n\t\t// Variant classes - Based on the variant prop.\n\t\tconst variantClasses = {\n\t\t\tneutral: 'text-field-label [&>*]:text-field-label',\n\t\t\thelp: 'text-field-helper [&>*]:text-field-helper',\n\t\t\terror: 'text-support-error [&>*]:text-support-error',\n\t\t\tdisabled:\n\t\t\t\t'text-field-color-disabled disabled cursor-not-allowed [&>*]:text-field-color-disabled',\n\t\t};\n\n\t\tconst fontWeightClassNames: Record<string, string> = {\n\t\t\tneutral: '',\n\t\t\thelp: 'font-normal',\n\t\t\terror: 'font-normal',\n\t\t\tdisabled: '',\n\t\t};\n\n\t\tif ( ! children ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet requiredClasses = '';\n\n\t\tif ( required ) {\n\t\t\trequiredClasses =\n\t\t\t\t\"after:content-['*'] after:text-field-required after:ml-0.5\";\n\t\t}\n\n\t\treturn (\n\t\t\t<Tag\n\t\t\t\tref={ ref }\n\t\t\t\tclassName={ cn(\n\t\t\t\t\tbaseClasses,\n\t\t\t\t\tsizeClasses[ size ],\n\t\t\t\t\tvariantClasses[ variant ],\n\t\t\t\t\trequiredClasses,\n\t\t\t\t\tfontWeightClassNames?.[ variant ],\n\t\t\t\t\tclassName\n\t\t\t\t) }\n\t\t\t\t{ ...props }\n\t\t\t>\n\t\t\t\t{ children }\n\t\t\t</Tag>\n\t\t);\n\t}\n);\n\nLabel.displayName = 'Label';\n\nexport default Label as <T extends object>(\n\tprops: LabelProps & T,\n\tref: React.Ref<HTMLElement>\n) => React.ReactNode;\n"],"names":["Label","forwardRef","children","Tag","size","className","variant","required","props","ref","baseClasses","sizeClasses","variantClasses","fontWeightClassNames","requiredClasses","jsx","cn"],"mappings":"kNAkBMA,EAAQC,EAAA,WACb,CACC,CACC,SAAAC,EAAW,KACX,IAAKC,EAAM,QACX,KAAAC,EAAO,KACP,UAAAC,EAAY,GACZ,QAAAC,EAAU,UACV,SAAAC,EAAW,GACX,GAAGC,GAEJC,IACI,CAEJ,MAAMC,EACL,yDAGKC,EAAc,CACnB,GAAI,gDACJ,GAAI,gDACJ,GAAI,mDACL,EAGMC,EAAiB,CACtB,QAAS,0CACT,KAAM,4CACN,MAAO,8CACP,SACC,uFACF,EAEMC,EAA+C,CACpD,QAAS,GACT,KAAM,cACN,MAAO,cACP,SAAU,EACX,EAEA,GAAK,CAAEX,EACC,OAAA,KAGR,IAAIY,EAAkB,GAEtB,OAAKP,IAEHO,EAAA,8DAIDC,EAAA,IAACZ,EAAA,CACA,IAAAM,EACA,UAAYO,EAAA,GACXN,EACAC,EAAaP,CAAK,EAClBQ,EAAgBN,CAAQ,EACxBQ,EACAD,IAAwBP,CAAQ,EAChCD,CACD,EACE,GAAGG,EAEH,SAAAN,CAAA,CACH,CAAA,CAGH,EAEAF,EAAM,YAAc"}